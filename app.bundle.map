{"version":3,"sources":["webpack:///webpack/bootstrap 8fc8445632362a2b9032","webpack:///./node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/ramda/es/internal/_xfBase.js","webpack:///./src/external/sanctuary/Sanctuary.ts","webpack:///./node_modules/ramda/es/curryN.js","webpack:///./node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ramda/es/map.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/equals.js","webpack:///./node_modules/typescript-collections/dist/lib/util.js","webpack:///./node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/ramda/es/slice.js","webpack:///./node_modules/flatbuffers/js/flatbuffers.js","webpack:///./node_modules/gl-matrix/src/gl-matrix.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ramda/es/keys.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/partial.lenses/dist/partial.lenses.es.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./src/lib/matrix/Matrix.ts","webpack:///./node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/ramda/es/internal/_reduced.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/lib/vector/Vector.ts","webpack:///./node_modules/ramda/es/always.js","webpack:///./node_modules/ramda/es/max.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/typescript-collections/dist/lib/Dictionary.js","webpack:///./src/lib/Drift.ts","webpack:///./src/flatbuffers/Flatbuffers.ts","webpack:///./node_modules/ramda/es/pluck.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ramda/es/toString.js","webpack:///./node_modules/ramda/es/nth.js","webpack:///./node_modules/ramda/es/invoker.js","webpack:///./node_modules/typescript-collections/dist/lib/arrays.js","webpack:///./src/flatbuffers/Matrix4_generated.ts","webpack:///./node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/ramda/es/add.js","webpack:///./node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/assoc.js","webpack:///./node_modules/ramda/es/nAry.js","webpack:///./node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/ramda/es/lift.js","webpack:///./node_modules/ramda/es/reverse.js","webpack:///./node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/ramda/es/reject.js","webpack:///./node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/ramda/es/flip.js","webpack:///./node_modules/ramda/es/lens.js","webpack:///./node_modules/ramda/es/mergeDeepWithKey.js","webpack:///./node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/sanctuary-type-identifiers/index.js","webpack:///./src/lib/transform/Transform.ts","webpack:///./src/lib/state/State-Accessors.ts","webpack:///./node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/ramda/es/prop.js","webpack:///./node_modules/ramda/es/ap.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/curry.js","webpack:///./node_modules/ramda/es/chain.js","webpack:///./node_modules/ramda/es/type.js","webpack:///./node_modules/ramda/es/compose.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/concat.js","webpack:///./node_modules/ramda/es/filter.js","webpack:///./node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/ramda/es/update.js","webpack:///./node_modules/ramda/es/take.js","webpack:///./node_modules/ramda/es/identity.js","webpack:///./node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ramda/es/uniq.js","webpack:///./node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/ramda/es/mergeWithKey.js","webpack:///./node_modules/typescript-collections/dist/lib/LinkedList.js","webpack:///./src/app/App-Main.ts","webpack:///./src/lib/camera/Camera.ts","webpack:///./src/lib/camera/Camera-Serializer.ts","webpack:///./src/flatbuffers/Camera_generated.ts","webpack:///./src/lib/matrix/Matrix-Create.ts","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./src/lib/vector/Vector-Create.ts","webpack:///./src/flatbuffers/Vector3_generated.ts","webpack:///./src/flatbuffers/Vector4_generated.ts","webpack:///./src/lib/color/Color.ts","webpack:///./src/lib/string/String-Utils.ts","webpack:///./src/lib/headers/Headers-Cors.ts","webpack:///./src/lib/input/Input.ts","webpack:///./src/flatbuffers/Transform_generated.ts","webpack:///./node_modules/ramda/es/adjust.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ramda/es/and.js","webpack:///./node_modules/ramda/es/any.js","webpack:///./node_modules/ramda/es/internal/_xany.js","webpack:///./node_modules/ramda/es/apply.js","webpack:///./node_modules/ramda/es/values.js","webpack:///./node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ramda/es/isNil.js","webpack:///./node_modules/ramda/es/liftN.js","webpack:///./node_modules/ramda/es/internal/_makeFlat.js","webpack:///./node_modules/ramda/es/internal/_clone.js","webpack:///./node_modules/ramda/es/internal/_cloneRegExp.js","webpack:///./node_modules/ramda/es/not.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/composeK.js","webpack:///./node_modules/ramda/es/pipeP.js","webpack:///./node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ramda/es/identical.js","webpack:///./node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/ramda/es/constructN.js","webpack:///./node_modules/ramda/es/converge.js","webpack:///./node_modules/ramda/es/defaultTo.js","webpack:///./node_modules/ramda/es/difference.js","webpack:///./node_modules/ramda/es/differenceWith.js","webpack:///./node_modules/ramda/es/dissoc.js","webpack:///./node_modules/ramda/es/remove.js","webpack:///./node_modules/ramda/es/drop.js","webpack:///./node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ramda/es/dropRepeatsWith.js","webpack:///./node_modules/ramda/es/last.js","webpack:///./node_modules/ramda/es/or.js","webpack:///./node_modules/ramda/es/empty.js","webpack:///./node_modules/ramda/es/takeLast.js","webpack:///./node_modules/ramda/es/uniqBy.js","webpack:///./node_modules/ramda/es/objOf.js","webpack:///./node_modules/ramda/es/is.js","webpack:///./node_modules/ramda/es/juxt.js","webpack:///./node_modules/ramda/es/length.js","webpack:///./node_modules/ramda/es/internal/_isNumber.js","webpack:///./node_modules/ramda/es/mean.js","webpack:///./node_modules/ramda/es/sum.js","webpack:///./node_modules/ramda/es/memoizeWith.js","webpack:///./node_modules/ramda/es/multiply.js","webpack:///./node_modules/ramda/es/over.js","webpack:///./node_modules/ramda/es/internal/_createPartialApplicator.js","webpack:///./node_modules/ramda/es/pickAll.js","webpack:///./node_modules/ramda/es/prepend.js","webpack:///./node_modules/ramda/es/useWith.js","webpack:///./node_modules/ramda/es/reduceRight.js","webpack:///./node_modules/ramda/es/times.js","webpack:///./node_modules/ramda/es/sequence.js","webpack:///./node_modules/ramda/es/uniqWith.js","webpack:///./node_modules/ramda/es/where.js","webpack:///./node_modules/sanctuary-def/index.js","webpack:///./node_modules/sanctuary-type-classes/node_modules/sanctuary-type-identifiers/index.js","webpack:///./src/lib/input/screen/Screen.ts","webpack:///./src/lib/input/screen/Screen-Utils.ts","webpack:///./src/lib/input/pointer/Pointer-Event.ts","webpack:///./src/lib/loaders/Loaders.ts","webpack:///./src/lib/loaders/Loaders-Image.ts","webpack:///./src/lib/webgl/WebGl-Textures.ts","webpack:///./src/lib/math/Math.ts","webpack:///./src/lib/quat/Quat.ts","webpack:///./src/lib/state/State-Transform.ts","webpack:///./src/lib/state/State-Elements.ts","webpack:///./src/lib/renderer/Renderer-WebGl.ts","webpack:///./src/lib/webgl/WebGl.ts","webpack:///./src/lib/sodium/updaters/Sodium-StagedUpdate.ts","webpack:///./node_modules/typescript-collections/dist/lib/Set.js","webpack:///./node_modules/typescript-collections/dist/lib/BSTreeKV.js","webpack:///./node_modules/typescript-collections/dist/lib/Queue.js","webpack:///./node_modules/typescript-collections/dist/lib/Heap.js","webpack:///./node_modules/typescript-collections/dist/lib/FactoryDictionary.js","webpack:///./node_modules/sodiumjs/node_modules/sanctuary-type-identifiers/index.js","webpack:///./src/app/state/State.tsx","webpack:///./src/lib/array/Array.ts","webpack:///./src/lib/matrix/Matrix-Serialize.ts","webpack:///./src/lib/matrix/Matrix-Utils.ts","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./src/lib/camera/Camera-Utils.ts","webpack:///./src/lib/vector/Vector-Serialize.ts","webpack:///./src/lib/color/Color-Data.ts","webpack:///./src/lib/headers/Headers.ts","webpack:///./src/lib/input/Input-Event.ts","webpack:///./src/lib/input/Input-Serialize.ts","webpack:///./src/flatbuffers/InputEvent_generated.ts","webpack:///./src/flatbuffers/ScreenEvent_generated.ts","webpack:///./src/flatbuffers/State_generated.ts","webpack:///./src/flatbuffers/TickEvent_generated.ts","webpack:///./node_modules/ramda/es/F.js","webpack:///./node_modules/ramda/es/T.js","webpack:///./node_modules/ramda/es/__.js","webpack:///./node_modules/ramda/es/addIndex.js","webpack:///./node_modules/ramda/es/all.js","webpack:///./node_modules/ramda/es/internal/_xall.js","webpack:///./node_modules/ramda/es/allPass.js","webpack:///./node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ramda/es/anyPass.js","webpack:///./node_modules/ramda/es/aperture.js","webpack:///./node_modules/ramda/es/internal/_aperture.js","webpack:///./node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/ramda/es/append.js","webpack:///./node_modules/ramda/es/applySpec.js","webpack:///./node_modules/ramda/es/applyTo.js","webpack:///./node_modules/ramda/es/ascend.js","webpack:///./node_modules/ramda/es/binary.js","webpack:///./node_modules/ramda/es/both.js","webpack:///./node_modules/ramda/es/call.js","webpack:///./node_modules/ramda/es/internal/_xchain.js","webpack:///./node_modules/ramda/es/internal/_flatCat.js","webpack:///./node_modules/ramda/es/internal/_forceReduced.js","webpack:///./node_modules/ramda/es/clamp.js","webpack:///./node_modules/ramda/es/clone.js","webpack:///./node_modules/ramda/es/comparator.js","webpack:///./node_modules/ramda/es/complement.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/composeP.js","webpack:///./node_modules/ramda/es/internal/_pipeP.js","webpack:///./node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/ramda/es/cond.js","webpack:///./node_modules/ramda/es/construct.js","webpack:///./node_modules/ramda/es/contains.js","webpack:///./node_modules/ramda/es/countBy.js","webpack:///./node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/ramda/es/dec.js","webpack:///./node_modules/ramda/es/descend.js","webpack:///./node_modules/ramda/es/dissocPath.js","webpack:///./node_modules/ramda/es/divide.js","webpack:///./node_modules/ramda/es/internal/_xdrop.js","webpack:///./node_modules/ramda/es/dropLast.js","webpack:///./node_modules/ramda/es/internal/_dropLast.js","webpack:///./node_modules/ramda/es/internal/_xtake.js","webpack:///./node_modules/ramda/es/internal/_xdropLast.js","webpack:///./node_modules/ramda/es/dropLastWhile.js","webpack:///./node_modules/ramda/es/internal/_dropLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/ramda/es/dropRepeats.js","webpack:///./node_modules/ramda/es/dropWhile.js","webpack:///./node_modules/ramda/es/internal/_xdropWhile.js","webpack:///./node_modules/ramda/es/either.js","webpack:///./node_modules/ramda/es/endsWith.js","webpack:///./node_modules/ramda/es/eqBy.js","webpack:///./node_modules/ramda/es/eqProps.js","webpack:///./node_modules/ramda/es/evolve.js","webpack:///./node_modules/ramda/es/find.js","webpack:///./node_modules/ramda/es/internal/_xfind.js","webpack:///./node_modules/ramda/es/findIndex.js","webpack:///./node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/ramda/es/findLast.js","webpack:///./node_modules/ramda/es/internal/_xfindLast.js","webpack:///./node_modules/ramda/es/findLastIndex.js","webpack:///./node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:///./node_modules/ramda/es/flatten.js","webpack:///./node_modules/ramda/es/forEach.js","webpack:///./node_modules/ramda/es/forEachObjIndexed.js","webpack:///./node_modules/ramda/es/fromPairs.js","webpack:///./node_modules/ramda/es/groupBy.js","webpack:///./node_modules/ramda/es/groupWith.js","webpack:///./node_modules/ramda/es/gt.js","webpack:///./node_modules/ramda/es/gte.js","webpack:///./node_modules/ramda/es/has.js","webpack:///./node_modules/ramda/es/hasIn.js","webpack:///./node_modules/ramda/es/head.js","webpack:///./node_modules/ramda/es/ifElse.js","webpack:///./node_modules/ramda/es/inc.js","webpack:///./node_modules/ramda/es/indexBy.js","webpack:///./node_modules/ramda/es/indexOf.js","webpack:///./node_modules/ramda/es/init.js","webpack:///./node_modules/ramda/es/innerJoin.js","webpack:///./node_modules/ramda/es/insert.js","webpack:///./node_modules/ramda/es/insertAll.js","webpack:///./node_modules/ramda/es/intersection.js","webpack:///./node_modules/ramda/es/internal/_Set.js","webpack:///./node_modules/ramda/es/intersperse.js","webpack:///./node_modules/ramda/es/into.js","webpack:///./node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/invert.js","webpack:///./node_modules/ramda/es/invertObj.js","webpack:///./node_modules/ramda/es/isEmpty.js","webpack:///./node_modules/ramda/es/join.js","webpack:///./node_modules/ramda/es/keysIn.js","webpack:///./node_modules/ramda/es/lastIndexOf.js","webpack:///./node_modules/ramda/es/lensIndex.js","webpack:///./node_modules/ramda/es/lensPath.js","webpack:///./node_modules/ramda/es/lensProp.js","webpack:///./node_modules/ramda/es/lt.js","webpack:///./node_modules/ramda/es/lte.js","webpack:///./node_modules/ramda/es/mapAccum.js","webpack:///./node_modules/ramda/es/mapAccumRight.js","webpack:///./node_modules/ramda/es/mapObjIndexed.js","webpack:///./node_modules/ramda/es/match.js","webpack:///./node_modules/ramda/es/mathMod.js","webpack:///./node_modules/ramda/es/maxBy.js","webpack:///./node_modules/ramda/es/median.js","webpack:///./node_modules/ramda/es/memoize.js","webpack:///./node_modules/ramda/es/merge.js","webpack:///./node_modules/ramda/es/mergeAll.js","webpack:///./node_modules/ramda/es/mergeDeepLeft.js","webpack:///./node_modules/ramda/es/mergeDeepRight.js","webpack:///./node_modules/ramda/es/mergeDeepWith.js","webpack:///./node_modules/ramda/es/mergeWith.js","webpack:///./node_modules/ramda/es/min.js","webpack:///./node_modules/ramda/es/minBy.js","webpack:///./node_modules/ramda/es/modulo.js","webpack:///./node_modules/ramda/es/negate.js","webpack:///./node_modules/ramda/es/none.js","webpack:///./node_modules/ramda/es/nthArg.js","webpack:///./node_modules/ramda/es/o.js","webpack:///./node_modules/ramda/es/of.js","webpack:///./node_modules/ramda/es/internal/_of.js","webpack:///./node_modules/ramda/es/omit.js","webpack:///./node_modules/ramda/es/once.js","webpack:///./node_modules/ramda/es/pair.js","webpack:///./node_modules/ramda/es/partial.js","webpack:///./node_modules/ramda/es/partialRight.js","webpack:///./node_modules/ramda/es/partition.js","webpack:///./node_modules/ramda/es/pathEq.js","webpack:///./node_modules/ramda/es/pathOr.js","webpack:///./node_modules/ramda/es/pathSatisfies.js","webpack:///./node_modules/ramda/es/pick.js","webpack:///./node_modules/ramda/es/pickBy.js","webpack:///./node_modules/ramda/es/pipeK.js","webpack:///./node_modules/ramda/es/product.js","webpack:///./node_modules/ramda/es/project.js","webpack:///./node_modules/ramda/es/propEq.js","webpack:///./node_modules/ramda/es/propIs.js","webpack:///./node_modules/ramda/es/propOr.js","webpack:///./node_modules/ramda/es/propSatisfies.js","webpack:///./node_modules/ramda/es/props.js","webpack:///./node_modules/ramda/es/range.js","webpack:///./node_modules/ramda/es/reduceWhile.js","webpack:///./node_modules/ramda/es/reduced.js","webpack:///./node_modules/ramda/es/repeat.js","webpack:///./node_modules/ramda/es/replace.js","webpack:///./node_modules/ramda/es/scan.js","webpack:///./node_modules/ramda/es/set.js","webpack:///./node_modules/ramda/es/sort.js","webpack:///./node_modules/ramda/es/sortBy.js","webpack:///./node_modules/ramda/es/sortWith.js","webpack:///./node_modules/ramda/es/split.js","webpack:///./node_modules/ramda/es/splitAt.js","webpack:///./node_modules/ramda/es/splitEvery.js","webpack:///./node_modules/ramda/es/splitWhen.js","webpack:///./node_modules/ramda/es/startsWith.js","webpack:///./node_modules/ramda/es/subtract.js","webpack:///./node_modules/ramda/es/symmetricDifference.js","webpack:///./node_modules/ramda/es/symmetricDifferenceWith.js","webpack:///./node_modules/ramda/es/takeLastWhile.js","webpack:///./node_modules/ramda/es/takeWhile.js","webpack:///./node_modules/ramda/es/internal/_xtakeWhile.js","webpack:///./node_modules/ramda/es/tap.js","webpack:///./node_modules/ramda/es/internal/_xtap.js","webpack:///./node_modules/ramda/es/test.js","webpack:///./node_modules/ramda/es/internal/_isRegExp.js","webpack:///./node_modules/ramda/es/toLower.js","webpack:///./node_modules/ramda/es/toPairs.js","webpack:///./node_modules/ramda/es/toPairsIn.js","webpack:///./node_modules/ramda/es/toUpper.js","webpack:///./node_modules/ramda/es/transduce.js","webpack:///./node_modules/ramda/es/transpose.js","webpack:///./node_modules/ramda/es/traverse.js","webpack:///./node_modules/ramda/es/trim.js","webpack:///./node_modules/ramda/es/tryCatch.js","webpack:///./node_modules/ramda/es/unapply.js","webpack:///./node_modules/ramda/es/unary.js","webpack:///./node_modules/ramda/es/uncurryN.js","webpack:///./node_modules/ramda/es/unfold.js","webpack:///./node_modules/ramda/es/union.js","webpack:///./node_modules/ramda/es/unionWith.js","webpack:///./node_modules/ramda/es/unless.js","webpack:///./node_modules/ramda/es/unnest.js","webpack:///./node_modules/ramda/es/until.js","webpack:///./node_modules/ramda/es/valuesIn.js","webpack:///./node_modules/ramda/es/view.js","webpack:///./node_modules/ramda/es/when.js","webpack:///./node_modules/ramda/es/whereEq.js","webpack:///./node_modules/ramda/es/without.js","webpack:///./node_modules/ramda/es/xprod.js","webpack:///./node_modules/ramda/es/zip.js","webpack:///./node_modules/ramda/es/zipObj.js","webpack:///./node_modules/ramda/es/zipWith.js","webpack:///./src/external/sanctuary/Sanctuary-Instance.ts","webpack:///./node_modules/sanctuary/index.js","webpack:///./src/lib/input/keyboard/Keyboard.ts","webpack:///./src/lib/input/keyboard/Keyboard-Event.ts","webpack:///./src/lib/input/keyboard/Keyboard-Serialize.ts","webpack:///./src/flatbuffers/KeyboardEvent_generated.ts","webpack:///./src/lib/input/keyboard/Keyboard-Calm-Validator.ts","webpack:///./src/lib/input/screen/Screen-Event.ts","webpack:///./src/lib/input/screen/Screen-Serialize.ts","webpack:///./src/lib/input/tick/Tick.ts","webpack:///./src/lib/input/tick/Tick-Event.ts","webpack:///./src/lib/input/tick/Tick-Serializer.ts","webpack:///./src/lib/input/pointer/Pointer.ts","webpack:///./src/lib/input/Input-Utils.ts","webpack:///./src/lib/input/pointer/Pointer-Serialize.ts","webpack:///./src/flatbuffers/PointerEvent_generated.ts","webpack:///./src/lib/input/pointer/Pointer-Calm-Validator.ts","webpack:///./src/lib/input/tick-pointer/TickPointer.ts","webpack:///./src/lib/input/tick-pointer/TickPointer-Event.ts","webpack:///./src/lib/loaders/Loaders-Xhr.ts","webpack:///./src/lib/loaders/Loaders-Texture.ts","webpack:///./src/lib/math/PowerOfTwo.ts","webpack:///./src/lib/number/Number.ts","webpack:///./src/lib/number/Number-Utils.ts","webpack:///./src/lib/functional/Functional.ts","webpack:///./src/lib/functional/Functional-Utils.ts","webpack:///./src/lib/quat/Quat-Create.ts","webpack:///./src/lib/ray/Ray.ts","webpack:///./src/lib/ray/Ray-Utils.ts","webpack:///./src/lib/serialize/Serialize.ts","webpack:///./src/lib/state/State.ts","webpack:///./src/lib/state/State-Serialize.tsx","webpack:///./node_modules/infestines/dist/infestines.es.js","webpack:///./src/lib/transform/Transform-Serialize.ts","webpack:///./src/lib/transform/Transform-Utils.ts","webpack:///./src/lib/state/State-Logger.ts","webpack:///./src/lib/state/State-Tree-Mapper.ts","webpack:///./src/lib/string/String.ts","webpack:///./src/lib/renderer/Renderer.ts","webpack:///./src/lib/webgl/WebGl-FrameBuffer-Picker.ts","webpack:///./src/lib/webgl/WebGl-Constants.ts","webpack:///./src/lib/webgl/WebGl-DataBuffers.ts","webpack:///./src/lib/webgl/WebGl-Shaders.ts","webpack:///./src/lib/sodium/Sodium.ts","webpack:///./src/lib/sodium/drag/Sodium-Drag.ts","webpack:///./src/lib/sodium/updaters/Sodium-Updaters.ts","webpack:///./src/lib/sodium/loaders/Sodium-Loaders.ts","webpack:///./src/lib/sodium/state-machines/Sodium-StateMachines.ts","webpack:///./src/lib/sodium/state-machines/Sodium-Accum-StateMachine.ts","webpack:///./src/lib/sodium/renderer/Sodium-Renderer.ts","webpack:///./src/lib/sodium/renderer/Sodium-Renderer-Helpers.ts","webpack:///./node_modules/sodiumjs/dist/sodium.esm.js","webpack:///./node_modules/typescript-collections/dist/lib/index.js","webpack:///./node_modules/typescript-collections/dist/lib/Bag.js","webpack:///./node_modules/typescript-collections/dist/lib/BSTree.js","webpack:///./node_modules/typescript-collections/dist/lib/LinkedDictionary.js","webpack:///./node_modules/typescript-collections/dist/lib/MultiDictionary.js","webpack:///./node_modules/typescript-collections/dist/lib/PriorityQueue.js","webpack:///./node_modules/typescript-collections/dist/lib/Stack.js","webpack:///./node_modules/typescript-collections/dist/lib/MultiRootTree.js","webpack:///./node_modules/sodiumjs/node_modules/sanctuary-type-classes/index.js","webpack:///./src/lib/worker/Worker.ts","webpack:///./src/lib/worker/Worker-Loader.ts","webpack:///./src/lib/worker/Worker-Start.ts","webpack:///./src/app/dom/Dom.ts","webpack:///./src/app/quad/Quad.ts","webpack:///./src/app/renderer/Renderer.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","fn","f2","a","b","arguments","length","__WEBPACK_IMPORTED_MODULE_1__isPlaceholder__","__WEBPACK_IMPORTED_MODULE_0__curry1__","_b","_a","f1","__WEBPACK_IMPORTED_MODULE_0__isPlaceholder__","apply","this","f3","__WEBPACK_IMPORTED_MODULE_2__isPlaceholder__","__WEBPACK_IMPORTED_MODULE_1__curry2__","_c","methodNames","xf","args","Array","slice","obj","pop","__WEBPACK_IMPORTED_MODULE_0__isArray__","idx","__WEBPACK_IMPORTED_MODULE_1__isTransformer__","transducer","__webpack_exports__","init","result","__export","curryN","__WEBPACK_IMPORTED_MODULE_2__internal_curry2__","__WEBPACK_IMPORTED_MODULE_1__internal_curry1__","__WEBPACK_IMPORTED_MODULE_0__internal_arity__","__WEBPACK_IMPORTED_MODULE_3__internal_curryN__","prop","map","__WEBPACK_IMPORTED_MODULE_0__internal_curry2__","__WEBPACK_IMPORTED_MODULE_1__internal_dispatchable__","__WEBPACK_IMPORTED_MODULE_4__internal_xmap__","functor","toString","__WEBPACK_IMPORTED_MODULE_5__curryN__","__WEBPACK_IMPORTED_MODULE_3__internal_reduce__","acc","key","__WEBPACK_IMPORTED_MODULE_6__keys__","__WEBPACK_IMPORTED_MODULE_2__internal_map__","list","__WEBPACK_IMPORTED_MODULE_1__xwrap__","__WEBPACK_IMPORTED_MODULE_0__isArrayLike__","len","_arrayReduce","_methodReduce","symIterator","_iterableReduce","next","reduce","TypeError","iter","step","done","value","methodName","__WEBPACK_IMPORTED_MODULE_2__bind__","Symbol","iterator","equals","__WEBPACK_IMPORTED_MODULE_1__internal_equals__","_hasOwnProperty","isFunction","func","isUndefined","isString","has","defaultCompare","defaultEquals","defaultToString","item","makeString","join","toret","first","reverseCompareFunction","compareFunction","v","compareToEquals","set1","set2","len1","len2","__WEBPACK_IMPORTED_MODULE_1__internal_curry3__","__WEBPACK_IMPORTED_MODULE_0__internal_checkForMethod__","fromIndex","toIndex","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","create","ZERO","toFloat64","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","capacity","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","Error","notNested","new_buf_size","nbb","setPosition","set","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","j","push","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","String","fromCharCode","__indirect","__vector","__vector_len","__has_identifier","ident","__WEBPACK_IMPORTED_MODULE_8__gl_matrix_vec4__","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","_keys","keys","nIdx","ks","checkArgsLength","__WEBPACK_IMPORTED_MODULE_2__internal_isArguments__","__WEBPACK_IMPORTED_MODULE_1__internal_has__","__WEBPACK_IMPORTED_MODULE_0__internal_curry1__","__WEBPACK_IMPORTED_MODULE_0__internal_curry3__","__WEBPACK_IMPORTED_MODULE_1__internal_reduce__","isInstanceOf","__WEBPACK_IMPORTED_MODULE_0_infestines__","Class","x","protoless0","protoless","sliceIndex","Math","min","max","cpair","xs","unto","unto0","notPartial","singletonPartial","expect","f","isArrayOrPrimitive","isArray","rev","seemsArrayLike","ys","mapPartialIndexU","xi2y","y","mapIfArrayLike","copyToFrom","k","Select","of","ap","r","Ident","chain","Const","ConcatOf","empty","Sum","mumBy","ord","minX","minY","traverseU","C","xi2yC","toFunction","mkTraverse","after","toC","cons","h","consTo","reverse","traversePartialIndex","A","xi2yA","xsA","_i2","lensFrom","_i","F","xi2yF","getProp","setProp","funProp","getIndex","setIndex","_ys","_j","_j2","funIndex","composedMiddle","composed","oi0","os","identity","_last","_first","setU","modifyComposed","modifyU","xi2x","makeIx","ix","getNestedU","getU","_o","lensU","isoU","bwd","fwd","getPick","template","setPick","toObject$1","_F","branchAssemble","branchOr1Level","otherwise","k2o","xO","written","_k","_y","_k4","_t2","_k5","_k2","_y2","_k3","_y3","replaced","inn","out","partitionIntoIndex","xi2b","ts","fs","reValue","reIndex","index","reNext","re","lastIndex","exec","input","iterCollect","keyed","es","entry","matchesJoin","matchesIn","matches","iterToArray","ifteU","e","orElseU","back","prim","isDefined$1","zeroOp","seq2U","M","xi2yM","pickInAux","pickIn","wi2x","w","assign$1","propsOf","modify","remove","transform","traverse","compose","lazy","o2o","_memo","rec","choices","_len","_key","reduceRight","choose","xiM2o","cond","zero","_c2","ifElse","iftes","_t","orElse","xi2yO","xM","choice","_len3","_key3","unless","when","optional","assignOp","setOp","modifyOp","_x","removeOp","log","_arguments","show","dir","console","concat","seq","branchOr","branchOrU","branch","elems","xi2v","selectInArrayLike","entries","flatten","keys$1","global","m0","iterSelect","iterEager","match","replace","values","all","and$1","any","collectAs","results","collect","concatAs","countIf","count","countsAs","xi2k","counts","Map","foldl","foldr","is","forEach","isEmpty","joinAs","maximumBy","maximum","meanAs","sum","num","mean","minimumBy","minimum","none","or$1","productAs","product","selectAs","select","sumAs","lens","setter","foldTraversalLens","fold","traversal","defaults","o2u","define","untoV","normalize","reread","rewrite","required","yi2y","append","_","filter","tsN","fsN","find","xih2b","hint","u","findIndexHint","findWith","oo","last","maybeArray","prefix","begin","end","xsi2yF","seems","xsN","zs","zsN","bPzsN","suffix","Infinity","pick","props","removable","_len4","ps","_key4","drop","valueOr","o2i","getInverse","iso","array","elem","mapFwd","inverse","complement","indexed","xis","xi","_i3","singleton","uri","decodeURI","encodeURI","uriComponent","decodeURIComponent","encodeURIComponent","json","options","_ref","reviver","replacer","text","JSON","parse","stringify","pointer","split","test","Number","type","ARRAY_TYPE","degree","abs","EPSILON","RANDOM","random","PI","val","@@transducer/value","@@transducer/reduced","__webpack_amd_options__","always","path","paths","__WEBPACK_IMPORTED_MODULE_0__indexOf__","util","Dictionary","toStrFunction","nElements","toStr","getValue","pair","setValue","ret","previousElement","undefined","name_1","name_2","callback","name_3","containsKey","clear","default","pluck","__WEBPACK_IMPORTED_MODULE_1__map__","__WEBPACK_IMPORTED_MODULE_2__prop__","methodname","__WEBPACK_IMPORTED_MODULE_1__internal_toString__","nth","__WEBPACK_IMPORTED_MODULE_1__internal_isString__","charAt","invoker","arity","method","__WEBPACK_IMPORTED_MODULE_2__curryN__","target","__WEBPACK_IMPORTED_MODULE_1__internal_isFunction__","__WEBPACK_IMPORTED_MODULE_3__toString__","indexOf","equalsFunction","lastIndexOf","splice","frequency","freq","array1","array2","copy","swap","temp","array_1","Matrix4","Values","__init","getRootAsValues","g","startValues","builder","addA","addB","addC","addD","addE","addF","addG","addH","addI","addJ","addK","addL","addM","addN","addO","addP","endValues","finishValuesBuffer","add","_curryN","received","combined","argsIdx","left","combinedIdx","__WEBPACK_IMPORTED_MODULE_0__arity__","_isArrayLike","__WEBPACK_IMPORTED_MODULE_1__isArray__","__WEBPACK_IMPORTED_MODULE_2__isString__","nodeType","assoc","nAry","lift","__WEBPACK_IMPORTED_MODULE_1__liftN__","pred","reject","__WEBPACK_IMPORTED_MODULE_1__internal_curry2__","filterable","__WEBPACK_IMPORTED_MODULE_2__filter__","__WEBPACK_IMPORTED_MODULE_0__internal_complement__","reduceBy","__WEBPACK_IMPORTED_MODULE_0__internal_curryN__","__WEBPACK_IMPORTED_MODULE_4__internal_xreduceBy__","valueFn","valueAcc","keyFn","elt","__WEBPACK_IMPORTED_MODULE_2__internal_has__","flip","__WEBPACK_IMPORTED_MODULE_1__curryN__","toFunctorFn","focus","mergeDeepWithKey","lObj","rObj","__WEBPACK_IMPORTED_MODULE_2__mergeWithKey__","lVal","rVal","__WEBPACK_IMPORTED_MODULE_1__internal_isObject__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","self","sanctuaryTypeClasses","sanctuaryTypeIdentifiers","concat_","constant","forEachKey","strMap","sameType","iterationNext","iterationDone","TypeClass","url","dependencies","every","Constructor","Value","_funcPath","allowInheritedProps","funcPath","implPath","implementations","functionName","$","_name","requirements","getBoundMethod","typeRep","constructor","bind","typeClass","arg","methods","Setoid","Ord","lte","Semigroupoid","Category","id","Semigroup","Monoid","Group","invert","Functor","Bifunctor","bimap","Profunctor","promap","Apply","Applicative","Chain","ChainRec","chainRec","Monad","Alt","alt","Plus","Alternative","Foldable","Traversable","Extend","extend","Comonad","extract","Contravariant","contramap","Array$of","Array$prototype$equals","Array$prototype$lte","Array$prototype$concat","Object$prototype$concat","assign","$pairs","Null","fantasy-land/equals","fantasy-land/lte","Undefined","Boolean","valueOf","isNaN","Date","NaN","toISOString","RegExp","source","ignoreCase","multiline","sticky","unicode","fantasy-land/empty","fantasy-land/concat","fantasy-land/of","fantasy-land/chainRec","$todo","$done","shift","$more","unshift","fantasy-land/zero","reprs","sort","fantasy-land/map","fantasy-land/ap","idx2","fantasy-land/chain","fantasy-land/alt","fantasy-land/reduce","initial","fantasy-land/traverse","go","lift2","floor","fantasy-land/extend","Arguments","message","theseKeys","otherKeys","z","applicative","Function","fantasy-land/id","fantasy-land/compose","semigroupoid","fantasy-land/promap","profunctor","fantasy-land/contramap","contravariant","$seen","xType","err","some","lt","applyF","applyX","chain_","foldable","sortBy","rs","fx","lower","upper","traversable","gt","gte","group","bifunctor","lift3","apFirst","apSecond","prepend","filterM","takeWhile","take","dropWhile","sequence","extend_","comonad","$$type","pattern","groups","namespace","version","L","R","PROPS","CHILDREN","TYPE","findLensFrom","predicate","startingLens","elTree","_dig","el","isNil","children","cLens","findLens","findLensByTypeFrom","findLensByType","lensPath","childLensPath","parseInt","propsAtChildLensPath","propsAtLensPath","propLens","childLens","__WEBPACK_IMPORTED_MODULE_1__path__","__WEBPACK_IMPORTED_MODULE_2__internal_reduce__","__WEBPACK_IMPORTED_MODULE_0__internal_concat__","__WEBPACK_IMPORTED_MODULE_3__map__","isInteger","curry","__WEBPACK_IMPORTED_MODULE_3__internal_xchain__","monad","__WEBPACK_IMPORTED_MODULE_2__internal_makeFlat__","__WEBPACK_IMPORTED_MODULE_4__map__","__WEBPACK_IMPORTED_MODULE_0__pipe__","__WEBPACK_IMPORTED_MODULE_1__reverse__","tail","__WEBPACK_IMPORTED_MODULE_2__slice__","__WEBPACK_IMPORTED_MODULE_1__internal_isArray__","__WEBPACK_IMPORTED_MODULE_4__toString__","__WEBPACK_IMPORTED_MODULE_3__internal_isString__","__WEBPACK_IMPORTED_MODULE_2__internal_isFunction__","__WEBPACK_IMPORTED_MODULE_5__internal_xfilter__","__WEBPACK_IMPORTED_MODULE_3__internal_isObject__","__WEBPACK_IMPORTED_MODULE_4__internal_reduce__","__WEBPACK_IMPORTED_MODULE_2__internal_filter__","update","__WEBPACK_IMPORTED_MODULE_1__adjust__","__WEBPACK_IMPORTED_MODULE_2__always__","__WEBPACK_IMPORTED_MODULE_2__internal_xtake__","__WEBPACK_IMPORTED_MODULE_3__slice__","__WEBPACK_IMPORTED_MODULE_1__internal_identity__","uniq","__WEBPACK_IMPORTED_MODULE_1__uniqBy__","__WEBPACK_IMPORTED_MODULE_0__identity__","__WEBPACK_IMPORTED_MODULE_0__objectAssign__","mergeWithKey","arrays","LinkedList","firstNode","lastNode","newNode","createNode","prev","nodeAtIndex","element","elementAtIndex","node","equalsF","currentNode","previous","eqF","equalsAux","n1","n2","removeElementAtIndex","current","toArray","Drift_1","gl_matrix_1","Dom_1","Quad_1","Renderer_1","State_1","Sanctuary_1","renderer","createRenderer","elementRenderers","createQuadRenderer","lFirstDraw","lController","lControllerX","lControllerY","lControllerOffsetX","lControllerOffsetY","lControllerIsDrag","lControllerType","lControllerTarget","lCamera","lCameraMatrix","lQuads","KeyboardMapping","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","getPointerWorldPoint","state","screenToWorldPoint","getScreenSize","shouldUpdateTransforms","isDefined","KeyboardSourceId","initialState","onReady","_state","logState","startTick","evt","evtData","data","S","lTarget","lPos","lPosX","lPosY","currPos","controller","updateStateElementWorldTransforms","pipe","dt","PointerSourceId","render","startKeyboard","status","KeyboardEventStatus","RELEASE","basePointerOptions","validate","makePointerCalmValidator","domElement","document","getElementById","hasPointer","window","PointerEvent","handlePointer","PointerEventStatus","END","START","picker","getPicker","pixel","readPixel","pixelIndex","rgbToColorIndex","colorHitMap","worldPoint","localPos","getStateTransformPosition","positionWorld","getStateTransformLocalParentPointToWorld","diff","vec3","subtract","createVec3","MOVE","offsetX","offsetY","offsetWorldPoint","localPointerPoint","getStateTransformWorldPointToLocalParent","startPointer","__assign","startDom","interactive","startScreen","sendInitial","screenSize","getCameraOrthoFullscreen","resize","Main","flatbuffers_1","Camera_generated_1","Matrix_1","SerializeCamera","projectionPtr","SerializeMatrix4","projection","eyePtr","eye","matrixPtr","matrix","Camera","Props","startProps","addProjection","addEye","addMatrix","endProps","SerializeCameraToBinary","ParseCamera","ParseMatrix4","ParseCameraFromBinary","getRootAsProps","CameraSerializer","serialize","NS1812855692714688431","projectionOffset","eyeOffset","matrixOffset","finishPropsBuffer","createMat4","vals","from","__WEBPACK_IMPORTED_MODULE_0__common__","m00","m01","m02","m10","m11","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","rad","sin","cos","q","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","width","height","sqrt","pow","scale","b0","b1","b2","b3","b4","b5","b6","b7","b8","multiply","b12","b20","b22","mul","sub","ceil","round","ax","ay","az","bx","by","bz","factorTimes2","factor1","factor2","factor3","factor4","inverseFactor","inverseFactorTimesTwo","zScale","qx","qy","qz","qw","iy","iz","iw","tempA","fromValues","tempB","cosine","dot","acos","divide","distance","squaredDistance","squaredLength","div","dist","sqrDist","sqrLen","vec","stride","aw","vectorScale","identity3","identity4","createVec4","Vector3","Vector4","padLeft","str","padLeftZero","padLeftDigits2","rtlDirCheck","stringIsRtl","sameOrigin","URL","origin","location","Transform","localSpace","worldSpace","parentWorldSpace","posX","posY","posZ","originX","originY","originZ","scaleX","scaleY","scaleZ","rotX","rotY","rotZ","rotW","addLocalSpace","localSpaceOffset","addWorldSpace","worldSpaceOffset","addParentWorldSpace","parentWorldSpaceOffset","addPosX","addPosY","addPosZ","addOriginX","addOriginY","addOriginZ","addScaleX","addScaleY","addScaleZ","addRotX","addRotY","addRotZ","addRotW","adjust","_idx","_list","XWrap","thisObj","__WEBPACK_IMPORTED_MODULE_0__has__","and","__WEBPACK_IMPORTED_MODULE_2__internal_xany__","XAny","__WEBPACK_IMPORTED_MODULE_2__xfBase__","__WEBPACK_IMPORTED_MODULE_1__reduced__","_xany","__WEBPACK_IMPORTED_MODULE_0__curry2__","__WEBPACK_IMPORTED_MODULE_1__keys__","assocPath","nextObj","__WEBPACK_IMPORTED_MODULE_5__isNil__","__WEBPACK_IMPORTED_MODULE_3__internal_isInteger__","__WEBPACK_IMPORTED_MODULE_2__internal_isArray__","arr","__WEBPACK_IMPORTED_MODULE_4__assoc__","liftN","lifted","__WEBPACK_IMPORTED_MODULE_3__curryN__","__WEBPACK_IMPORTED_MODULE_2__ap__","recursive","flatt","jlen","ilen","_clone","refFrom","refTo","deep","copiedValue","__WEBPACK_IMPORTED_MODULE_1__type__","__WEBPACK_IMPORTED_MODULE_0__cloneRegExp__","not","__WEBPACK_IMPORTED_MODULE_2__reduce__","__WEBPACK_IMPORTED_MODULE_1__internal_pipe__","__WEBPACK_IMPORTED_MODULE_3__tail__","__WEBPACK_IMPORTED_MODULE_1__compose__","__WEBPACK_IMPORTED_MODULE_2__map__","__WEBPACK_IMPORTED_MODULE_0__chain__","__WEBPACK_IMPORTED_MODULE_1__internal_pipeP__","inf","__WEBPACK_IMPORTED_MODULE_0__equals__","identical","constructN","Fn","__WEBPACK_IMPORTED_MODULE_1__curry__","__WEBPACK_IMPORTED_MODULE_2__nAry__","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","fns","__WEBPACK_IMPORTED_MODULE_5__reduce__","__WEBPACK_IMPORTED_MODULE_3__max__","__WEBPACK_IMPORTED_MODULE_4__pluck__","context","__WEBPACK_IMPORTED_MODULE_1__internal_map__","defaultTo","difference","second","firstLen","__WEBPACK_IMPORTED_MODULE_0__internal_contains__","differenceWith","__WEBPACK_IMPORTED_MODULE_0__internal_containsWith__","dissoc","start","__WEBPACK_IMPORTED_MODULE_2__internal_xdrop__","XDropRepeatsWith","lastValue","seenFirstValue","__WEBPACK_IMPORTED_MODULE_1__xfBase__","sameAsLast","_xdropRepeatsWith","dropRepeatsWith","__WEBPACK_IMPORTED_MODULE_2__internal_xdropRepeatsWith__","__WEBPACK_IMPORTED_MODULE_3__last__","__WEBPACK_IMPORTED_MODULE_0__nth__","or","__WEBPACK_IMPORTED_MODULE_4__internal_isString__","__WEBPACK_IMPORTED_MODULE_1__internal_isArguments__","takeLast","__WEBPACK_IMPORTED_MODULE_1__drop__","uniqBy","appliedItem","__WEBPACK_IMPORTED_MODULE_0__internal_Set__","objOf","Ctor","juxt","__WEBPACK_IMPORTED_MODULE_1__converge__","__WEBPACK_IMPORTED_MODULE_1__internal_isNumber__","__WEBPACK_IMPORTED_MODULE_1__sum__","__WEBPACK_IMPORTED_MODULE_1__reduce__","__WEBPACK_IMPORTED_MODULE_0__add__","memoizeWith","mFn","cache","Identity","over","pickAll","names","useWith","transformers","times","RangeError","__WEBPACK_IMPORTED_MODULE_4__reduceRight__","__WEBPACK_IMPORTED_MODULE_1__ap__","__WEBPACK_IMPORTED_MODULE_3__prepend__","uniqWith","where","spec","testObj","sanctuaryDef","Z","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Either","tag","isLeft","isRight","Left","Right","K","always2","isPrefix","candidate","strRepeat","stripOutermostParens","toMarkdownList","trimTrailingSpaces","bool","wrap","parenthesize","stripNamespace","_Type","format","types","_test","propPath","extractor","BINARY","FUNCTION","INCONSISTENT","NULLARY","RECORD","UNARY","UNKNOWN","VARIABLE","Inconsistent","typeEq","typeofEq","typeof_","functionUrl","NullaryTypeWithUrl","NullaryType","UnaryTypeWithUrl","_1","UnaryType","Any","AnyFunction","Array_","Boolean_","Date_","Error_","FiniteNumber","ValidNumber","isFinite","Function_","$keys","$types","outer","inner","members","GlobalRegExp","RegExp_","Integer","NegativeFiniteNumber","NegativeInteger","NegativeNumber","Number_","NonEmpty","monoid","NonGlobalRegExp","NonNegativeInteger","NonZeroFiniteNumber","NonZeroInteger","NonZeroValidNumber","Nullable","nullable","Object_","Pair","_2","BinaryType","BinaryTypeWithUrl","PositiveFiniteNumber","PositiveInteger","PositiveNumber","RegexFlags","EnumType","StrMap","String_","Symbol_","Type","Unknown","ValidDate","env","Unchecked","def","_create","checkTypes","numArgs","expandUnknown","seen","_determineActualTypes","seen$","fromUnaryType","xprod","isConsistent","determineActualTypesStrict","determineActualTypesLoose","updateTypeVarMap","typeVarMap","typeVar","$typeVarMap","typeVarName","$entry","valuesByPath","isNullaryTypeVar","satisfactoryTypes","typeInfo","expType","recur","invalidValue","constraints","typeClasses","typeClassConstraintViolation","typeVarMap$","okTypes","typeVarConstraintViolation","innerValues","propPath$","$1s","$2s","CheckedNullaryType","CheckedUnaryType","CheckedBinaryType","specialize","CheckedEnumType","RecordType","fields","CheckedRecordType","CheckedTypeVariable","CheckedUnaryTypeVariable","UnaryTypeVariable","CheckedBinaryTypeVariable","BinaryTypeVariable","Thunk","Predicate","wrapFunction","$typeVarMapBox","numArgsExpected","showTypeQuoted","underline","index_","invalidArgumentsLength","checkValue$","checkValue","output","wrapFunctionCond","constraintsRepr","$reprs","typeVarNames","showTypeWith","code","showValuesAndTypes","pos","showType","typeSignature","_underline","formatType3","underlineConstraint","formatType5","st","formatType4","counter","carets","numbers","label","delta","resolvePropPath","formatType6","indexedPropPath","propPath_","indexedPropPath_","see","record","tvn","tc","values_","underlinedTypeVars","underlineTypeVars","$valuesByPath","assertRight","either","opts","_typeVarMap","_values","_indexes","impl","curried","numArgsReceived","tooManyArguments","indexes","returnValue","wrapFunctions","inspect","vReprs","tReprs","placeholders","expTypes","stop","range","typeConstructor","fromUncheckedUnaryType","__","@@functional/placeholder","TypeVariable","Camera_1","Vector_1","innerWidth","innerHeight","stageSize","camera","transformMat4","unprojectFromCamera","screenEventToWorldPoint","Input_Utils_1","getTriggersFromOptions","normalizePointerOptions","pointerEventDataMaker","getCoords","getPointerCoordsFromDomElement","Nothing","Just","pointerEventMaker","dataMaker","defaultPrevented","sourceId","schedule","timeStamp","preventDefault","_opts","send","makeEvent","sendEvent","trigger","addEventListener","Headers_Cors_1","webkitURL","LOADER_TYPE_IMAGE","LoaderImageType","LoaderImage","_req","callbackAfterLoad","_this","__loaderType","req","img","Image","_status","error","errorEvt","crossOrigin","src","loadImagePromise","Promise","resolve","loadImageFactory","isLoaderImage","Math_1","createSimpleTextureFromTarget","gl","alpha","RGBA","RGB","texture","createTexture","bindTexture","TEXTURE_2D","noFlip","pixelStorei","UNPACK_FLIP_Y_WEBGL","isPowerOf2","useMips","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","UNSIGNED_BYTE","switchTexture","activeTexture","State_Accessors_1","Transform_1","lTransform","lLocalSpace","lWorldSpace","lParentWorldSpace","lPosZ","lOriginX","lOriginY","lOriginZ","lScaleX","lScaleY","lScaleZ","lRotX","lRotY","lRotZ","lRotW","getTransformPosition","getStateTransformOrigin","getTransformOrigin","getStateTransformScale","getTransformScale","getStateTransformRotation","getTransformRotation","getStateTransformLocalPointToWorld","transformVectorSpace","getStateTransformWorldPointToLocal","transformVectorInvertedSpace","getStateTransformPositionInWorldFromElement","zeroPoint","getStateCenterPositionInWorldElement","updateStateWorldTransforms","subState","_update","mat4","initialParentWorldSpace","elementLens","createLocalSpace","getStateElementClipSpaceImpure","cameraMatrix","getStateElementClipSpace","impureUpdateStateWorldTransforms","impureUpdateStateElementWorldTransforms","transformProps","createLocalSpaceImpure","createElement","childrenLength","childArray","isValid","isChildArray","isChildText","appendElement","parentLens","maybePropsToElement","maybeToNullable","Color_1","WebGl_1","setWebGlElementClipSpace","clipSpace","matrixMultiply","createWebGlRenderer","config","canvas","canvasElement","getContext","lastScreenSize","shaders","createWebGlShaderSwitcher","buffers","createWebGlBufferSwitcher","idGenerator","clearColor","elements","clearBits","colorIndex","rendererId","visible","color","rgbFromColorIndex","hitColor","setAttribute","viewport","drawingBufferWidth","drawingBufferHeight","dispose","makeFramebufferPicker","allocateId","sodiumStagedUpdater","validator","cTarget","cInit","sInit","snapshot","fTarget","mapInit","sEnd","hold","cHasInit","isJust","cUpdate","sUpdate","gate","fInit","mapUpdate","sCommit","cHasUpdate","fUpdate","mapCommit","Dictionary_1","Set","toStringFunction","dictionary","intersection","otherSet","union","isSubsetOf","isSub","Queue_1","BSTreeKV","root","compare","insertNode","searchNode","search","removeNode","inorderTraversal","inorderTraversalAux","preorderTraversal","preorderTraversalAux","postorderTraversal","postorderTraversalAux","levelTraversal","levelTraversalAux","minimumAux","maximumAux","heightAux","cmp","leftCh","rightCh","transplant","parent","signal","queue","enqueue","dequeue","LinkedList_1","Queue","peek","collections","Heap","leftChildIndex","nodeIndex","rightChildIndex","parentIndex","minIndex","leftChild","rightChild","siftUp","siftDown","removeRoot","equF","extendStatics","__extends","setPrototypeOf","__proto__","FactoryDictionary","_super","defaultFactoryFunction","setDefault","currentValue","createTransformProps","rotAngle","rot","quat","fromEuler","createQuat","createLocalTransform","firstDraw","QUAD_SIZE_1","QUAD_SIZE_2","QUAD_SIZE_3","QUAD_SIZE_4","AssignValueFloat64","newData","Matrix4_generated_1","SerializeMatrix4ToBinary","ParseMatrix4FromBinary","Matrix_Create_1","matrixMultiplyImpure","dest","v0","v1","D","U","tx","ty","aa","ab","ac","ad","atx","aty","m03","m13","m23","m30","m31","m32","m33","axis","xy","xz","yz","mat","trace","sx","sy","sz","ox","oy","oz","right","bottom","top","near","far","rl","tb","nf","fovy","aspect","tan","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","lr","bt","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","a14","a15","b9","b13","b14","b15","out_axis","bw","invDot","halfToRad","cx","cy","cz","__WEBPACK_IMPORTED_MODULE_3__vec4__","setAxisAngle","slerp","omega","cosom","sinom","scale0","scale1","fromMat3","fRoot","fTrace","clone","lerp","exactEquals","rotationTo","tmpvec3","__WEBPACK_IMPORTED_MODULE_2__vec3__","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","__WEBPACK_IMPORTED_MODULE_1__mat3__","view","ortho","getCameraMatrixFromProps","getCameraPerspective","perspective","lookAt","point","invMatrix","Vector3_generated_1","Vector4_generated_1","SerializeVector3","SerializeVector3ToBinary","ParseVector3","ParseVector3FromBinary","SerializeVector4","SerializeVector4ToBinary","ParseVector4","ParseVector4FromBinary","String_Utils_1","paddedHexString","rgb","ColorRGBA","toNumber","fromNumber","fromString","ColorRGB","InputEventSchedule","makeTimestampedInputSender","_evt","performance","now","makeScheduledInputSender","defaultSchedule","IMMEDIATE","MICROTASK","then","NEXTFRAME","setTimeout","Flatbuffers_1","serializeInputEvent","serializers","sourceIdPtr","maybeSchedulePtr","maybeDataPtr","Input","Event","createDataVector","startEvent","addSourceId","addTs","dataPtr","addData","schedulePtr","addSchedule","endEvent","serializeInputEventToBinary","parseInputEvent","dataLength","dataArray","parseInputEventFromBinary","getRootAsEvent","optionalEncoding","byteOffset","sourceIdOffset","scheduleOffset","dataOffset","startDataVector","numElems","finishEventBuffer","NS13062362683108152174","Screen","addWidth","addHeight","addCamera","cameraOffset","NS4385075382419840921","State","Element","getRootAsElement","typeId","propsLength","propsArray","childIsText","startElement","addTypeId","typeIdOffset","addText","textOffset","addProps","propsOffset","createPropsVector","startPropsVector","addChildren","childrenOffset","createChildrenVector","startChildrenVector","addChildIsText","addTransform","transformOffset","endElement","finishElementBuffer","Tick","frameTs","addFrameTs","addDt","__WEBPACK_IMPORTED_MODULE_0__always__","T","addIndex","origFn","__WEBPACK_IMPORTED_MODULE_2__internal_xall__","XAll","_xall","allPass","preds","__WEBPACK_IMPORTED_MODULE_4__reduce__","__WEBPACK_IMPORTED_MODULE_2__max__","__WEBPACK_IMPORTED_MODULE_3__pluck__","XMap","_xmap","anyPass","aperture","__WEBPACK_IMPORTED_MODULE_2__internal_dispatchable__","__WEBPACK_IMPORTED_MODULE_3__internal_xaperture__","__WEBPACK_IMPORTED_MODULE_0__internal_aperture__","limit","XAperture","full","store","getCopy","__WEBPACK_IMPORTED_MODULE_0__concat__","_xaperture","applySpec","__WEBPACK_IMPORTED_MODULE_6__reduce__","__WEBPACK_IMPORTED_MODULE_4__max__","__WEBPACK_IMPORTED_MODULE_5__pluck__","__WEBPACK_IMPORTED_MODULE_7__values__","__WEBPACK_IMPORTED_MODULE_1__apply__","applyTo","ascend","binary","__WEBPACK_IMPORTED_MODULE_1__nAry__","both","__WEBPACK_IMPORTED_MODULE_3__lift__","__WEBPACK_IMPORTED_MODULE_2__and__","__WEBPACK_IMPORTED_MODULE_0__curry__","_xchain","__WEBPACK_IMPORTED_MODULE_1__flatCat__","rxf","@@transducer/init","__WEBPACK_IMPORTED_MODULE_3__xfBase__","@@transducer/result","@@transducer/step","__WEBPACK_IMPORTED_MODULE_0__forceReduced__","preservingReduced","__WEBPACK_IMPORTED_MODULE_1__isArrayLike__","clamp","__WEBPACK_IMPORTED_MODULE_0__internal_clone__","comparator","__WEBPACK_IMPORTED_MODULE_0__lift__","__WEBPACK_IMPORTED_MODULE_1__not__","__WEBPACK_IMPORTED_MODULE_0__pipeP__","ctx","_toString","__WEBPACK_IMPORTED_MODULE_0__contains__","mapPairs","__WEBPACK_IMPORTED_MODULE_2__quote__","__WEBPACK_IMPORTED_MODULE_5__reject__","__WEBPACK_IMPORTED_MODULE_4__keys__","__WEBPACK_IMPORTED_MODULE_3__toISOString__","repr","_uniqContentEquals","aIterator","bIterator","stackA","stackB","__WEBPACK_IMPORTED_MODULE_0__arrayFromIterator__","eq","_equals","__WEBPACK_IMPORTED_MODULE_1__containsWith__","aItem","__WEBPACK_IMPORTED_MODULE_4__identical__","typeA","__WEBPACK_IMPORTED_MODULE_6__type__","__WEBPACK_IMPORTED_MODULE_2__functionName__","keysA","__WEBPACK_IMPORTED_MODULE_5__keys__","extendedStackA","extendedStackB","__WEBPACK_IMPORTED_MODULE_3__has__","_toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","XFilter","_xfilter","pairs","construct","__WEBPACK_IMPORTED_MODULE_1__constructN__","countBy","__WEBPACK_IMPORTED_MODULE_0__reduceBy__","XReduceBy","inputs","__WEBPACK_IMPORTED_MODULE_1__has__","_xreduceBy","__WEBPACK_IMPORTED_MODULE_0__curryN__","dec","descend","dissocPath","__WEBPACK_IMPORTED_MODULE_1__internal_isInteger__","__WEBPACK_IMPORTED_MODULE_4__remove__","__WEBPACK_IMPORTED_MODULE_3__dissoc__","head","__WEBPACK_IMPORTED_MODULE_5__update__","__WEBPACK_IMPORTED_MODULE_2__assoc__","XDrop","_xdrop","dropLast","__WEBPACK_IMPORTED_MODULE_3__internal_xdropLast__","__WEBPACK_IMPORTED_MODULE_2__internal_dropLast__","__WEBPACK_IMPORTED_MODULE_0__take__","XTake","_xtake","XDropLast","_xdropLast","dropLastWhile","__WEBPACK_IMPORTED_MODULE_3__internal_xdropLastWhile__","__WEBPACK_IMPORTED_MODULE_2__internal_dropLastWhile__","__WEBPACK_IMPORTED_MODULE_0__slice__","XDropLastWhile","retained","retain","flush","_xdropLastWhile","dropRepeats","__WEBPACK_IMPORTED_MODULE_4__equals__","__WEBPACK_IMPORTED_MODULE_3__dropRepeatsWith__","__WEBPACK_IMPORTED_MODULE_2__internal_xdropWhile__","XDropWhile","_xdropWhile","__WEBPACK_IMPORTED_MODULE_2__lift__","__WEBPACK_IMPORTED_MODULE_3__or__","endsWith","__WEBPACK_IMPORTED_MODULE_1__equals__","__WEBPACK_IMPORTED_MODULE_2__takeLast__","eqBy","eqProps","obj1","obj2","evolve","transformations","transformation","__WEBPACK_IMPORTED_MODULE_2__internal_xfind__","XFind","found","_xfind","findIndex","__WEBPACK_IMPORTED_MODULE_2__internal_xfindIndex__","XFindIndex","_xfindIndex","findLast","__WEBPACK_IMPORTED_MODULE_2__internal_xfindLast__","XFindLast","_xfindLast","findLastIndex","__WEBPACK_IMPORTED_MODULE_2__internal_xfindLastIndex__","XFindLastIndex","lastIdx","_xfindLastIndex","__WEBPACK_IMPORTED_MODULE_1__internal_makeFlat__","forEachObjIndexed","keyList","fromPairs","groupBy","__WEBPACK_IMPORTED_MODULE_2__reduceBy__","groupWith","res","nextidx","hasIn","condition","onTrue","onFalse","inc","indexBy","__WEBPACK_IMPORTED_MODULE_1__internal_indexOf__","innerJoin","insert","insertAll","elts","list1","list2","lookupList","filteredList","__WEBPACK_IMPORTED_MODULE_4__uniq__","__WEBPACK_IMPORTED_MODULE_3__flip__","_Set","_nativeSet","_items","hasOrAdd","shouldAdd","prevSize","bIdx","intersperse","separator","into","__WEBPACK_IMPORTED_MODULE_2__internal_isTransformer__","__WEBPACK_IMPORTED_MODULE_4__internal_stepCat__","__WEBPACK_IMPORTED_MODULE_3__isTransformer__","__WEBPACK_IMPORTED_MODULE_2__isArrayLike__","_stepCatArray","_stepCatString","_stepCatObject","__WEBPACK_IMPORTED_MODULE_1__identity__","__WEBPACK_IMPORTED_MODULE_0__assign__","__WEBPACK_IMPORTED_MODULE_4__objOf__","nextKey","__WEBPACK_IMPORTED_MODULE_2__keys__","invertObj","__WEBPACK_IMPORTED_MODULE_2__equals__","__WEBPACK_IMPORTED_MODULE_1__empty__","__WEBPACK_IMPORTED_MODULE_0__invoker__","keysIn","lensIndex","__WEBPACK_IMPORTED_MODULE_1__lens__","__WEBPACK_IMPORTED_MODULE_2__nth__","__WEBPACK_IMPORTED_MODULE_3__update__","__WEBPACK_IMPORTED_MODULE_2__lens__","__WEBPACK_IMPORTED_MODULE_3__path__","__WEBPACK_IMPORTED_MODULE_1__assocPath__","lensProp","__WEBPACK_IMPORTED_MODULE_3__prop__","__WEBPACK_IMPORTED_MODULE_1__assoc__","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","mathMod","maxBy","median","__WEBPACK_IMPORTED_MODULE_1__mean__","memoize","__WEBPACK_IMPORTED_MODULE_0__memoizeWith__","__WEBPACK_IMPORTED_MODULE_1__toString__","merge","__WEBPACK_IMPORTED_MODULE_0__internal_assign__","mergeAll","mergeDeepLeft","__WEBPACK_IMPORTED_MODULE_1__mergeDeepWithKey__","mergeDeepRight","mergeDeepWith","mergeWith","__WEBPACK_IMPORTED_MODULE_1__mergeWithKey__","_l","_r","minBy","modulo","negate","__WEBPACK_IMPORTED_MODULE_3__internal_xany__","__WEBPACK_IMPORTED_MODULE_4__any__","nthArg","__WEBPACK_IMPORTED_MODULE_1__internal_of__","omit","once","called","fst","snd","partial","__WEBPACK_IMPORTED_MODULE_1__internal_createPartialApplicator__","partialRight","__WEBPACK_IMPORTED_MODULE_2__flip__","partition","__WEBPACK_IMPORTED_MODULE_1__juxt__","__WEBPACK_IMPORTED_MODULE_0__filter__","__WEBPACK_IMPORTED_MODULE_2__reject__","pathEq","_path","__WEBPACK_IMPORTED_MODULE_2__path__","pathOr","__WEBPACK_IMPORTED_MODULE_1__defaultTo__","pathSatisfies","pickBy","__WEBPACK_IMPORTED_MODULE_0__composeK__","__WEBPACK_IMPORTED_MODULE_0__multiply__","project","__WEBPACK_IMPORTED_MODULE_3__useWith__","__WEBPACK_IMPORTED_MODULE_0__internal_map__","__WEBPACK_IMPORTED_MODULE_2__pickAll__","propEq","propIs","__WEBPACK_IMPORTED_MODULE_1__is__","propOr","propSatisfies","to","reduceWhile","__WEBPACK_IMPORTED_MODULE_2__internal_reduced__","reduced","__WEBPACK_IMPORTED_MODULE_1__internal_reduced__","repeat","__WEBPACK_IMPORTED_MODULE_2__times__","__WEBPACK_IMPORTED_MODULE_1__always__","regex","replacement","scan","__WEBPACK_IMPORTED_MODULE_2__over__","sortWith","splitAt","__WEBPACK_IMPORTED_MODULE_1__length__","splitEvery","__WEBPACK_IMPORTED_MODULE_1__slice__","splitWhen","startsWith","__WEBPACK_IMPORTED_MODULE_2__take__","symmetricDifference","__WEBPACK_IMPORTED_MODULE_1__concat__","__WEBPACK_IMPORTED_MODULE_2__difference__","symmetricDifferenceWith","__WEBPACK_IMPORTED_MODULE_2__differenceWith__","takeLastWhile","__WEBPACK_IMPORTED_MODULE_2__internal_xtakeWhile__","XTakeWhile","_xtakeWhile","tap","__WEBPACK_IMPORTED_MODULE_2__internal_xtap__","XTap","_xtap","__WEBPACK_IMPORTED_MODULE_2__internal_isRegExp__","__WEBPACK_IMPORTED_MODULE_0__internal_cloneRegExp__","toLower","toPairs","toPairsIn","toUpper","transduce","__WEBPACK_IMPORTED_MODULE_0__internal_reduce__","__WEBPACK_IMPORTED_MODULE_1__internal_xwrap__","transpose","outerlist","innerlist","__WEBPACK_IMPORTED_MODULE_2__sequence__","ws","_trim","trim","beginRx","endRx","tryCatch","tryer","catcher","__WEBPACK_IMPORTED_MODULE_1__internal_concat__","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","__WEBPACK_IMPORTED_MODULE_2__compose__","__WEBPACK_IMPORTED_MODULE_3__uniq__","unionWith","__WEBPACK_IMPORTED_MODULE_2__uniqWith__","whenFalseFn","unnest","__WEBPACK_IMPORTED_MODULE_1__chain__","__WEBPACK_IMPORTED_MODULE_0__internal_identity__","until","valuesIn","vs","whenTrueFn","whereEq","__WEBPACK_IMPORTED_MODULE_3__where__","without","__WEBPACK_IMPORTED_MODULE_3__reject__","zip","rv","zipObj","zipWith","sanctuary_1","sanctuary","flip$","toObject","typeIdent","readmeUrl","eitherTypeIdent","$Either","List","maybeTypeIdent","$Maybe","maybe","TypeRep","defaultEnv","Options","createSanctuary","__doctest","_List","require","Cons","Nil","I","toMaybe","lt_","lte_","gt_","gte_","uncurry2","curry2","curry3","curry4","curry5","on","MaybeType","Maybe","_Maybe","isNothing","Maybe$prototype$concat","Maybe$prototype$equals","Maybe$prototype$lte","fromMaybe","justs","maybes","encase","fromMaybe_","thunk","maybe_","mapMaybe","encase2","encase3","maybeToEither","EitherType","_Either","Either$prototype$concat","Either$prototype$equals","Either$prototype$lte","at","unfoldr","sub_","mult","div_","requiredNonCapturingGroup","fromEither","toEither","lefts","eithers","rights","tagBy","encaseEither","encaseEither2","encaseEither3","eitherToMaybe","fromIdx","toIdx","joinWith","ss","active","gets","pow_","total","even","odd","parseDate","date","validFloatRepr","parseFloat","Radix","radix","charset","parseJson","Match","toMatch","withRegex","flags","regexEscape","matchAll","toUpperCase","toLowerCase","stripPrefix","stripSuffix","words","unwords","lines","unlines","splitOn","splitOnRegex","PRESS","eventMaker","KeyboardEvent_generated_1","KeyboardEventSerializer","keyPtr","Keyboard","addStatus","addKey","SerializeKeyboardEvent","keyOffset","makeKeyboardCalmValidator","keysToCalm","evtMap","data1","data2","Screen_Utils_1","ScreenSourceId","mapCamera","Camera_Serializer_1","ScreenSerializer","maybeCameraPtr","SerializeScreenEvent","TickSourceId","lastTs","onTick","requestAnimationFrame","TickSerializer","SerializeTickEvent","hasTouches","isTouchEvent","getClientCoordsFromPointerEvent","touches","clientX","clientY","rect","getBoundingClientRect","clientCoords","PointerEvent_generated_1","PointerEventSerializer","Pointer","addX","addY","addHasX","addHasY","SerializePointerEvent","hasX","hasY","lastValidPointer","Pointer_Event_1","TickPointerSourceId","startTickPointer","lastPointerEvent","makePointerData","pointerEventData","LoaderXhrResponseType","LoaderXhrRequestMethod","LoaderXhrRequestType","LOADER_TYPE_XHR","LoaderXhr","_callback","xhr","load","r1","logError","GET","requestType","PLAIN","responseType","ARRAYBUFFER","fillDefaults","currentRequest","r2","r1Nil","r2Nil","close","XMLHttpRequest","onreadystatechange","readyState","DONE","response","TEXT","responseText","statusCode","open","headers","setRequestHeader","FORM","requestData","MULTIPART","abort","loadXhrPromise","loadXhrFactory","isLoaderXhr","Loaders_Image_1","WebGl_Textures_1","LOADER_TYPE_TEXTURE","LoaderTexture","imgResp","loadTexturePromise","loadTextureFactory","isLoaderTexture","roundToMultiple","setPropsFromRamdaLens","reduceToRamdaLens","mapObjKeys","omitObjCompared","objA","objB","mapObjKeysLookup","lookup","filterObjVal","filterObjExcludeVals","filterObjectByKeys","flap","compareMaybe","mB","equalsMaybe","getLineFromRay","scaleAmt","createSerializerMap","State_Transform_1","State_Elements_1","loggerForMissingSerializers","serializeAppStateToBinary","logMissingSerializers","propSerializers","_constructNode","tLens","elPropsLens","typePtr","hasSerializer","transformPtr","SerializeTransform","child","_writeNode","nodeData","asText","childrenPtr","cPtrs","parseStateFromBinary","parseElement","dataType","ParseTransform","mapChildren","ary1of2","ary2of2","ary1of3","ary2of3","ary3of3","ary1of1","x3","arityN","applyU","x2y","sndU","freeze","array0","object0","hasU","constructorOf","getPrototypeOf","isObject","identicalU","acyclicEqualsObject","bk","acyclicEqualsU","whereEqU","hasKeysOfU","acyclicEqualsArray","unzipObjIntoU","assocPartialU","dissocPartialU","localSpacePtr","maybeWorldSpacePtr","maybeParentWorldSpacePtr","SerializeTransformToBinary","ParseTransformFromBinary","Quat_1","Matrix_2","Input_1","setTransformPosition","setTransformOrigin","setTransformScale","setTransformRotation","getTransformCenter","getVectorFromTransformCenters","t1","t2","getTransformWorldPosition","moveTransform","pointerWorldPoint","localPoint","createWorldTransform","fromRotationTranslationScaleOrigin","_identityProps","buildup","_log","refPath","stateElementForEach","_callElements","stateElementForEachWithPath","cPath","stateElementMap","mapFn","_mapElementTree","stateElementPropsMap","_mapPropsTree","renderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","unbind","readout","readPixels","deleteFramebuffer","deleteRenderbuffer","deleteTexture","bits","WebGlConstants","customIdCount","infoMap","switchBuffer","info","currentId","bindBuffer","nextId","assignBuffer","bData","createBuffer","usagePattern","bufferData","activateBuffer","vertexAttribPointer","normalized","enableVertexAttribArray","CompileShader","loadShader","shaderType","sourceText","shaderProgram","shader","attachShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMessage","getShaderInfoLog","deleteShader","loadSource","eitherShader","VERTEX_SHADER","vertex","FRAGMENT_SHADER","fragment","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createProgram","programs","switchShaderProgram","programInfo","useProgram","program","uniformLocations","attributeLocations","getUniformLocation","uName","getAttributeLocation","aName","getAttribLocation","Sodium_StagedUpdate_1","Screen_1","Vector_Create_1","sodiumDragCreator","sPointerStart","pixelId","getPixelId","_evtData","worldPosition","sPointerMove","initData","_updateData","Loaders_1","loaderToMaybe","ldr","request","sResponse","mCancel","closeLoader","_createSodiumMaybeLoaderImpureCache","loadFactory","sodiumLoader","mLdr","doClose","listen","mReq","eResponse","sCancel","createSodiumMaybeLoaderImpureCacheTexture","createSodiumMaybeLoaderImpureCacheImage","createSodiumMaybeLoaderImpureCacheXhr","_createSodiumLoaderImpureCache","createSodiumLoaderImpureCacheTexture","createSodiumLoaderImpureCacheImage","createSodiumLoaderImpureCacheXhr","_createSodiumMaybeLoader","createSodiumMaybeLoaderTexture","createSodiumMaybeLoaderImage","createSodiumMaybeLoaderXhr","_createSodiumLoader","createSodiumLoaderTexture","createSodiumLoaderImage","createSodiumLoaderXhr","sodiumAccumSimpleMapper","accumState","sodiumAccumulate","configs","mappers","mapper","streams","stream","accum","sodiumAccumulateSimple","simple","sodiumAccumulateSimpleState","sodiumjs_1","Renderer_WebGl_1","liftWebGlElementCellsClipSpace","cCamera","Cell","cElement","liftWebGlElementsClipSpace","totalRegistrations","getTotalRegistrations","Color","Source","register_","registered","deregister_","register","increment","decrement","deregister","roots","nextID","Vertex","rank","sources","targets","childrn","visited","black","buffered","refCountAdj","refCount","collectCycles","incRefCount","anyChanged","ensureBiggerThan","decRefCount","matched","addSource","descr","colStr","gray","white","purple","chs","referrer","release","possibleRoots","free","markRoots","scanRoots","collectRoots","newRoots","markGray","collectWhite","scanBlack","NULL","Lambda1","deps","lambda1","Lambda1_deps","Lambda1_toFunction","Lambda2","lambda2","Lambda2_deps","Lambda2_toFunction","Lambda3","lambda3","Lambda3_deps","Lambda3_toFunction","Lambda4","lambda4","Lambda4_deps","Lambda4_toFunction","Lambda5","lambda5","Lambda5_deps","Lambda5_toFunction","Lambda6","lambda6","Lambda6_deps","Lambda6_toFunction","toSources","dep","getVertex__","Entry","action","nextSeq","Transaction","inCallback","toRegen","prioritizedQ","__WEBPACK_IMPORTED_MODULE_0_typescript_collections__","sampleQ","lastQ","postQ","requestRegen","prioritized","sample","post","childIx","existing","neu","checkRegen","isActive","currentTransaction","sq","parent_1","onStart","onStartHooks","run","transWas","runningOnStartHooks","CoalesceHandler","accumValid","send_","Lazy","lift4","Unit","UNIT","Operational","updates","getStream__","sSpark","StreamWithSend","sInitial","snapshot1","defer","setVertex__","listen_","as","_loop_1","LazySample","cell","hasValue","ApplyState","f_present","a_present","initValue","setStream","Stream","me","valueUpdate","lazyInitValue","sampleNoTrans__","sampleLazy","sampleLazyNoTrans__","holdLazy","fn0","cf","cc","dd","lift5","ee","lift6","ff","ca","cf_value","ca_value","src1","src2","coalesce__","switchC","cca","za","ba","last_ca","cca_value","kill2","kill1","switchS","csa","h2","sa","Listener","LazyCell","listeners","firings","mapTo","merge_","coalescer","filterNotNull","f_","snapshot3","snapshot4","snapshot5","snapshot6","initState","collectLazy","ea","StreamLoop","ebs","eb","bs","es_out","loop","accumLazy","suppressEarlierFirings","listener","firings_1","removed","__WEBPACK_IMPORTED_MODULE_1_sanctuary_type_classes__","assigned__","sa_out","StreamSink","CellLoop","a_out","CellSink","Tuple2","TimerSystemImpl","sAlarm","TimerSystem","eventQueue","tMinimum","timeSnk","time","ev","mev","tAlarm","cancelCurrent","tAl","sampled","updateTimer","setTimer","kill","oAlarm","SecondsTimerSystem","SecondsTimerSystemImpl","timeout","clearTimeout","MillisecondsTimerSystem","MillisecondsTimerSystemImpl","IOAction","fromAsync","performIO","_arrays","Bag_1","Bag","BSTree_1","BSTree","BSTreeKV_1","Heap_1","LinkedDictionary_1","LinkedDictionary","MultiDictionary_1","MultiDictionary","FactoryDictionary_1","FactoryDictionary_2","DefaultDictionary","PriorityQueue_1","PriorityQueue","Set_1","Stack_1","Stack","MultiRootTree_1","MultiRootTree","_util","toStrF","nCopies","copies","values_1","toSet","elements_1","LinkedDictionaryPair","unlink","HeadOrTailLinkedDictionaryPair","appendToTail","getLinkedDictionaryPair","oldPair","newPair","existingPair","crawlNode","valuesEqualsFunction","allowDuplicateValues","dict","allowDuplicate","v_1","heap","Direction","rootIds","nodes","initRootIds","initNodes","rootId","createEmptyNodeIfNotExist","nodeKey","nodeListItem","getRootIds","getNodes","getObject","extraPropsObject","level","hasParent","childrenCount","extraPropsObject_1","countChildren","startId","returnArray","idsList","moveIdBeforeId","moveId","beforeId","BEFORE","moveIdAfterId","afterId","AFTER","moveIdIntoId","insideId","atStart","INSIDE_AT_START","INSIDE_AT_END","swapRootIdWithRootId","withRootId","leftIndex","findRootId","rightIndex","swapRootPositionWithRootPosition","swapRootPosition","withRootPosition","deleteId","rootDeleteId","nodeAndSubNodesDelete","nodeRefrencesDelete","insertIdBeforeId","insertId","foundRootIdIndex","insertIdIntoRoot","foundNodeIdIndex","findNodeId","insertIdIntoNode","insertIdAfterId","belowId","insertIdIntoId","nodeInsertAtEnd","rootInsertAtEnd","length_1","length_2","direction","sourceRootIndex","targetId","targetRootIndex","rootDelete","nodeInsertAtStart","nodeDeleteAtIndex","swapArrayElements","indexA","indexB","toDeleteLater","nodeDelete","findNode","rootInsertAtStart","Filterable","fantasy-land/filter","duplicate","loadWorker","worker","Worker","onInitial","cmd","removeEventListener","postMessage","StartWorker","msg","BUTTONS","uiElement","instructions","innerHTML","togglesList","eLi","eLabel","eCheckbox","checked","appendChild","broadcastChange","App_Main_1","attrib","uniform","uSize","uTransform","uColor","sizeMatrix","transformMatrix","setClipSpace","ARRAY_BUFFER","STATIC_DRAW","bVertex","FLOAT","fromScaling","uniformMatrix4fv","uniform4fv","drawArrays","TRIANGLE_STRIP","lHitColor","lInteractive","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","elementRenderer"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 83);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8fc8445632362a2b9032","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_curry2.js\n// module id = 0\n// module chunks = 0","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_curry1.js\n// module id = 1\n// module chunks = 0","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_curry3.js\n// module id = 2\n// module chunks = 0","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_dispatchable.js\n// module id = 3\n// module chunks = 0","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xfBase.js\n// module id = 4\n// module chunks = 0","export * from \"./Sanctuary-Typings\";\nexport * from \"./Sanctuary-Instance\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/external/sanctuary/Sanctuary.ts","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/curryN.js\n// module id = 6\n// module chunks = 0","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_has.js\n// module id = 8\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/map.js\n// module id = 9\n// module chunks = 0","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_reduce.js\n// module id = 10\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/equals.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.has = function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n};\n/**\n * Default function to compare element order.\n * @function\n */\nfunction defaultCompare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a === b) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\n/**\n * Default function to test equality.\n * @function\n */\nfunction defaultEquals(a, b) {\n    return a === b;\n}\nexports.defaultEquals = defaultEquals;\n/**\n * Default function to convert an object to a string.\n * @function\n */\nfunction defaultToString(item) {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\nexports.defaultToString = defaultToString;\n/**\n* Joins all the properies of the object using the provided join string\n*/\nfunction makeString(item, join) {\n    if (join === void 0) { join = ','; }\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return item.toString();\n    }\n    else {\n        var toret = '{';\n        var first = true;\n        for (var prop in item) {\n            if (exports.has(item, prop)) {\n                if (first) {\n                    first = false;\n                }\n                else {\n                    toret = toret + join;\n                }\n                toret = toret + prop + ':' + item[prop];\n            }\n        }\n        return toret + '}';\n    }\n}\nexports.makeString = makeString;\n/**\n * Checks if the given argument is a function.\n * @function\n */\nfunction isFunction(func) {\n    return (typeof func) === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks if the given argument is undefined.\n * @function\n */\nfunction isUndefined(obj) {\n    return (typeof obj) === 'undefined';\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks if the given argument is a string.\n * @function\n */\nfunction isString(obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Reverses a compare function.\n * @function\n */\nfunction reverseCompareFunction(compareFunction) {\n    if (isUndefined(compareFunction) || !isFunction(compareFunction)) {\n        return function (a, b) {\n            if (a < b) {\n                return 1;\n            }\n            else if (a === b) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        };\n    }\n    else {\n        return function (d, v) {\n            return compareFunction(d, v) * -1;\n        };\n    }\n}\nexports.reverseCompareFunction = reverseCompareFunction;\n/**\n * Returns an equal function given a compare function.\n * @function\n */\nfunction compareToEquals(compareFunction) {\n    return function (a, b) {\n        return compareFunction(a, b) === 0;\n    };\n}\nexports.compareToEquals = compareToEquals;\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/util.js\n// module id = 12\n// module chunks = 0","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_concat.js\n// module id = 13\n// module chunks = 0","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/slice.js\n// module id = 14\n// module chunks = 0","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nthis.flatbuffers = flatbuffers;\n\n/// @endcond\n/// @}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/flatbuffers/js/flatbuffers.js\n// module id = 15\n// module chunks = 0","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nimport * as glMatrix from \"./gl-matrix/common\";\nimport * as mat2 from \"./gl-matrix/mat2\";\nimport * as mat2d from \"./gl-matrix/mat2d\";\nimport * as mat3 from \"./gl-matrix/mat3\";\nimport * as mat4 from \"./gl-matrix/mat4\";\nimport * as quat from \"./gl-matrix/quat\";\nimport * as vec2 from \"./gl-matrix/vec2\";\nimport * as vec3 from \"./gl-matrix/vec3\";\nimport * as vec4 from \"./gl-matrix/vec4\";\n\nexport {\n  glMatrix,\n  mat2, mat2d, mat3, mat4,\n  quat,\n  vec2, vec3, vec4,\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix.js\n// module id = 16\n// module chunks = 0","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_arity.js\n// module id = 17\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/keys.js\n// module id = 18\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reduce.js\n// module id = 19\n// module chunks = 0","import { freeze, isObject, id, acyclicEqualsU, array0, object0, sndU, applyU, always, curry, isFunction, isString, curryN, assocPartialU, dissocPartialU, constructorOf, toObject, isArray, isDefined, keys, hasU, assign, arityN } from 'infestines';\n\nvar ltU = function ltU(x, y) {\n  return x < y;\n};\nvar gtU = function gtU(x, y) {\n  return x > y;\n};\n\nvar isInstanceOf = /*#__PURE__*/curry(function (Class, x) {\n  return x instanceof Class;\n});\n\nvar create = Object.create;\nvar protoless = function protoless(o) {\n  return assign(create(null), o);\n};\nvar protoless0 = /*#__PURE__*/freeze( /*#__PURE__*/protoless(0));\n\nvar dep = function dep(xs2xsyC) {\n  return function (xsy) {\n    return arityN(xsy.length, function () {\n      return xs2xsyC.apply(undefined, arguments)(xsy).apply(undefined, arguments);\n    });\n  };\n};\n\nvar fn = function fn(xsC, yC) {\n  return function (xsy) {\n    return arityN(xsy.length, function () {\n      for (var _len = arguments.length, xs = Array(_len), _key = 0; _key < _len; _key++) {\n        xs[_key] = arguments[_key];\n      }\n\n      return yC(xsy.apply(null, xsC(xs)));\n    });\n  };\n};\n\nvar res = function res(yC) {\n  return fn(id, yC);\n};\n\nvar args = function args(xsC) {\n  return fn(xsC, id);\n};\n\nvar nth = function nth(i, xC) {\n  return function (xs) {\n    var ys = xs.slice(0);\n    ys[i] = xC(ys[i]);\n    return ys;\n  };\n};\n\nvar par = function par(i, xC) {\n  return args(nth(i, xC));\n};\n\nvar and = function and() {\n  for (var _len2 = arguments.length, xCs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    xCs[_key2] = arguments[_key2];\n  }\n\n  return function (x) {\n    for (var i = 0, n = xCs.length; i < n; ++i) {\n      x = xCs[i](x);\n    }return x;\n  };\n};\n\nvar or = function or() {\n  for (var _len3 = arguments.length, xCs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    xCs[_key3] = arguments[_key3];\n  }\n\n  return function (x) {\n    var es = null;\n    for (var i = 0, n = xCs.length; i < n; ++i) {\n      try {\n        return xCs[i](x);\n      } catch (e) {\n        es = e;\n      }\n    }\n    throw es;\n  };\n};\n\nvar ef = function ef(xE) {\n  return function (x) {\n    xE(x);\n    return x;\n  };\n};\n\nvar tup = function tup() {\n  for (var _len4 = arguments.length, xCs = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    xCs[_key4] = arguments[_key4];\n  }\n\n  return function (xs) {\n    if (xs.length !== xCs.length) throw Error('Expected array of ' + xCs.length + ' elements, but got ' + xs.length);\n    return and.apply(null, xCs.map(function (xC, i) {\n      return nth(i, xC);\n    }))(xs);\n  };\n};\n\nvar arr = function arr(xC) {\n  return function (xs) {\n    return xs.map(xC);\n  };\n};\n\n//\n\nvar toStringPartial = function toStringPartial(x) {\n  return void 0 !== x ? String(x) : '';\n};\n\nvar sliceIndex = function sliceIndex(m, l, d, i) {\n  return void 0 !== i ? Math.min(Math.max(m, i < 0 ? l + i : i), l) : d;\n};\n\nvar cpair = function cpair(xs) {\n  return function (x) {\n    return [x, xs];\n  };\n};\n\nvar unto = function unto(c) {\n  return function (x) {\n    return void 0 !== x ? x : c;\n  };\n};\nvar unto0 = /*#__PURE__*/unto(0);\n\nvar notPartial = function notPartial(x) {\n  return void 0 !== x ? !x : x;\n};\n\nvar singletonPartial = function singletonPartial(x) {\n  return void 0 !== x ? [x] : x;\n};\n\nvar expect = function expect(p, f) {\n  return function (x) {\n    return p(x) ? f(x) : void 0;\n  };\n};\n\nfunction deepFreeze(x) {\n  if (Array.isArray(x)) {\n    x.forEach(deepFreeze);\n    freeze(x);\n  } else if (isObject(x)) {\n    for (var k in x) {\n      deepFreeze(x[k]);\n    }freeze(x);\n  }\n  return x;\n}\n\nfunction freezeArrayOfObjects(xs) {\n  xs.forEach(freeze);\n  return freeze(xs);\n}\n\nvar isArrayOrPrimitive = function isArrayOrPrimitive(x) {\n  return !(x instanceof Object) || Array.isArray(x);\n};\n\nvar rev = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (xs) {\n  if (seemsArrayLike(xs)) {\n    var n = xs.length;\n    var ys = Array(n);\n    var i = 0;\n    while (n) {\n      ys[i++] = xs[--n];\n    }return ys;\n  }\n});\n\n//\n\nvar isEmptyArrayStringOrObject = function isEmptyArrayStringOrObject(x) {\n  return acyclicEqualsU(array0, x) || acyclicEqualsU(object0, x) || x === '';\n};\n\nvar warnEmpty = function warnEmpty(o, v, f) {\n  var msg = '`' + f + '(' + JSON.stringify(v) + ')` is likely unnecessary, because combinators no longer remove empty arrays, objects, or strings by default.  See CHANGELOG for more information.';\n  return function (x) {\n    if (acyclicEqualsU(v, x)) warn(o, msg);\n    return x;\n  };\n};\n\n//\n\nvar mapPartialIndexU = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (xi2y, xs) {\n  var n = xs.length;\n  var ys = Array(n);\n  var j = 0;\n  for (var i = 0, y; i < n; ++i) {\n    if (void 0 !== (y = xi2y(xs[i], i))) ys[j++] = y;\n  }if (j < n) ys.length = j;\n  return ys;\n});\n\nvar mapIfArrayLike = function mapIfArrayLike(xi2y, xs) {\n  return seemsArrayLike(xs) ? mapPartialIndexU(xi2y, xs) : void 0;\n};\n\nvar copyToFrom = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function (ys, k, xs, i, j) {\n    return ys.length === k + j - i ? freeze(fn$$1(ys, k, xs, i, j)) : fn$$1(ys, k, xs, i, j);\n  };\n})(function (ys, k, xs, i, j) {\n  while (i < j) {\n    ys[k++] = xs[i++];\n  }return ys;\n});\n\n//\n\nfunction selectInArrayLike(xi2v, xs) {\n  for (var i = 0, n = xs.length; i < n; ++i) {\n    var v = xi2v(xs[i], i);\n    if (void 0 !== v) return v;\n  }\n}\n\n//\n\nvar Select = {\n  map: sndU,\n  of: function of() {},\n  ap: function ap(l, r) {\n    return void 0 !== l ? l : r;\n  }\n};\n\nvar Ident = { map: applyU, of: id, ap: applyU, chain: applyU };\n\nvar Const = { map: sndU };\n\nvar ConcatOf = function ConcatOf(ap, empty) {\n  return { map: sndU, ap: ap, of: always(empty) };\n};\n\nvar Sum = /*#__PURE__*/ConcatOf(function (x, y) {\n  return x + y;\n}, 0);\n\nvar mumBy = function mumBy(ord) {\n  return curry(function (xi2y, t, s) {\n    var minX = void 0;\n    var minY = void 0;\n    traverseU(Select, function (x, i) {\n      var y = xi2y(x, i);\n      if (void 0 !== y && (void 0 === minY || ord(y, minY))) {\n        minX = x;\n        minY = y;\n      }\n    }, t, s);\n    return minX;\n  });\n};\n\n//\n\nvar traverseU = function traverseU(C, xi2yC, t, s) {\n  return toFunction(t)(s, void 0, C, xi2yC);\n};\n\n//\n\nvar expectedOptic = 'Expecting an optic';\nvar opticIsEither = 'An optic can be either\\n- a string,\\n- a non-negative integer,\\n- a quaternary optic function,\\n- an ordinary unary or binary function, or\\n- an array of optics.\\nSee documentation of `toFunction` and `compose` for details.';\nvar header = 'partial.lenses: ';\n\nfunction warn(f, m) {\n  if (!f.warned) {\n    f.warned = 1;\n    console.warn(header + m);\n  }\n}\n\nfunction errorGiven(m, o, e) {\n  m = header + m + '.';\n  e = e ? '\\n' + e : '';\n  console.error(m, 'Given:', o, e);\n  throw Error(m + e);\n}\n\nfunction reqIndex(x) {\n  if (!Number.isInteger(x) || x < 0) errorGiven('`index` expects a non-negative integer', x);\n}\n\nfunction reqFunction(o) {\n  if (!(isFunction(o) && (o.length === 4 || o.length <= 2))) errorGiven(expectedOptic, o, opticIsEither);\n}\n\nfunction reqFn(x) {\n  if (!isFunction(x)) errorGiven('Expected a function', x);\n}\n\nfunction reqArray(o) {\n  if (!Array.isArray(o)) errorGiven(expectedOptic, o, opticIsEither);\n}\n\nfunction reqOptic(o) {\n  switch (typeof o) {\n    case 'string':\n      break;\n    case 'number':\n      reqIndex(o);\n      break;\n    case 'object':\n      reqArray(o);\n      for (var i = 0, n = o.length; i < n; ++i) {\n        reqOptic(o[i]);\n      }break;\n    default:\n      reqFunction(o);\n      break;\n  }\n}\n\n//\n\nvar reqString = function reqString(msg) {\n  return function (x) {\n    if (!isString(x)) errorGiven(msg, x);\n  };\n};\n\nvar reqMaybeArray = function reqMaybeArray(msg) {\n  return function (zs) {\n    if (!(void 0 === zs || seemsArrayLike(zs))) errorGiven(msg, zs);\n  };\n};\n\n//\n\nvar reqApplicative = function reqApplicative(name, arg) {\n  return function (C) {\n    if (!C.of) errorGiven('`' + name + (arg ? '(' + arg + ')' : '') + '` requires an applicative', C, 'Note that you cannot `get` a traversal. Perhaps you wanted to `collect` it?');\n  };\n};\n\nvar reqMonad = function reqMonad(name) {\n  return function (C) {\n    if (!C.chain) errorGiven('`' + name + '` requires a monad', C, 'Note that you can only `modify`, `remove`, `set`, and `traverse` a transform.');\n  };\n};\n\n//\n\nvar mkTraverse = function mkTraverse(after, toC) {\n  return curryN(4, function (xi2yC, m) {\n    return m = toC(m), function (t, s) {\n      return after(traverseU(m, xi2yC, t, s));\n    };\n  });\n};\n\n//\n\nvar cons = function cons(t) {\n  return function (h) {\n    return void 0 !== h ? [h, t] : t;\n  };\n};\nvar consTo = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (n) {\n  var xs = [];\n  while (cons !== n) {\n    xs.push(n[0]);\n    n = n[1];\n  }\n  return xs.reverse();\n});\n\nvar traversePartialIndex = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqApplicative('elems'))))(function (A, xi2yA, xs) {\n  var map = A.map,\n      ap = A.ap;\n\n  var xsA = A.of(cons);\n  var n = xs.length;\n  if (map === sndU) {\n    for (var i = 0; i < n; ++i) {\n      xsA = ap(xsA, xi2yA(xs[i], i));\n    }return xsA;\n  } else {\n    for (var _i2 = 0; _i2 < n; ++_i2) {\n      xsA = ap(map(cons, xsA), xi2yA(xs[_i2], _i2));\n    }return map(consTo, xsA);\n  }\n});\n\n//\n\nvar lensFrom = function lensFrom(get, set) {\n  return function (i) {\n    return function (x, _i, F, xi2yF) {\n      return F.map(function (v) {\n        return set(i, v, x);\n      }, xi2yF(get(i, x), i));\n    };\n  };\n};\n\n//\n\nvar getProp = function getProp(k, o) {\n  return o instanceof Object ? o[k] : void 0;\n};\n\nvar setProp = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (k, v, o) {\n  return void 0 !== v ? assocPartialU(k, v, o) : dissocPartialU(k, o) || object0;\n});\n\nvar funProp = /*#__PURE__*/lensFrom(getProp, setProp);\n\n//\n\nvar getIndex = function getIndex(i, xs) {\n  return seemsArrayLike(xs) ? xs[i] : void 0;\n};\n\nvar setIndex = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : fn(nth(0, ef(reqIndex)), freeze))(function (i, x, xs) {\n  if (!seemsArrayLike(xs)) xs = '';\n  var n = xs.length;\n  if (void 0 !== x) {\n    var m = Math.max(i + 1, n);\n    var ys = Array(m);\n    for (var j = 0; j < m; ++j) {\n      ys[j] = xs[j];\n    }ys[i] = x;\n    return ys;\n  } else {\n    if (n <= i) return copyToFrom(Array(n), 0, xs, 0, n);\n    var _ys = Array(n - 1);\n    for (var _j = 0; _j < i; ++_j) {\n      _ys[_j] = xs[_j];\n    }for (var _j2 = i + 1; _j2 < n; ++_j2) {\n      _ys[_j2 - 1] = xs[_j2];\n    }return _ys;\n  }\n});\n\nvar funIndex = /*#__PURE__*/lensFrom(getIndex, setIndex);\n\n//\n\nvar composedMiddle = function composedMiddle(o, r) {\n  return function (F, xi2yF) {\n    return xi2yF = r(F, xi2yF), function (x, i) {\n      return o(x, i, F, xi2yF);\n    };\n  };\n};\n\nfunction composed(oi0, os) {\n  var n = os.length - oi0;\n  if (n < 2) {\n    return n ? toFunction(os[oi0]) : identity;\n  } else {\n    var _last = toFunction(os[oi0 + --n]);\n    var r = function r(F, xi2yF) {\n      return function (x, i) {\n        return _last(x, i, F, xi2yF);\n      };\n    };\n    while (--n) {\n      r = composedMiddle(toFunction(os[oi0 + n]), r);\n    }var _first = toFunction(os[oi0]);\n    return function (x, i, F, xi2yF) {\n      return _first(x, i, F, r(F, xi2yF));\n    };\n  }\n}\n\nvar setU = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqOptic)))(function (o, x, s) {\n  switch (typeof o) {\n    case 'string':\n      return setProp(o, x, s);\n    case 'number':\n      return setIndex(o, x, s);\n    case 'object':\n      return modifyComposed(o, 0, s, x);\n    default:\n      return o.length === 4 ? o(s, void 0, Ident, always(x)) : s;\n  }\n});\n\nvar modifyU = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqOptic)))(function (o, xi2x, s) {\n  switch (typeof o) {\n    case 'string':\n      return setProp(o, xi2x(getProp(o, s), o), s);\n    case 'number':\n      return setIndex(o, xi2x(getIndex(o, s), o), s);\n    case 'object':\n      return modifyComposed(o, xi2x, s);\n    default:\n      return o.length === 4 ? o(s, void 0, Ident, xi2x) : (xi2x(o(s, void 0), void 0), s);\n  }\n});\n\nfunction makeIx(i) {\n  var ix = function ix(s, j) {\n    return ix.v = j, s;\n  };\n  ix.v = i;\n  return ix;\n}\n\nfunction getNestedU(l, s, j, ix) {\n  for (var n = l.length, o; j < n; ++j) {\n    switch (typeof (o = l[j])) {\n      case 'string':\n        s = getProp(ix.v = o, s);\n        break;\n      case 'number':\n        s = getIndex(ix.v = o, s);\n        break;\n      case 'object':\n        s = getNestedU(o, s, 0, ix);\n        break;\n      default:\n        s = o(s, ix.v, Const, ix);\n    }\n  }return s;\n}\n\nvar getU = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqOptic)))(function (l, s) {\n  switch (typeof l) {\n    case 'string':\n      return getProp(l, s);\n    case 'number':\n      return getIndex(l, s);\n    case 'object':\n      for (var i = 0, n = l.length, o; i < n; ++i) {\n        switch (typeof (o = l[i])) {\n          case 'string':\n            s = getProp(o, s);\n            break;\n          case 'number':\n            s = getIndex(o, s);\n            break;\n          default:\n            return getNestedU(l, s, i, makeIx(l[i - 1]));\n        }\n      }return s;\n    default:\n      return l(s, void 0, Const, id);\n  }\n});\n\nfunction modifyComposed(os, xi2y, x, y) {\n  var n = os.length;\n  var xs = Array(n);\n  for (var i = 0, o; i < n; ++i) {\n    xs[i] = x;\n    switch (typeof (o = os[i])) {\n      case 'string':\n        x = getProp(o, x);\n        break;\n      case 'number':\n        x = getIndex(o, x);\n        break;\n      default:\n        x = composed(i, os)(x, os[i - 1], Ident, xi2y || always(y));\n        n = i;\n        break;\n    }\n  }\n  if (n === os.length) x = xi2y ? xi2y(x, os[n - 1]) : y;\n  for (var _o; 0 <= --n;) {\n    x = isString(_o = os[n]) ? setProp(_o, x, xs[n]) : setIndex(_o, x, xs[n]);\n  }return x;\n}\n\n//\n\nvar lensU = function lensU(get, set) {\n  return function (x, i, F, xi2yF) {\n    return F.map(function (y) {\n      return set(y, x, i);\n    }, xi2yF(get(x, i), i));\n  };\n};\n\nvar isoU = function isoU(bwd, fwd) {\n  return function (x, i, F, xi2yF) {\n    return F.map(fwd, xi2yF(bwd(x), i));\n  };\n};\n\n//\n\nvar getPick = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (template, x) {\n  var r = void 0;\n  for (var k in template) {\n    var t = template[k];\n    var v = isObject(t) ? getPick(t, x) : getU(t, x);\n    if (void 0 !== v) {\n      if (!r) r = {};\n      r[k] = v;\n    }\n  }\n  return r;\n});\n\nvar reqTemplate = function reqTemplate(name) {\n  return function (template) {\n    if (!isObject(template)) errorGiven('`' + name + '` expects a plain Object template', template);\n  };\n};\n\nvar reqObject = function reqObject(msg) {\n  return function (value) {\n    if (!(void 0 === value || value instanceof Object)) errorGiven(msg, value);\n  };\n};\n\nvar setPick = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(1, ef(reqObject('`pick` must be set with undefined or an object'))))(function (template, value, x) {\n  for (var k in template) {\n    var v = value && value[k];\n    var t = template[k];\n    x = isObject(t) ? setPick(t, v, x) : setU(t, v, x);\n  }\n  return x;\n});\n\n//\n\nvar toObject$1 = function toObject$$1(x) {\n  return constructorOf(x) !== Object ? toObject(x) : x;\n};\n\n//\n\nvar identity = function identity(x, i, _F, xi2yF) {\n  return xi2yF(x, i);\n};\n\n//\n\nvar branchAssemble = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(res(freeze)))(function (ks) {\n  return function (xs) {\n    var r = {};\n    var i = ks.length;\n    while (i--) {\n      var v = xs[0];\n      if (void 0 !== v) {\n        r[ks[i]] = v;\n      }\n      xs = xs[1];\n    }\n    return r;\n  };\n});\n\nvar branchOr1Level = function branchOr1Level(otherwise, k2o) {\n  return function (x, _i, A, xi2yA) {\n    var xO = x instanceof Object ? toObject$1(x) : object0;\n\n    if (Ident === A) {\n      var written = void 0;\n      var r = {};\n      for (var k in k2o) {\n        written = 1;\n        var y = k2o[k](xO[k], k, A, xi2yA);\n        if (void 0 !== y) r[k] = y;\n      }\n      var t = written;\n      for (var _k in xO) {\n        if (void 0 === (t && k2o[_k])) {\n          written = 1;\n          var _y = otherwise(xO[_k], _k, A, xi2yA);\n          if (void 0 !== _y) r[_k] = _y;\n        }\n      }\n      return written ? r : x;\n    } else if (Select === A) {\n      for (var _k2 in k2o) {\n        var _y2 = k2o[_k2](xO[_k2], _k2, A, xi2yA);\n        if (void 0 !== _y2) return _y2;\n      }\n      for (var _k3 in xO) {\n        if (void 0 === k2o[_k3]) {\n          var _y3 = otherwise(xO[_k3], _k3, A, xi2yA);\n          if (void 0 !== _y3) return _y3;\n        }\n      }\n    } else {\n      var map = A.map,\n          ap = A.ap,\n          of = A.of;\n\n      var xsA = of(cpair);\n      var ks = [];\n      for (var _k4 in k2o) {\n        ks.push(_k4);\n        xsA = ap(map(cpair, xsA), k2o[_k4](xO[_k4], _k4, A, xi2yA));\n      }\n      var _t2 = ks.length ? true : void 0;\n      for (var _k5 in xO) {\n        if (void 0 === (_t2 && k2o[_k5])) {\n          ks.push(_k5);\n          xsA = ap(map(cpair, xsA), otherwise(xO[_k5], _k5, A, xi2yA));\n        }\n      }\n      return ks.length ? map(branchAssemble(ks), xsA) : of(x);\n    }\n  };\n};\n\nfunction branchOrU(otherwise, template) {\n  var k2o = create(null);\n  for (var k in template) {\n    var v = template[k];\n    k2o[k] = isObject(v) ? branchOrU(otherwise, v) : toFunction(v);\n  }\n  return branchOr1Level(otherwise, k2o);\n}\n\nvar replaced = function replaced(inn, out, x) {\n  return acyclicEqualsU(x, inn) ? out : x;\n};\n\nfunction findIndexHint(hint, xi2b, xs) {\n  var u = hint.hint;\n  var n = xs.length;\n  if (n <= u) u = n - 1;\n  if (u < 0) u = 0;\n  var d = u - 1;\n  for (; 0 <= d && u < n; ++u, --d) {\n    if (xi2b(xs[u], u, hint)) return u;\n    if (xi2b(xs[d], d, hint)) return d;\n  }\n  for (; u < n; ++u) {\n    if (xi2b(xs[u], u, hint)) return u;\n  }for (; 0 <= d; --d) {\n    if (xi2b(xs[d], d, hint)) return d;\n  }return n;\n}\n\nvar partitionIntoIndex = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : dep(function (_xi2b, _xs, ts, fs) {\n  return res(ef(function () {\n    freeze(ts);\n    freeze(fs);\n  }));\n}))(function (xi2b, xs, ts, fs) {\n  for (var i = 0, n = xs.length, x; i < n; ++i) {\n    (xi2b(x = xs[i], i) ? ts : fs).push(x);\n  }\n});\n\nvar fromReader = function fromReader(wi2x) {\n  return function (w, i, F, xi2yF) {\n    return F.map(always(w), xi2yF(wi2x(w, i), i));\n  };\n};\n\n//\n\nvar reValue = function reValue(m) {\n  return m[0];\n};\nvar reIndex = function reIndex(m) {\n  return m.index;\n};\n\nvar reNext = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function (m, re) {\n    var res$$1 = fn$$1(m, re);\n    if ('' === res$$1) warn(reNext, '`matches(' + re + ')` traversal terminated due to empty match.  `matches` traversal shouldn\\'t be used with regular expressions that can produce empty matches.');\n    return res$$1;\n  };\n})(function (m, re) {\n  var lastIndex = re.lastIndex;\n  re.lastIndex = reIndex(m) + m[0].length;\n  var n = re.exec(m.input);\n  re.lastIndex = lastIndex;\n  return n && n[0] && n;\n});\n\n//\n\nvar iterCollect = function iterCollect(s) {\n  return function (xs) {\n    return function (x) {\n      return [s, x, xs];\n    };\n  };\n};\n\nvar iterToArray = function iterToArray(xs) {\n  var ys = [];\n  while (iterCollect !== xs) {\n    ys.push(xs[0], xs[1]);\n    xs = xs[2];\n  }\n  return ys;\n};\n\nfunction iterSelect(xi2y, t, s) {\n  while (s = reNext(s, t)) {\n    var y = xi2y(reValue(s), reIndex(s));\n    if (void 0 !== y) return y;\n  }\n}\n\nfunction iterEager(map, ap, of, xi2yA, t, s) {\n  var r = of(iterCollect);\n  while (s = reNext(s, t)) {\n    r = ap(ap(map(iterCollect, of(s)), r), xi2yA(reValue(s), reIndex(s)));\n  }return r;\n}\n\n//\n\nvar keyed = /*#__PURE__*/isoU( /*#__PURE__*/expect( /*#__PURE__*/isInstanceOf(Object), /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freezeArrayOfObjects))(function (x) {\n  x = toObject$1(x);\n  var es = [];\n  for (var key in x) {\n    es.push([key, x[key]]);\n  }return es;\n})), /*#__PURE__*/expect(isArray, /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (es) {\n  var o = {};\n  for (var i = 0, n = es.length; i < n; ++i) {\n    var entry = es[i];\n    if (entry.length === 2) o[entry[0]] = entry[1];\n  }\n  return o;\n})));\n\n//\n\nvar matchesJoin = function matchesJoin(input) {\n  return function (matchesIn) {\n    var result = '';\n    var lastIndex = 0;\n    var matches = iterToArray(matchesIn);\n    var n = matches.length;\n    for (var j = n - 2; j !== -2; j += -2) {\n      var m = matches[j];\n      var i = reIndex(m);\n      result += input.slice(lastIndex, i);\n      var s = matches[j + 1];\n      if (void 0 !== s) result += s;\n      lastIndex = i + m[0].length;\n    }\n\n    result += input.slice(lastIndex);\n    return result;\n  };\n};\n\n//\n\nvar ifteU = function ifteU(c, t, e) {\n  return function (x, i, C, xi2yC) {\n    return (c(x, i) ? t : e)(x, i, C, xi2yC);\n  };\n};\n\nvar orElseU = function orElseU(back, prim) {\n  return prim = toFunction(prim), back = toFunction(back), function (x, i, C, xi2yC) {\n    return (isDefined$1(prim, x) ? prim : back)(x, i, C, xi2yC);\n  };\n};\n\nfunction zeroOp(y, i, C, xi2yC, x) {\n  var of = C.of;\n  return of ? of(y) : C.map(always(y), xi2yC(x, i));\n}\n\n//\n\nvar seq2U = function seq2U(l, r) {\n  return function (x, i, M, xi2yM) {\n    return M.chain(function (x) {\n      return r(x, i, M, xi2yM);\n    }, l(x, i, M, xi2yM));\n  };\n};\n\n//\n\nvar pickInAux = function pickInAux(t, k) {\n  return [k, pickIn(t)];\n};\n\n// Auxiliary\n\nvar seemsArrayLike = function seemsArrayLike(x) {\n  return x instanceof Object && (x = x.length, x === x >> 0 && 0 <= x) || isString(x);\n};\n\n// Internals\n\nvar toFunction = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqOptic)))(function (o) {\n  switch (typeof o) {\n    case 'string':\n      return funProp(o);\n    case 'number':\n      return funIndex(o);\n    case 'object':\n      return composed(0, o);\n    default:\n      return o.length === 4 ? o : fromReader(o);\n  }\n});\n\n// Operations on optics\n\nvar assign$1 = /*#__PURE__*/curry(function (o, x, s) {\n  return setU([o, propsOf(x)], x, s);\n});\n\nvar modify = /*#__PURE__*/curry(modifyU);\n\nvar remove = /*#__PURE__*/curry(function (o, s) {\n  return setU(o, void 0, s);\n});\n\nvar set = /*#__PURE__*/curry(setU);\n\nvar transform = /*#__PURE__*/curry(function (o, s) {\n  return modifyU(o, id, s);\n});\n\nvar traverse = /*#__PURE__*/curry(traverseU);\n\n// Nesting\n\nfunction compose() {\n  var n = arguments.length;\n  if (n < 2) {\n    return n ? arguments[0] : identity;\n  } else {\n    var os = Array(n);\n    while (n--) {\n      os[n] = arguments[n];\n    }return os;\n  }\n}\n\n// Recursing\n\nfunction lazy(o2o) {\n  var _memo = function memo(x, i, C, xi2yC) {\n    return (_memo = toFunction(o2o(rec)))(x, i, C, xi2yC);\n  };\n  function rec(x, i, C, xi2yC) {\n    return _memo(x, i, C, xi2yC);\n  }\n  return rec;\n}\n\n// Adapting\n\nvar choices = function choices(o) {\n  for (var _len = arguments.length, os = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    os[_key - 1] = arguments[_key];\n  }\n\n  return os.length ? orElseU(os.reduceRight(orElseU), o) : o;\n};\n\nvar choose = function choose(xiM2o) {\n  return function (x, i, C, xi2yC) {\n    return toFunction(xiM2o(x, i))(x, i, C, xi2yC);\n  };\n};\n\nvar cond = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function () {\n    for (var _len2 = arguments.length, cs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      cs[_key2] = arguments[_key2];\n    }\n\n    var pair = tup(ef(reqFn), ef(reqOptic));\n    arr(pair)(cs.slice(0, -1));\n    arr(or(tup(ef(reqOptic)), pair))(cs.slice(-1));\n    return fn$$1.apply(undefined, cs);\n  };\n})(function () {\n  var n = arguments.length;\n  var r = zero;\n  if (n) {\n    var c = arguments[n - 1];\n    if (c.length === 1) {\n      r = toFunction(c[0]);\n      --n;\n    }\n    while (n--) {\n      var _c2 = arguments[n];\n      r = ifteU(_c2[0], toFunction(_c2[1]), r);\n    }\n  }\n  return r;\n});\n\nvar ifElse = /*#__PURE__*/curry(function (c, t, e) {\n  return ifteU(c, toFunction(t), toFunction(e));\n});\n\nvar iftes = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function (_c, _t) {\n    warn(iftes, '`iftes` has been obsoleted.  Use `ifElse` or `cond` instead.  See CHANGELOG for details.');\n    return fn$$1.apply(null, arguments);\n  };\n})(function (_c, _t) {\n  var n = arguments.length;\n  var r = n & 1 ? toFunction(arguments[--n]) : zero;\n  while (0 <= (n -= 2)) {\n    r = ifteU(arguments[n], toFunction(arguments[n + 1]), r);\n  }return r;\n});\n\nvar orElse = /*#__PURE__*/curry(orElseU);\n\n// Querying\n\nvar chain = /*#__PURE__*/curry(function (xi2yO, xO) {\n  return [xO, choose(function (xM, i) {\n    return void 0 !== xM ? xi2yO(xM, i) : zero;\n  })];\n});\n\nvar choice = function choice() {\n  for (var _len3 = arguments.length, os = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    os[_key3] = arguments[_key3];\n  }\n\n  return os.reduceRight(orElseU, zero);\n};\n\nvar unless = function unless(p) {\n  return ifteU(p, zeroOp, identity);\n};\n\nvar when = function when(p) {\n  return ifteU(p, identity, zeroOp);\n};\n\nvar optional = /*#__PURE__*/when(isDefined);\n\nvar zero = function zero(x, i, C, xi2yC) {\n  return zeroOp(x, i, C, xi2yC);\n};\n\n// Transforming\n\nvar assignOp = function assignOp(x) {\n  return [propsOf(x), setOp(x)];\n};\n\nvar modifyOp = function modifyOp(xi2y) {\n  return function (x, i, C, xi2yC) {\n    return zeroOp(x = xi2y(x, i), i, C, xi2yC, x);\n  };\n};\n\nvar setOp = function setOp(y) {\n  return function (_x, i, C, xi2yC) {\n    return zeroOp(y, i, C, xi2yC, y);\n  };\n};\n\nvar removeOp = /*#__PURE__*/setOp();\n\n// Debugging\n\nfunction log() {\n  var _arguments = arguments;\n\n  var show = curry(function (dir, x) {\n    return console.log.apply(console, copyToFrom([], 0, _arguments, 0, _arguments.length).concat([dir, x])), x;\n  });\n  return isoU(show('get'), show('set'));\n}\n\n// Sequencing\n\nvar seq = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function () {\n    return par(2, ef(reqMonad('seq')))(fn$$1.apply(undefined, arguments));\n  };\n})(function () {\n  var n = arguments.length;\n  var r = zero;\n  if (n) {\n    r = toFunction(arguments[--n]);\n    while (n) {\n      r = seq2U(toFunction(arguments[--n]), r);\n    }\n  }\n  return r;\n});\n\n// Creating new traversals\n\nvar branchOr = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(1, ef(reqTemplate('branchOr'))))( /*#__PURE__*/curryN(2, function (otherwise) {\n  return otherwise = toFunction(otherwise), function (template) {\n    return branchOrU(otherwise, template);\n  };\n}));\n\nvar branch = /*#__PURE__*/branchOr(zero);\n\n// Traversals and combinators\n\nvar elems = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(2, ef(reqApplicative('elems'))))(function (xs, _i, A, xi2yA) {\n  if (seemsArrayLike(xs)) {\n    return A === Ident ? mapPartialIndexU(xi2yA, xs) : A === Select ? selectInArrayLike(xi2yA, xs) : traversePartialIndex(A, xi2yA, xs);\n  } else {\n    return A.of(xs);\n  }\n});\n\nvar entries = /*#__PURE__*/toFunction([keyed, elems]);\n\nvar flatten = /*#__PURE__*/lazy(function (rec) {\n  return ifElse(Array.isArray, [elems, rec], identity);\n});\n\nvar keys$1 = /*#__PURE__*/toFunction([keyed, elems, 0]);\n\nvar matches = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : dep(function (re) {\n  return re.global ? res(par(2, ef(reqApplicative('matches', re)))) : id;\n}))(function (re) {\n  return function (x, _i, C, xi2yC) {\n    if (isString(x)) {\n      var map = C.map;\n\n      if (re.global) {\n        var m0 = [''];\n        m0.input = x;\n        m0.index = 0;\n        if (Select === C) {\n          return iterSelect(xi2yC, re, m0);\n        } else {\n          var ap = C.ap,\n              of = C.of;\n\n          return map(matchesJoin(x), iterEager(map, ap, of, xi2yC, re, m0));\n        }\n      } else {\n        var m = x.match(re);\n        if (m) return map(function (y) {\n          return x.replace(re, void 0 !== y ? y : '');\n        }, xi2yC(m[0], reIndex(m)));\n      }\n    }\n    return zeroOp(x, void 0, C, xi2yC);\n  };\n});\n\nvar values = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(2, ef(reqApplicative('values'))))( /*#__PURE__*/branchOr1Level(identity, protoless0));\n\n// Folds over traversals\n\nvar all = /*#__PURE__*/curry(function (xi2b, t, s) {\n  return !traverseU(Select, function (x, i) {\n    if (!xi2b(x, i)) return true;\n  }, t, s);\n});\n\nvar and$1 = /*#__PURE__*/all(id);\n\nvar any = /*#__PURE__*/curry(function (xi2b, t, s) {\n  return !!traverseU(Select, function (x, i) {\n    if (xi2b(x, i)) return true;\n  }, t, s);\n});\n\nvar collectAs = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? curry : res(freeze))(function (xi2y, t, s) {\n  var results = [];\n  traverseU(Select, function (x, i) {\n    var y = xi2y(x, i);\n    if (void 0 !== y) results.push(y);\n  }, t, s);\n  return results;\n});\n\nvar collect = /*#__PURE__*/collectAs(id);\n\nvar concatAs = /*#__PURE__*/mkTraverse(id, function (m) {\n  return ConcatOf(m.concat, m.empty());\n});\n\nvar concat = /*#__PURE__*/concatAs(id);\n\nvar countIf = /*#__PURE__*/curry(function (p, t, s) {\n  return traverseU(Sum, function (x, i) {\n    return p(x, i) ? 1 : 0;\n  }, t, s);\n});\n\nvar count = /*#__PURE__*/countIf(isDefined);\n\nvar countsAs = /*#__PURE__*/curry(function (xi2k, t, s) {\n  var counts = new Map();\n  traverseU(Select, function (x, i) {\n    var k = xi2k(x, i);\n    var n = counts.get(k);\n    counts.set(k, void 0 !== n ? n + 1 : 1);\n  }, t, s);\n  return counts;\n});\n\nvar counts = /*#__PURE__*/countsAs(id);\n\nvar foldl = /*#__PURE__*/curry(function (f, r, t, s) {\n  traverseU(Select, function (x, i) {\n    r = f(r, x, i);\n  }, t, s);\n  return r;\n});\n\nvar foldr = /*#__PURE__*/curry(function (f, r, t, s) {\n  var is = [];\n  var xs = [];\n  traverseU(Select, function (x, i) {\n    xs.push(x);\n    is.push(i);\n  }, t, s);\n  for (var i = xs.length - 1; 0 <= i; --i) {\n    r = f(r, xs[i], is[i]);\n  }return r;\n});\n\nvar forEach = /*#__PURE__*/curry(function (f, t, s) {\n  return traverseU(Select, function (x, i) {\n    f(x, i);\n  }, t, s);\n});\n\nvar isDefined$1 = /*#__PURE__*/curry(function (t, s) {\n  return void 0 !== traverseU(Select, id, t, s);\n});\n\nvar isEmpty = /*#__PURE__*/curry(function (t, s) {\n  return !traverseU(Select, always(true), t, s);\n});\n\nvar joinAs = /*#__PURE__*/mkTraverse(toStringPartial, /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqString('`join` and `joinAs` expect a string delimiter'))))(function (d) {\n  return ConcatOf(function (x, y) {\n    return void 0 !== x ? void 0 !== y ? x + d + y : x : y;\n  });\n}));\n\nvar join = /*#__PURE__*/joinAs(id);\n\nvar maximumBy = /*#__PURE__*/mumBy(gtU);\n\nvar maximum = /*#__PURE__*/maximumBy(id);\n\nvar meanAs = /*#__PURE__*/curry(function (xi2y, t, s) {\n  var sum = 0;\n  var num = 0;\n  traverseU(Select, function (x, i) {\n    var y = xi2y(x, i);\n    if (void 0 !== y) {\n      num += 1;\n      sum += y;\n    }\n  }, t, s);\n  return sum / num;\n});\n\nvar mean = /*#__PURE__*/meanAs(id);\n\nvar minimumBy = /*#__PURE__*/mumBy(ltU);\n\nvar minimum = /*#__PURE__*/minimumBy(id);\n\nvar none = /*#__PURE__*/curry(function (xi2b, t, s) {\n  return !traverseU(Select, function (x, i) {\n    if (xi2b(x, i)) return true;\n  }, t, s);\n});\n\nvar or$1 = /*#__PURE__*/any(id);\n\nvar productAs = /*#__PURE__*/traverse( /*#__PURE__*/ConcatOf(function (x, y) {\n  return x * y;\n}, 1));\n\nvar product = /*#__PURE__*/productAs( /*#__PURE__*/unto(1));\n\nvar selectAs = /*#__PURE__*/traverse(Select);\n\nvar select = /*#__PURE__*/selectAs(id);\n\nvar sumAs = /*#__PURE__*/traverse(Sum);\n\nvar sum = /*#__PURE__*/sumAs(unto0);\n\n// Operations on lenses\n\nfunction get(l, s) {\n  return 1 < arguments.length ? getU(l, s) : function (s) {\n    return getU(l, s);\n  };\n}\n\n// Creating new lenses\n\nvar lens = /*#__PURE__*/curry(lensU);\n\nvar setter = /*#__PURE__*/lens(id);\n\nvar foldTraversalLens = /*#__PURE__*/curry(function (fold, traversal) {\n  return lensU(fold(traversal), set(traversal));\n});\n\n// Enforcing invariants\n\nfunction defaults(out) {\n  function o2u(x) {\n    return replaced(out, void 0, x);\n  }\n  return function (x, i, F, xi2yF) {\n    return F.map(o2u, xi2yF(void 0 !== x ? x : out, i));\n  };\n}\n\nvar define = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function (inn) {\n    var res$$1 = fn$$1(inn);\n    if (isEmptyArrayStringOrObject(inn)) return toFunction([isoU(warnEmpty(fn$$1, inn, 'define'), id), res$$1, isoU(id, warnEmpty(define, inn, 'define'))]);else return res$$1;\n  };\n})(function (v) {\n  var untoV = unto(v);\n  return function (x, i, F, xi2yF) {\n    return F.map(untoV, xi2yF(void 0 !== x ? x : v, i));\n  };\n});\n\nvar normalize = function normalize(xi2x) {\n  return [reread(xi2x), rewrite(xi2x)];\n};\n\nvar required = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (fn$$1) {\n  return function (inn) {\n    var res$$1 = fn$$1(inn);\n    if (isEmptyArrayStringOrObject(inn)) return toFunction([res$$1, isoU(id, warnEmpty(required, inn, 'required'))]);else return res$$1;\n  };\n})(function (inn) {\n  return replace(inn, void 0);\n});\n\nvar reread = function reread(xi2x) {\n  return function (x, i, _F, xi2yF) {\n    return xi2yF(void 0 !== x ? xi2x(x, i) : x, i);\n  };\n};\n\nvar rewrite = function rewrite(yi2y) {\n  return function (x, i, F, xi2yF) {\n    return F.map(function (y) {\n      return void 0 !== y ? yi2y(y, i) : y;\n    }, xi2yF(x, i));\n  };\n};\n\n// Lensing arrays\n\nfunction append(xs, _, F, xi2yF) {\n  var i = seemsArrayLike(xs) ? xs.length : 0;\n  return F.map(function (x) {\n    return setIndex(i, x, xs);\n  }, xi2yF(void 0, i));\n}\n\nvar filter = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(function (lens) {\n  return toFunction([lens, isoU(id, ef(reqMaybeArray('`filter` must be set with undefined or an array-like object')))]);\n}))(function (xi2b) {\n  return function (xs, i, F, xi2yF) {\n    var ts = void 0,\n        fs = void 0;\n    if (seemsArrayLike(xs)) partitionIntoIndex(xi2b, xs, ts = [], fs = []);\n    return F.map(function (ts) {\n      var tsN = ts ? ts.length : 0;\n      var fsN = fs ? fs.length : 0;\n      var n = tsN + fsN;\n      return n === fsN ? fs : copyToFrom(copyToFrom(Array(n), 0, ts, 0, tsN), tsN, fs, 0, fsN);\n    }, xi2yF(ts, i));\n  };\n});\n\nfunction find(xih2b) {\n  var hint = arguments.length > 1 ? arguments[1] : { hint: 0 };\n  return function (xs, _i, F, xi2yF) {\n    var ys = seemsArrayLike(xs) ? xs : '';\n    var i = hint.hint = findIndexHint(hint, xih2b, ys);\n    return F.map(function (v) {\n      return setIndex(i, v, ys);\n    }, xi2yF(ys[i], i));\n  };\n}\n\nfunction findWith(o) {\n  var oo = toFunction(o);\n  var p = isDefined$1(oo);\n  return [arguments.length > 1 ? find(p, arguments[1]) : find(p), oo];\n}\n\nvar first = 0;\n\nvar index = process.env.NODE_ENV !== 'production' ? /*#__PURE__*/ef(reqIndex) : id;\n\nvar last = /*#__PURE__*/choose(function (maybeArray) {\n  return seemsArrayLike(maybeArray) && maybeArray.length ? maybeArray.length - 1 : 0;\n});\n\nvar prefix = function prefix(n) {\n  return slice(0, n);\n};\n\nvar slice = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? curry : res(function (lens) {\n  return toFunction([lens, isoU(id, ef(reqMaybeArray('`slice` must be set with undefined or an array-like object')))]);\n}))(function (begin, end) {\n  return function (xs, i, F, xsi2yF) {\n    var seems = seemsArrayLike(xs);\n    var xsN = seems && xs.length;\n    var b = sliceIndex(0, xsN, 0, begin);\n    var e = sliceIndex(b, xsN, xsN, end);\n    return F.map(function (zs) {\n      var zsN = zs ? zs.length : 0;\n      var bPzsN = b + zsN;\n      var n = xsN - e + bPzsN;\n      return copyToFrom(copyToFrom(copyToFrom(Array(n), 0, xs, 0, b), b, zs, 0, zsN), bPzsN, xs, e, xsN);\n    }, xsi2yF(seems ? copyToFrom(Array(Math.max(0, e - b)), 0, xs, b, e) : void 0, i));\n  };\n});\n\nvar suffix = function suffix(n) {\n  return slice(0 === n ? Infinity : !n ? 0 : -n, void 0);\n};\n\n// Lensing objects\n\nvar pickIn = function pickIn(t) {\n  return isObject(t) ? pick(modify(values, pickInAux, t)) : t;\n};\n\nvar prop = process.env.NODE_ENV === 'production' ? id : function (x) {\n  if (!isString(x)) errorGiven('`prop` expects a string', x);\n  return x;\n};\n\nfunction props() {\n  var n = arguments.length;\n  var template = {};\n  for (var i = 0, k; i < n; ++i) {\n    template[k = arguments[i]] = k;\n  }return pick(template);\n}\n\nvar propsOf = function propsOf(o) {\n  return props.apply(null, keys(o));\n};\n\nfunction removable() {\n  for (var _len4 = arguments.length, ps = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    ps[_key4] = arguments[_key4];\n  }\n\n  function drop(y) {\n    if (!(y instanceof Object)) return y;\n    for (var i = 0, n = ps.length; i < n; ++i) {\n      if (hasU(ps[i], y)) return y;\n    }\n  }\n  return function (x, i, F, xi2yF) {\n    return F.map(drop, xi2yF(x, i));\n  };\n}\n\n// Providing defaults\n\nvar valueOr = function valueOr(v) {\n  return function (x, i, _F, xi2yF) {\n    return xi2yF(x != null ? x : v, i);\n  };\n};\n\n// Transforming data\n\nvar pick = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : par(0, ef(reqTemplate('pick'))))(function (template) {\n  return function (x, i, F, xi2yF) {\n    return F.map(function (v) {\n      return setPick(template, v, x);\n    }, xi2yF(getPick(template, x), i));\n  };\n});\n\nvar replace = /*#__PURE__*/curry(function (inn, out) {\n  function o2i(x) {\n    return replaced(out, inn, x);\n  }\n  return function (x, i, F, xi2yF) {\n    return F.map(o2i, xi2yF(replaced(inn, out, x), i));\n  };\n});\n\n// Operations on isomorphisms\n\nfunction getInverse(o, s) {\n  return 1 < arguments.length ? setU(o, s, void 0) : function (s) {\n    return setU(o, s, void 0);\n  };\n}\n\n// Creating new isomorphisms\n\nvar iso = /*#__PURE__*/curry(isoU);\n\n// Isomorphism combinators\n\nvar array = function array(elem) {\n  var fwd = getInverse(elem);\n  var bwd = get(elem);\n  var mapFwd = function mapFwd(x) {\n    return mapIfArrayLike(fwd, x);\n  };\n  return function (x, i, F, xi2yF) {\n    return F.map(mapFwd, xi2yF(mapIfArrayLike(bwd, x), i));\n  };\n};\n\nvar inverse = function inverse(iso) {\n  return function (x, i, F, xi2yF) {\n    return F.map(function (x) {\n      return getU(iso, x);\n    }, xi2yF(setU(iso, x, void 0), i));\n  };\n};\n\n// Basic isomorphisms\n\nvar complement = /*#__PURE__*/isoU(notPartial, notPartial);\n\nvar indexed = /*#__PURE__*/isoU( /*#__PURE__*/expect(seemsArrayLike, /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freezeArrayOfObjects))(function (xs) {\n  var n = xs.length;\n  var xis = Array(n);\n  for (var i = 0; i < n; ++i) {\n    xis[i] = [i, xs[i]];\n  }return xis;\n})), /*#__PURE__*/expect(isArray, /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(freeze))(function (xis) {\n  var n = xis.length;\n  var xs = Array(n);\n  for (var i = 0; i < n; ++i) {\n    var xi = xis[i];\n    if (xi.length === 2) xs[xi[0]] = xi[1];\n  }\n  n = xs.length;\n  var j = 0;\n  for (var _i3 = 0; _i3 < n; ++_i3) {\n    var x = xs[_i3];\n    if (void 0 !== x) {\n      if (_i3 !== j) xs[j] = x;\n      ++j;\n    }\n  }\n  xs.length = j;\n  return xs;\n})));\n\nvar is = function is(v) {\n  return isoU(function (x) {\n    return acyclicEqualsU(v, x);\n  }, function (b) {\n    return true === b ? v : void 0;\n  });\n};\n\nvar reverse = /*#__PURE__*/isoU(rev, rev);\n\nvar singleton = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : function (iso) {\n  return toFunction([isoU(id, freeze), iso]);\n})(function (x, i, F, xi2yF) {\n  return F.map(singletonPartial, xi2yF((x instanceof Object || isString(x)) && x.length === 1 ? x[0] : void 0, i));\n});\n\n// Standard isomorphisms\n\nvar uri = /*#__PURE__*/isoU( /*#__PURE__*/expect(isString, decodeURI), /*#__PURE__*/expect(isString, encodeURI));\n\nvar uriComponent = /*#__PURE__*/isoU( /*#__PURE__*/expect(isString, decodeURIComponent), /*#__PURE__*/expect(isString, encodeURIComponent));\n\nvar json = /*#__PURE__*/(process.env.NODE_ENV === 'production' ? id : res(function (iso) {\n  return toFunction([iso, isoU(deepFreeze, id)]);\n}))(function (options) {\n  var _ref = options || object0,\n      reviver = _ref.reviver,\n      replacer = _ref.replacer,\n      space = _ref.space;\n\n  return isoU(expect(isString, function (text) {\n    return JSON.parse(text, reviver);\n  }), expect(isDefined, function (value) {\n    return JSON.stringify(value, replacer, space);\n  }));\n});\n\n// Interop\n\nvar pointer = function pointer(s) {\n  if (s[0] === '#') s = decodeURIComponent(s);\n  var ts = s.split('/');\n  var n = ts.length;\n  for (var i = 1; i < n; ++i) {\n    var t = ts[i];\n    ts[i - 1] = /^(0|[1-9]\\d*)$/.test(t) ? ifElse(isArrayOrPrimitive, Number(t), t) : '-' === t ? ifElse(isArrayOrPrimitive, append, t) : t.replace('~1', '/').replace('~0', '~');\n  }\n  ts.length = n - 1;\n  return ts;\n};\n\nexport { seemsArrayLike, toFunction, assign$1 as assign, modify, remove, set, transform, traverse, compose, lazy, choices, choose, cond, ifElse, iftes, orElse, chain, choice, unless, when, optional, zero, assignOp, modifyOp, setOp, removeOp, log, seq, branchOr, branch, elems, entries, flatten, keys$1 as keys, matches, values, all, and$1 as and, any, collectAs, collect, concatAs, concat, countIf, count, countsAs, counts, foldl, foldr, forEach, isDefined$1 as isDefined, isEmpty, joinAs, join, maximumBy, maximum, meanAs, mean, minimumBy, minimum, none, or$1 as or, productAs, product, selectAs, select, sumAs, sum, get, lens, setter, foldTraversalLens, defaults, define, normalize, required, reread, rewrite, append, filter, find, findWith, first, index, last, prefix, slice, suffix, pickIn, prop, props, propsOf, removable, valueOr, pick, replace, getInverse, iso, array, inverse, complement, identity, indexed, is, keyed, reverse, singleton, uri, uriComponent, json, pointer };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/partial.lenses/dist/partial.lenses.es.js\n// module id = 20\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/common.js\n// module id = 21\n// module chunks = 0","export * from \"./Matrix-Create\";\nexport * from \"./Matrix-Serialize\";\nexport * from \"./Matrix-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/matrix/Matrix.ts","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isArray.js\n// module id = 23\n// module chunks = 0","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_reduced.js\n// module id = 24\n// module chunks = 0","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 25\n// module chunks = 0","export * from \"./Vector-Create\";\nexport * from \"./Vector-Serialize\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/vector/Vector.ts","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/always.js\n// module id = 27\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/max.js\n// module id = 28\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/path.js\n// module id = 29\n// module chunks = 0","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_contains.js\n// module id = 30\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function Dictionary(toStrFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStrFunction || util.defaultToString;\n    }\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (util.isUndefined(pair)) {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (util.isUndefined(previousElement)) {\n            this.nElements++;\n            ret = undefined;\n        }\n        else {\n            ret = previousElement.value;\n        }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (!util.isUndefined(previousElement)) {\n            delete this.table[k];\n            this.nElements--;\n            return previousElement.value;\n        }\n        return undefined;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    Dictionary.prototype.keys = function () {\n        var array = [];\n        for (var name_1 in this.table) {\n            if (util.has(this.table, name_1)) {\n                var pair = this.table[name_1];\n                array.push(pair.key);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    Dictionary.prototype.values = function () {\n        var array = [];\n        for (var name_2 in this.table) {\n            if (util.has(this.table, name_2)) {\n                var pair = this.table[name_2];\n                array.push(pair.value);\n            }\n        }\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this dictionary.\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    Dictionary.prototype.forEach = function (callback) {\n        for (var name_3 in this.table) {\n            if (util.has(this.table, name_3)) {\n                var pair = this.table[name_3];\n                var ret = callback(pair.key, pair.value);\n                if (ret === false) {\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Returns true if this dictionary contains a mapping for the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary contains a mapping for the\n     * specified key.\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        return !util.isUndefined(this.getValue(key));\n    };\n    /**\n    * Removes all mappings from this dictionary.\n    * @this {collections.Dictionary}\n    */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    Dictionary.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    Dictionary.prototype.toString = function () {\n        var toret = '{';\n        this.forEach(function (k, v) {\n            toret += \"\\n\\t\" + k + \" : \" + v;\n        });\n        return toret + '\\n}';\n    };\n    return Dictionary;\n}()); // End of dictionary\nexports.default = Dictionary;\n//# sourceMappingURL=Dictionary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/Dictionary.js\n// module id = 31\n// module chunks = 0","export * from \"./array/Array\";\nexport * from \"./camera/Camera\";\nexport * from \"./color/Color\";\nexport * from \"./headers/Headers\";\nexport * from \"./input/Input\";\nexport * from \"./loaders/Loaders\";\nexport * from \"./math/Math\";\nexport * from \"./matrix/Matrix\";\nexport * from \"./number/Number\";\nexport * from \"./functional/Functional\";\nexport * from \"./quat/Quat\";\nexport * from \"./ray/Ray\";\nexport * from \"./serialize/Serialize\";\nexport * from \"./state/State\";\nexport * from \"./string/String\";\nexport * from \"./renderer/Renderer\";\nexport * from \"./sodium/Sodium\";\nexport * from \"./transform/Transform\";\nexport * from \"./vector/Vector\";\nexport * from \"./webgl/WebGl\";\nexport * from \"./worker/Worker\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/Drift.ts","export * from \"./InputEvent_generated\";\nexport * from \"./ScreenEvent_generated\";\nexport * from \"./State_generated\";\nexport * from \"./Transform_generated\";\nexport * from \"./TickEvent_generated\";\nexport * from \"./Matrix4_generated\";\nexport * from \"./Vector3_generated\";\nexport * from \"./Vector4_generated\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/Flatbuffers.ts","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pluck.js\n// module id = 34\n// module chunks = 0","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isString.js\n// module id = 35\n// module chunks = 0","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_checkForMethod.js\n// module id = 36\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/toString.js\n// module id = 37\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/nth.js\n// module id = 38\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/invoker.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\n/**\n * Returns the position of the first occurrence of the specified item\n * within the specified array.4\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the first occurrence of the specified element\n * within the specified array, or -1 if not found.\n */\nfunction indexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.indexOf = indexOf;\n/**\n * Returns the position of the last occurrence of the specified element\n * within the specified array.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the last occurrence of the specified element\n * within the specified array or -1 if not found.\n */\nfunction lastIndexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = length - 1; i >= 0; i--) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.lastIndexOf = lastIndexOf;\n/**\n * Returns true if the specified array contains the specified element.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the specified array contains the specified element.\n */\nfunction contains(array, item, equalsFunction) {\n    return indexOf(array, item, equalsFunction) >= 0;\n}\nexports.contains = contains;\n/**\n * Removes the first ocurrence of the specified element from the specified array.\n * @param {*} array the array in which to search element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the array changed after this call.\n */\nfunction remove(array, item, equalsFunction) {\n    var index = indexOf(array, item, equalsFunction);\n    if (index < 0) {\n        return false;\n    }\n    array.splice(index, 1);\n    return true;\n}\nexports.remove = remove;\n/**\n * Returns the number of elements in the specified array equal\n * to the specified object.\n * @param {Array} array the array in which to determine the frequency of the element.\n * @param {Object} item the element whose frequency is to be determined.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the number of elements in the specified array\n * equal to the specified object.\n */\nfunction frequency(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    var freq = 0;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            freq++;\n        }\n    }\n    return freq;\n}\nexports.frequency = frequency;\n/**\n * Returns true if the two specified arrays are equal to one another.\n * Two arrays are considered equal if both arrays contain the same number\n * of elements, and all corresponding pairs of elements in the two\n * arrays are equal and are in the same order.\n * @param {Array} array1 one array to be tested for equality.\n * @param {Array} array2 the other array to be tested for equality.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between elemements in the arrays.\n * @return {boolean} true if the two arrays are equal\n */\nfunction equals(array1, array2, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    var length = array1.length;\n    for (var i = 0; i < length; i++) {\n        if (!equals(array1[i], array2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equals = equals;\n/**\n * Returns shallow a copy of the specified array.\n * @param {*} array the array to copy.\n * @return {Array} a copy of the specified array\n */\nfunction copy(array) {\n    return array.concat();\n}\nexports.copy = copy;\n/**\n * Swaps the elements at the specified positions in the specified array.\n * @param {Array} array The array in which to swap elements.\n * @param {number} i the index of one element to be swapped.\n * @param {number} j the index of the other element to be swapped.\n * @return {boolean} true if the array is defined and the indexes are valid.\n */\nfunction swap(array, i, j) {\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\n        return false;\n    }\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n    return true;\n}\nexports.swap = swap;\nfunction toString(array) {\n    return '[' + array.toString() + ']';\n}\nexports.toString = toString;\n/**\n * Executes the provided function once for each element present in this array\n * starting from index 0 to length - 1.\n * @param {Array} array The array in which to iterate.\n * @param {function(Object):*} callback function to execute, it is\n * invoked with one argument: the element value, to break the iteration you can\n * optionally return false.\n */\nfunction forEach(array, callback) {\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var ele = array_1[_i];\n        if (callback(ele) === false) {\n            return;\n        }\n    }\n}\nexports.forEach = forEach;\n//# sourceMappingURL=arrays.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/arrays.js\n// module id = 40\n// module chunks = 0","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Matrix4{\nexport class Values {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Values}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Values {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Values=} obj\n * @returns {Values}\n */\nstatic getRootAsValues(bb:flatbuffers.ByteBuffer, obj?:Values):Values {\n  return (obj || new Values).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\na():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nb():number {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nc():number {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nd():number {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\ne():number {\n  var offset = this.bb.__offset(this.bb_pos, 12);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nf():number {\n  var offset = this.bb.__offset(this.bb_pos, 14);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\ng():number {\n  var offset = this.bb.__offset(this.bb_pos, 16);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nh():number {\n  var offset = this.bb.__offset(this.bb_pos, 18);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\ni():number {\n  var offset = this.bb.__offset(this.bb_pos, 20);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nj():number {\n  var offset = this.bb.__offset(this.bb_pos, 22);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nk():number {\n  var offset = this.bb.__offset(this.bb_pos, 24);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nl():number {\n  var offset = this.bb.__offset(this.bb_pos, 26);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nm():number {\n  var offset = this.bb.__offset(this.bb_pos, 28);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nn():number {\n  var offset = this.bb.__offset(this.bb_pos, 30);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\no():number {\n  var offset = this.bb.__offset(this.bb_pos, 32);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\np():number {\n  var offset = this.bb.__offset(this.bb_pos, 34);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startValues(builder:flatbuffers.Builder) {\n  builder.startObject(16);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} a\n */\nstatic addA(builder:flatbuffers.Builder, a:number) {\n  builder.addFieldFloat64(0, a, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} b\n */\nstatic addB(builder:flatbuffers.Builder, b:number) {\n  builder.addFieldFloat64(1, b, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} c\n */\nstatic addC(builder:flatbuffers.Builder, c:number) {\n  builder.addFieldFloat64(2, c, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} d\n */\nstatic addD(builder:flatbuffers.Builder, d:number) {\n  builder.addFieldFloat64(3, d, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} e\n */\nstatic addE(builder:flatbuffers.Builder, e:number) {\n  builder.addFieldFloat64(4, e, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} f\n */\nstatic addF(builder:flatbuffers.Builder, f:number) {\n  builder.addFieldFloat64(5, f, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} g\n */\nstatic addG(builder:flatbuffers.Builder, g:number) {\n  builder.addFieldFloat64(6, g, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} h\n */\nstatic addH(builder:flatbuffers.Builder, h:number) {\n  builder.addFieldFloat64(7, h, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} i\n */\nstatic addI(builder:flatbuffers.Builder, i:number) {\n  builder.addFieldFloat64(8, i, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} j\n */\nstatic addJ(builder:flatbuffers.Builder, j:number) {\n  builder.addFieldFloat64(9, j, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} k\n */\nstatic addK(builder:flatbuffers.Builder, k:number) {\n  builder.addFieldFloat64(10, k, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} l\n */\nstatic addL(builder:flatbuffers.Builder, l:number) {\n  builder.addFieldFloat64(11, l, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} m\n */\nstatic addM(builder:flatbuffers.Builder, m:number) {\n  builder.addFieldFloat64(12, m, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} n\n */\nstatic addN(builder:flatbuffers.Builder, n:number) {\n  builder.addFieldFloat64(13, n, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} o\n */\nstatic addO(builder:flatbuffers.Builder, o:number) {\n  builder.addFieldFloat64(14, o, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} p\n */\nstatic addP(builder:flatbuffers.Builder, p:number) {\n  builder.addFieldFloat64(15, p, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endValues(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishValuesBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/Matrix4_generated.ts","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isPlaceholder.js\n// module id = 42\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/add.js\n// module id = 43\n// module chunks = 0","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_curryN.js\n// module id = 44\n// module chunks = 0","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_map.js\n// module id = 45\n// module chunks = 0","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isArrayLike.js\n// module id = 46\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/assoc.js\n// module id = 47\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/nAry.js\n// module id = 48\n// module chunks = 0","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isFunction.js\n// module id = 49\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lift.js\n// module id = 50\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reverse.js\n// module id = 51\n// module chunks = 0","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_containsWith.js\n// module id = 52\n// module chunks = 0","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reject.js\n// module id = 53\n// module chunks = 0","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reduceBy.js\n// module id = 54\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/flip.js\n// module id = 55\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lens.js\n// module id = 56\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeDeepWithKey.js\n// module id = 57\n// module chunks = 0","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Pair a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '7.1.1';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$toString :: Null ~> () -> String\n  function Null$prototype$toString() {\n    return 'null';\n  }\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$toString :: Undefined ~> () -> String\n  function Undefined$prototype$toString() {\n    return 'undefined';\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$toString :: Boolean ~> () -> String\n  function Boolean$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Boolean(' + toString(this.valueOf()) + ')' :\n      this.toString();\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$toString :: Number ~> () -> String\n  function Number$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Number(' + toString(this.valueOf()) + ')' :\n      1 / this === -Infinity ? '-0' : this.toString(10);\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this <= other;\n  }\n\n  //  Date$prototype$toString :: Date ~> () -> String\n  function Date$prototype$toString() {\n    var x = isNaN(this.valueOf()) ? NaN : this.toISOString();\n    return 'new Date(' + toString(x) + ')';\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$toString :: String ~> () -> String\n  function String$prototype$toString() {\n    return typeof this === 'object' ?\n      'new String(' + toString(this.valueOf()) + ')' :\n      JSON.stringify(this);\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var $todo = [x];\n    var $done = [];\n    while ($todo.length > 0) {\n      var xs = f(iterationNext, iterationDone, $todo.shift());\n      var $more = [];\n      for (var idx = 0; idx < xs.length; idx += 1) {\n        (xs[idx].done ? $done : $more).push(xs[idx].value);\n      }\n      Array.prototype.unshift.apply($todo, $more);\n    }\n    return $done;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$toString :: Array a ~> () -> String\n  function Array$prototype$toString() {\n    var reprs = this.map(toString);\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      if (!/^\\d+$/.test(k)) {\n        reprs.push(toString(k) + ': ' + toString(this[k]));\n      }\n    }\n    return '[' + reprs.join(', ') + ']';\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    this.forEach(function(x) { Array.prototype.push.apply(result, f(x)); });\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    return this.reduce(function(acc, x) { return f(acc, x); }, initial);\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$toString :: Arguments ~> String\n  function Arguments$prototype$toString() {\n    var args = Array.prototype.map.call(this, toString).join(', ');\n    return '(function () { return arguments; }(' + args + '))';\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$toString :: Error ~> () -> String\n  function Error$prototype$toString() {\n    return 'new ' + this.name + '(' + toString(this.message) + ')';\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$toString :: StrMap a ~> () -> String\n  function Object$prototype$toString() {\n    var reprs = [];\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      reprs.push(toString(k) + ': ' + toString(this[k]));\n    }\n    return '{' + reprs.join(', ') + '}';\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      prototype: {\n        toString:                   Null$prototype$toString,\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      prototype: {\n        toString:                   Undefined$prototype$toString,\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      prototype: {\n        toString:                   Boolean$prototype$toString,\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      prototype: {\n        toString:                   Number$prototype$toString,\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      prototype: {\n        toString:                   Date$prototype$toString,\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      prototype: {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      prototype: {\n        toString:                   String$prototype$toString,\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      prototype: {\n        toString:                   Array$prototype$toString,\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      prototype: {\n        toString:                   Arguments$prototype$toString,\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      prototype: {\n        toString:                   Error$prototype$toString,\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      prototype: {\n        toString:                   Object$prototype$toString,\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      prototype: {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# toString :: a -> String\n  //.\n  //. Returns a useful string representation of its argument.\n  //.\n  //. Dispatches to the argument's `toString` method if appropriate.\n  //.\n  //. Where practical, `equals(eval(toString(x)), x) = true`.\n  //.\n  //. `toString` implementations are provided for the following built-in types:\n  //. Null, Undefined, Boolean, Number, Date, String, Array, Arguments, Error,\n  //. and Object.\n  //.\n  //. ```javascript\n  //. > toString(-0)\n  //. '-0'\n  //.\n  //. > toString(['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > toString({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > toString(Cons(1, Cons(2, Cons(3, Nil))))\n  //. 'Cons(1, Cons(2, Cons(3, Nil)))'\n  //. ```\n  var toString = (function() {\n    //  $seen :: Array Any\n    var $seen = [];\n\n    function call(method, x) {\n      $seen.push(x);\n      try { return method.call(x); } finally { $seen.pop(); }\n    }\n\n    return function toString(x) {\n      if ($seen.indexOf(x) >= 0) return '<Circular>';\n\n      var xType = type(x);\n      if (xType === 'Object') {\n        var result;\n        try { result = call(x.toString, x); } catch (err) {}\n        if (result != null && result !== '[object Object]') return result;\n      }\n\n      return call(implPath([xType, 'prototype', 'toString']) || x.toString, x);\n    };\n  }());\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Pair Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Pair Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# filter :: (Applicative f, Foldable f, Monoid (f a)) => (a -> Boolean, f a) -> f a\n  //.\n  //. Filters its second argument in accordance with the given predicate.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`filterM`](#filterM).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //. ```\n  function filter(pred, m) {\n    //  Fast path for arrays.\n    if (Array.isArray(m)) return m.filter(function(x) { return pred(x); });\n    var M = m.constructor;\n    return reduce(function(m, x) { return pred(x) ? concat(m, of(M, x)) : m; },\n                  empty(M),\n                  m);\n  }\n\n  //# filterM :: (Alternative m, Monad m) => (a -> Boolean, m a) -> m a\n  //.\n  //. Filters its second argument in accordance with the given predicate.\n  //.\n  //. This function is derived from [`of`](#of), [`chain`](#chain), and\n  //. [`zero`](#zero).\n  //.\n  //. See also [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > filterM(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filterM(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filterM(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filterM(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filterM(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filterM(pred, m) {\n    var M = m.constructor;\n    var z = zero(M);\n    return chain(function(x) { return pred(x) ? of(M, x) : z; }, m);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(xs, x) {\n      var fx = f(x);\n      var lower = 0;\n      var upper = xs.length;\n      while (lower < upper) {\n        var idx = Math.floor((lower + upper) / 2);\n        if (lte(xs[idx].fx, fx)) lower = idx + 1; else upper = idx;\n      }\n      xs.splice(lower, 0, {x: x, fx: fx});\n      return xs;\n    }, [], foldable);\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (var idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# takeWhile :: (Applicative f, Foldable f, Monoid (f a)) => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first inner value which does not satisfy the predicate, and\n  //. all subsequent inner values.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, foldable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, foldable);\n  }\n\n  //# dropWhile :: (Applicative f, Foldable f, Monoid (f a)) => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first inner value which does not satisfy the predicate, and\n  //. all subsequent inner values.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, foldable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, foldable);\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    toString: toString,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    map: map,\n    bimap: bimap,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    filter: filter,\n    filterM: filterM,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      https://github.com/fantasyland/fantasy-land#alt\n//. [Alternative]:              https://github.com/fantasyland/fantasy-land#alternative\n//. [Applicative]:              https://github.com/fantasyland/fantasy-land#applicative\n//. [Apply]:                    https://github.com/fantasyland/fantasy-land#apply\n//. [Bifunctor]:                https://github.com/fantasyland/fantasy-land#bifunctor\n//. [Category]:                 https://github.com/fantasyland/fantasy-land#category\n//. [Chain]:                    https://github.com/fantasyland/fantasy-land#chain\n//. [ChainRec]:                 https://github.com/fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  https://github.com/fantasyland/fantasy-land#comonad\n//. [Contravariant]:            https://github.com/fantasyland/fantasy-land#contravariant\n//. [Extend]:                   https://github.com/fantasyland/fantasy-land#extend\n//. [FL]:                       https://github.com/fantasyland/fantasy-land\n//. [Foldable]:                 https://github.com/fantasyland/fantasy-land#foldable\n//. [Functor]:                  https://github.com/fantasyland/fantasy-land#functor\n//. [Group]:                    https://github.com/fantasyland/fantasy-land#group\n//. [Monad]:                    https://github.com/fantasyland/fantasy-land#monad\n//. [Monoid]:                   https://github.com/fantasyland/fantasy-land#monoid\n//. [Ord]:                      https://github.com/fantasyland/fantasy-land#ord\n//. [Plus]:                     https://github.com/fantasyland/fantasy-land#plus\n//. [Profunctor]:               https://github.com/fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                https://github.com/fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             https://github.com/fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   https://github.com/fantasyland/fantasy-land#setoid\n//. [Traversable]:              https://github.com/fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       https://github.com/fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        https://github.com/fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     https://github.com/fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     https://github.com/fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  https://github.com/fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   https://github.com/fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    https://github.com/fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: https://github.com/fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     https://github.com/fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    https://github.com/fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    https://github.com/fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   https://github.com/fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/id`]:        https://github.com/fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    https://github.com/fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       https://github.com/fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       https://github.com/fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        https://github.com/fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    https://github.com/fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    https://github.com/fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  https://github.com/fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      https://github.com/fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sanctuary-type-classes/index.js\n// module id = 58\n// module chunks = 0","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. sanctuary-type-identifiers comprises:\n//.\n//.   - an npm and browser -compatible package for deriving the\n//.     _type identifier_ of a JavaScript value; and\n//.   - a specification which authors may follow to specify type\n//.     identifiers for their types.\n//.\n//. ### Specification\n//.\n//. For a type to be compatible with the algorithm:\n//.\n//.   - every member of the type MUST have a `constructor` property\n//.     pointing to an object known as the _type representative_;\n//.\n//.   - the type representative MUST have a `@@type` property\n//.     (the _type identifier_); and\n//.\n//.   - the type identifier MUST be a string primitive and SHOULD have\n//.     format `'<namespace>/<name>[@<version>]'`, where:\n//.\n//.       - `<namespace>` MUST consist of one or more characters, and\n//.         SHOULD equal the name of the npm package which defines the\n//.         type (including [scope][3] where appropriate);\n//.\n//.       - `<name>` MUST consist of one or more characters, and SHOULD\n//.         be the unique name of the type; and\n//.\n//.       - `<version>` MUST consist of one or more digits, and SHOULD\n//.         represent the version of the type.\n//.\n//. If the type identifier does not conform to the format specified above,\n//. it is assumed that the entire string represents the _name_ of the type;\n//. _namespace_ will be `null` and _version_ will be `0`.\n//.\n//. If the _version_ is not given, it is assumed to be `0`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  pattern :: RegExp\n  var pattern = new RegExp(\n    '^'\n  + '([\\\\s\\\\S]+)'   //  <namespace>\n  + '/'             //  SOLIDUS (U+002F)\n  + '([\\\\s\\\\S]+?)'  //  <name>\n  + '(?:'           //  optional non-capturing group {\n  +   '@'           //    COMMERCIAL AT (U+0040)\n  +   '([0-9]+)'    //    <version>\n  + ')?'            //  }\n  + '$'\n  );\n\n  //. ### Usage\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //. ```\n  //.\n  //. ```javascript\n  //. > function Identity(x) {\n  //. .   if (!(this instanceof Identity)) return new Identity(x);\n  //. .   this.value = x;\n  //. . }\n  //. . Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. > type.parse(type(Identity(0)))\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  //.\n  //. ### API\n  //.\n  //# type :: Any -> String\n  //.\n  //. Takes any value and returns a string which identifies its type. If the\n  //. value conforms to the [specification][4], the custom type identifier is\n  //. returned.\n  //.\n  //. ```javascript\n  //. > type(null)\n  //. 'Null'\n  //.\n  //. > type(true)\n  //. 'Boolean'\n  //.\n  //. > type(Identity(0))\n  //. 'my-package/Identity@1'\n  //. ```\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }\n  //.\n  //. Takes any string and parses it according to the [specification][4],\n  //. returning an object with `namespace`, `name`, and `version` fields.\n  //.\n  //. ```javascript\n  //. > type.parse('my-package/List@2')\n  //. {namespace: 'my-package', name: 'List', version: 2}\n  //.\n  //. > type.parse('nonsense!')\n  //. {namespace: null, name: 'nonsense!', version: 0}\n  //.\n  //. > type.parse(Identity['@@type'])\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  type.parse = function parse(s) {\n    var groups = pattern.exec(s);\n    return {\n      namespace: groups == null || groups[1] == null ? null : groups[1],\n      name:      groups == null                      ? s    : groups[2],\n      version:   groups == null || groups[3] == null ? 0    : Number(groups[3])\n    };\n  };\n\n  return type;\n\n}));\n\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: https://docs.npmjs.com/misc/scope\n//. [4]: #specification\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sanctuary-type-identifiers/index.js\n// module id = 59\n// module chunks = 0","export * from \"./Transform-Serialize\";\nexport * from \"./Transform-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/transform/Transform.ts","import * as L from 'partial.lenses';\nimport * as R from 'ramda';\n\nimport { Maybe } from '../../external/sanctuary/Sanctuary';\nimport { StateElement } from './State-Elements';\n\nexport const PROPS = \"props\";\nexport const CHILDREN = \"children\";\nexport const TYPE = \"type\";\n\nexport const findLensFrom = (predicate:((el:any) => boolean)) => (startingLens) => (elTree:StateElement) => {\n    const _dig = (lens) => {\n        const el:StateElement = L.get(lens) (elTree);\n\n        if(predicate(el)) {\n            return lens;\n        }\n\n        if(!R.isNil(el.children)) {\n            if(Array.isArray(el.children)) {\n                for(let i = 0; i < el.children.length; i++) {\n                    const cLens = L.compose([lens, CHILDREN, i]);\n                    const result = _dig (cLens);\n                    if(!R.isNil(result)) {\n                        return result;\n                    }\n                }\n            } else {\n                const cLens = L.compose([lens, CHILDREN]);\n                const result = _dig (cLens);\n                if(!R.isNil(result)) {\n                    return result;\n                }\n            }\n            \n        }\n        return undefined;\n    }\n\n    return _dig (startingLens)\n}\n\nexport const findLens = (predicate:((el:any) => boolean)) => (elTree:StateElement) =>\n    findLensFrom (predicate) (L.identity) (elTree);\n\nexport const findLensByTypeFrom = (type:string) => startingLens => (elTree:StateElement) =>\n    findLensFrom (el => el.type === type) (startingLens) (elTree);\n\nexport const findLensByType = (type:string) => (elTree:StateElement):Maybe<any> =>\n    findLensByTypeFrom (type) (L.identity) (elTree);\n\n//Getting lens by specifycing a path = e.g. [\"foo\", \"bar\", 0, 1]\n//Requires the target because getting a child by type is a search\nexport const lensPath = (xs:Array<string | number>) => (elTree:StateElement) =>\n    xs.reduce((acc, val) => \n        (typeof val === \"string\")\n            ?   findLensByTypeFrom (val) (acc) (elTree)\n            :   L.compose(acc, CHILDREN, val)\n        , L.identity);\n\n//like lensPath but only for children - faster and doesn't require the state to search\nexport const childLensPath = (xs:Array<number>) =>\n    xs.reduce((acc, val) => \n        (typeof val === \"string\")\n            ?   L.compose(acc, CHILDREN, parseInt(val, 10))\n            :   L.compose(acc, CHILDREN, val)\n        , L.identity);\n\nexport const propsAtChildLensPath = (xs:Array<number>) =>\n    L.compose([childLensPath(xs), PROPS]);\n\nexport const propsAtLensPath = (xs:Array<number | string>) => (elTree:StateElement) =>\n    L.compose([lensPath(xs) (elTree), PROPS]);\n\nexport const propLens = (x:string) =>\n    L.compose([PROPS, x]);\nexport const childLens = (x:number) =>\n    L.compose([CHILDREN, x]);\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State-Accessors.ts","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isTransformer.js\n// module id = 62\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/prop.js\n// module id = 63\n// module chunks = 0","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/ap.js\n// module id = 64\n// module chunks = 0","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isInteger.js\n// module id = 65\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/curry.js\n// module id = 66\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/chain.js\n// module id = 67\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/type.js\n// module id = 68\n// module chunks = 0","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/compose.js\n// module id = 69\n// module chunks = 0","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/tail.js\n// module id = 70\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/concat.js\n// module id = 71\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/filter.js\n// module id = 72\n// module chunks = 0","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_filter.js\n// module id = 73\n// module chunks = 0","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isObject.js\n// module id = 74\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/update.js\n// module id = 75\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/take.js\n// module id = 76\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/identity.js\n// module id = 77\n// module chunks = 0","export default function _identity(x) {\n  return x;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_identity.js\n// module id = 78\n// module chunks = 0","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/uniq.js\n// module id = 79\n// module chunks = 0","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_assign.js\n// module id = 80\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeWithKey.js\n// module id = 81\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar arrays = require(\"./arrays\");\nvar LinkedList = /** @class */ (function () {\n    /**\n    * Creates an empty Linked List.\n    * @class A linked list is a data structure consisting of a group of nodes\n    * which together represent a sequence.\n    * @constructor\n    */\n    function LinkedList() {\n        /**\n        * First node in the list\n        * @type {Object}\n        * @private\n        */\n        this.firstNode = null;\n        /**\n        * Last node in the list\n        * @type {Object}\n        * @private\n        */\n        this.lastNode = null;\n        /**\n        * Number of elements in the list\n        * @type {number}\n        * @private\n        */\n        this.nElements = 0;\n    }\n    /**\n    * Adds an element to this list.\n    * @param {Object} item element to be added.\n    * @param {number=} index optional index to add the element. If no index is specified\n    * the element is added to the end of this list.\n    * @return {boolean} true if the element was added or false if the index is invalid\n    * or if the element is undefined.\n    */\n    LinkedList.prototype.add = function (item, index) {\n        if (util.isUndefined(index)) {\n            index = this.nElements;\n        }\n        if (index < 0 || index > this.nElements || util.isUndefined(item)) {\n            return false;\n        }\n        var newNode = this.createNode(item);\n        if (this.nElements === 0 || this.lastNode === null) {\n            // First node in the list.\n            this.firstNode = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === this.nElements) {\n            // Insert at the end.\n            this.lastNode.next = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === 0) {\n            // Change first node.\n            newNode.next = this.firstNode;\n            this.firstNode = newNode;\n        }\n        else {\n            var prev = this.nodeAtIndex(index - 1);\n            if (prev == null) {\n                return false;\n            }\n            newNode.next = prev.next;\n            prev.next = newNode;\n        }\n        this.nElements++;\n        return true;\n    };\n    /**\n    * Returns the first element in this list.\n    * @return {*} the first element of the list or undefined if the list is\n    * empty.\n    */\n    LinkedList.prototype.first = function () {\n        if (this.firstNode !== null) {\n            return this.firstNode.element;\n        }\n        return undefined;\n    };\n    /**\n    * Returns the last element in this list.\n    * @return {*} the last element in the list or undefined if the list is\n    * empty.\n    */\n    LinkedList.prototype.last = function () {\n        if (this.lastNode !== null) {\n            return this.lastNode.element;\n        }\n        return undefined;\n    };\n    /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index desired index.\n     * @return {*} the element at the given index or undefined if the index is\n     * out of bounds.\n     */\n    LinkedList.prototype.elementAtIndex = function (index) {\n        var node = this.nodeAtIndex(index);\n        if (node === null) {\n            return undefined;\n        }\n        return node.element;\n    };\n    /**\n     * Returns the index in this list of the first occurrence of the\n     * specified element, or -1 if the List does not contain this element.\n     * <p>If the elements inside this list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\n     * function used to check if two elements are equal.\n     * @return {number} the index in this list of the first occurrence\n     * of the specified element, or -1 if this list does not contain the\n     * element.\n     */\n    LinkedList.prototype.indexOf = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (util.isUndefined(item)) {\n            return -1;\n        }\n        var currentNode = this.firstNode;\n        var index = 0;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                return index;\n            }\n            index++;\n            currentNode = currentNode.next;\n        }\n        return -1;\n    };\n    /**\n       * Returns true if this list contains the specified element.\n       * <p>If the elements inside the list are\n       * not comparable with the === operator a custom equals function should be\n       * provided to perform searches, the function must receive two arguments and\n       * return true if they are equal, false otherwise. Example:</p>\n       *\n       * <pre>\n       * const petsAreEqualByName = function(pet1, pet2) {\n       *  return pet1.name === pet2.name;\n       * }\n       * </pre>\n       * @param {Object} item element to search for.\n       * @param {function(Object,Object):boolean=} equalsFunction Optional\n       * function used to check if two elements are equal.\n       * @return {boolean} true if this list contains the specified element, false\n       * otherwise.\n       */\n    LinkedList.prototype.contains = function (item, equalsFunction) {\n        return (this.indexOf(item, equalsFunction) >= 0);\n    };\n    /**\n     * Removes the first occurrence of the specified element in this list.\n     * <p>If the elements inside the list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to be removed from this list, if present.\n     * @return {boolean} true if the list contained the specified element.\n     */\n    LinkedList.prototype.remove = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (this.nElements < 1 || util.isUndefined(item)) {\n            return false;\n        }\n        var previous = null;\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                if (previous == null) {\n                    this.firstNode = currentNode.next;\n                    if (currentNode === this.lastNode) {\n                        this.lastNode = null;\n                    }\n                }\n                else if (currentNode === this.lastNode) {\n                    this.lastNode = previous;\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                else {\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                this.nElements--;\n                return true;\n            }\n            previous = currentNode;\n            currentNode = currentNode.next;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this list.\n     */\n    LinkedList.prototype.clear = function () {\n        this.firstNode = null;\n        this.lastNode = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this list is equal to the given list.\n     * Two lists are equal if they have the same elements in the same order.\n     * @param {LinkedList} other the other list.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function used to check if two elements are equal. If the elements in the lists\n     * are custom objects you should provide a function, otherwise\n     * the === operator is used to check equality between elements.\n     * @return {boolean} true if this list is equal to the given list.\n     */\n    LinkedList.prototype.equals = function (other, equalsFunction) {\n        var eqF = equalsFunction || util.defaultEquals;\n        if (!(other instanceof LinkedList)) {\n            return false;\n        }\n        if (this.size() !== other.size()) {\n            return false;\n        }\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\n    };\n    /**\n    * @private\n    */\n    LinkedList.prototype.equalsAux = function (n1, n2, eqF) {\n        while (n1 !== null && n2 !== null) {\n            if (!eqF(n1.element, n2.element)) {\n                return false;\n            }\n            n1 = n1.next;\n            n2 = n2.next;\n        }\n        return true;\n    };\n    /**\n     * Removes the element at the specified position in this list.\n     * @param {number} index given index.\n     * @return {*} removed element or undefined if the index is out of bounds.\n     */\n    LinkedList.prototype.removeElementAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements || this.firstNode === null || this.lastNode === null) {\n            return undefined;\n        }\n        var element;\n        if (this.nElements === 1) {\n            //First node in the list.\n            element = this.firstNode.element;\n            this.firstNode = null;\n            this.lastNode = null;\n        }\n        else {\n            var previous = this.nodeAtIndex(index - 1);\n            if (previous === null) {\n                element = this.firstNode.element;\n                this.firstNode = this.firstNode.next;\n            }\n            else if (previous.next === this.lastNode) {\n                element = this.lastNode.element;\n                this.lastNode = previous;\n            }\n            if (previous !== null && previous.next !== null) {\n                element = previous.next.element;\n                previous.next = previous.next.next;\n            }\n        }\n        this.nElements--;\n        return element;\n    };\n    /**\n     * Executes the provided function once for each element present in this list in order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    LinkedList.prototype.forEach = function (callback) {\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (callback(currentNode.element) === false) {\n                break;\n            }\n            currentNode = currentNode.next;\n        }\n    };\n    /**\n     * Reverses the order of the elements in this linked list (makes the last\n     * element first, and the first element last).\n     */\n    LinkedList.prototype.reverse = function () {\n        var previous = null;\n        var current = this.firstNode;\n        var temp = null;\n        while (current !== null) {\n            temp = current.next;\n            current.next = previous;\n            previous = current;\n            current = temp;\n        }\n        temp = this.firstNode;\n        this.firstNode = this.lastNode;\n        this.lastNode = temp;\n    };\n    /**\n     * Returns an array containing all of the elements in this list in proper\n     * sequence.\n     * @return {Array.<*>} an array containing all of the elements in this list,\n     * in proper sequence.\n     */\n    LinkedList.prototype.toArray = function () {\n        var array = [];\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            array.push(currentNode.element);\n            currentNode = currentNode.next;\n        }\n        return array;\n    };\n    /**\n     * Returns the number of elements in this list.\n     * @return {number} the number of elements in this list.\n     */\n    LinkedList.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this list contains no elements.\n     * @return {boolean} true if this list contains no elements.\n     */\n    LinkedList.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    LinkedList.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.nodeAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements) {\n            return null;\n        }\n        if (index === (this.nElements - 1)) {\n            return this.lastNode;\n        }\n        var node = this.firstNode;\n        for (var i = 0; i < index && node != null; i++) {\n            node = node.next;\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.createNode = function (item) {\n        return {\n            element: item,\n            next: null\n        };\n    };\n    return LinkedList;\n}()); // End of linked list\nexports.default = LinkedList;\n//# sourceMappingURL=LinkedList.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/LinkedList.js\n// module id = 82\n// module chunks = 0","import {\n    childLensPath,\n    createVec3,\n    getCameraOrthoFullscreen,\n    getScreenSize,\n    getStateTransformLocalParentPointToWorld,\n    getStateTransformPosition,\n    getStateTransformWorldPointToLocalParent,\n    KeyboardEventData,\n    KeyboardEventStatus,\n    KeyboardSourceId,\n    lPosX,\n    lPosY,\n    propsAtChildLensPath,\n    makePointerCalmValidator,\n    rgbToColorIndex,\n    screenToWorldPoint,\n    startKeyboard,\n    startScreen,\n    startTick,\n    startPointer,\n    StateElement,\n    TickEventData,\n    PointerEventData,\n    PointerEventStatus,\n    PointerSourceId,\n    updateStateElementWorldTransforms,\n    PROPS,\n    logState\n} from '../lib/Drift';\nimport { vec3 } from 'gl-matrix';\nimport * as L from 'partial.lenses';\n\nimport { DomEventData, startDom } from './dom/Dom';\nimport { createQuadRenderer } from './quad/Quad';\nimport { createRenderer } from './renderer/Renderer';\nimport { initialState } from './state/State';\nimport { S } from '../external/sanctuary/Sanctuary';\n\n/*\n    Config\n*/\n\nconst SPEED = 300;\n\n/*\n    Renderer\n*/\n\nconst renderer = createRenderer();\nrenderer.elementRenderers.set(\"quad\", createQuadRenderer(renderer));\n/*\n    Lenses\n*/\n\n//State\nconst lFirstDraw = L.compose([PROPS, \"firstDraw\"]);\n\n//Controller\nconst lController = propsAtChildLensPath([0]);\nconst lControllerX = L.compose(lController, \"x\");\nconst lControllerY = L.compose(lController, \"y\");\nconst lControllerOffsetX = L.compose(lController, \"offsetX\");\nconst lControllerOffsetY = L.compose(lController, \"offsetY\");\nconst lControllerIsDrag = L.compose(lController, \"isDrag\");\nconst lControllerType = L.compose(lController, \"type\");\nconst lControllerTarget = L.compose(lController, \"target\");\n\n//Camera\nconst lCamera = propsAtChildLensPath([1]);\nexport const lCameraMatrix = L.compose([lCamera, \"matrix\"]); //exported for renderer\n\n//Quads\nconst lQuads = childLensPath([1, 0]);\n\n/*\n    Keyboard Mappings\n */\n\nconst KeyboardMapping = {\n    ArrowUp: L.set(lControllerY)(1),\n    ArrowDown: L.set(lControllerY)(-1),\n    ArrowLeft: L.set(lControllerX)(-1),\n    ArrowRight: L.set(lControllerX)(1)\n}\n/*\n    Event handlers\n    All of them are essentially:\n\n    EventData -> StateElement -> StateElement\n*/\n\n//Update the camera based on resize events\nconst onScreenResize = (screenSize: { width: number, height: number }) =>\n    S.pipe([\n        L.set(lCamera)(getCameraOrthoFullscreen(screenSize)),\n    ]);\n\n//Update the controller based on keyboard events\nconst onKeyboard = (evtData: KeyboardEventData) =>\n    (evtData.status === KeyboardEventStatus.RELEASE)\n        ? S.pipe([\n            _state => (evtData.key === \"ArrowLeft\" || evtData.key === \"ArrowRight\")\n                ? L.set(lControllerX)(0)(_state)\n                : L.set(lControllerY)(0)(_state),\n            S.when(_state => (L.get(lControllerX)(_state) === 0 && L.get(lControllerY)(_state) === 0))(\n                S.pipe([\n                    L.remove(lControllerType),\n                    L.remove(lControllerTarget)\n                ]))\n        ])\n        : S.pipe([\n            L.set(lControllerType)(KeyboardSourceId),\n            L.set(lControllerTarget)(L.compose([lQuads, childLensPath([0])])), //target the first, bottom-most quad\n            L.get(evtData.key)(KeyboardMapping)\n        ])\n\n//Update the controller based on pointer events\n//Will use the framebuffer/picker to get the lens for the target object\nconst getPointerWorldPoint = (state: StateElement) =>\n    screenToWorldPoint(getScreenSize())(L.get(lCamera)(state));\n\nconst onPointer = (evtData: PointerEventData) =>\n    (evtData.status === PointerEventStatus.END)\n        ? S.pipe([\n            L.set(lControllerX)(0),\n            L.set(lControllerY)(0),\n            L.remove(lControllerType),\n            L.remove(lControllerTarget),\n            L.remove(lControllerIsDrag)\n        ])\n        : (evtData.status === PointerEventStatus.START)\n            ? state => {\n                const picker = renderer.getPicker();\n\n                if (picker !== undefined) {\n                    const pixel = picker.readPixel(evtData as any);\n                    const pixelIndex = rgbToColorIndex(pixel);\n\n                    if (renderer.colorHitMap.has(pixelIndex)) {\n                        const lTarget = childLensPath(renderer.colorHitMap.get(pixelIndex));\n                        const element = L.get(lTarget)(state);\n                        const worldPoint = getPointerWorldPoint(state)(evtData as any);\n\n                        const localPos = getStateTransformPosition(element);\n                        const positionWorld = getStateTransformLocalParentPointToWorld(localPos)(element);\n\n                        const diff = vec3.subtract(createVec3() as any, positionWorld as any, worldPoint as any);\n\n\n                        return S.pipe([\n                            L.set(lControllerOffsetX)(diff[0]),\n                            L.set(lControllerOffsetY)(diff[1]),\n                            L.set(lControllerType)(PointerSourceId),\n                            L.set(lControllerTarget)(lTarget),\n                            L.remove(lControllerIsDrag)\n                        ])\n                            (state)\n                    }\n\n                }\n                return state;\n            }\n            : S.when(state => L.get(lControllerType)(state) === PointerSourceId && evtData.status === PointerEventStatus.MOVE)(state => {\n\n                //note - there is an optimization here that can be done by doing this just on pointerTickMove events\n                const lTarget = L.get(lControllerTarget)(state);\n                const offsetX = L.get(lControllerOffsetX)(state);\n                const offsetY = L.get(lControllerOffsetY)(state);\n                const worldPoint = getPointerWorldPoint(state)(evtData as any);\n                const offsetWorldPoint = vec3.add(createVec3() as any, worldPoint as any, [offsetX, offsetY, 0]);\n\n                const localPointerPoint = getStateTransformWorldPointToLocalParent(offsetWorldPoint as any)(L.get(lTarget)(state));\n\n                return S.pipe([\n                    L.set(lControllerX)(localPointerPoint[0]),\n                    L.set(lControllerY)(localPointerPoint[1]),\n                    L.set(lControllerIsDrag)(true)\n                ])\n                    (state);\n            })\n\n/*\n    On tick - update the transforms (if the controller is activated)\n*/\n\nconst shouldUpdateTransforms = (state: StateElement): boolean =>\n    L.isDefined(lControllerTarget)(state)\n    && (L.isDefined(lControllerIsDrag)(state) || L.get(lControllerType)(state) === KeyboardSourceId);\n\nconst onTick = (evtData: TickEventData) =>\n    S.when(shouldUpdateTransforms)(_state => {\n        const lTarget = L.get(lControllerTarget)(_state);\n\n        const lPos = {\n            x: L.compose([lTarget, lPosX]),\n            y: L.compose([lTarget, lPosY]),\n        }\n\n        const currPos = {\n            x: L.get(lPos.x)(_state),\n            y: L.get(lPos.y)(_state)\n        }\n\n        const controller = {\n            x: L.get(lControllerX)(_state),\n            y: L.get(lControllerY)(_state)\n        }\n\n        return updateStateElementWorldTransforms(lTarget)((() => {\n            switch (L.get(lControllerType)(_state)) {\n                case KeyboardSourceId:\n                    return S.pipe([\n                        S.when(L.isDefined(lControllerX))\n                            (L.set(lPos.x)(currPos.x + controller.x * SPEED * evtData.dt)),\n                        S.when(L.isDefined(lControllerY))\n                            (L.set(lPos.y)(currPos.y + controller.y * SPEED * evtData.dt)),\n                    ])\n                        (_state);\n\n                case PointerSourceId:\n                    return S.pipe([\n                        L.set(lPos.x)(controller.x),\n                        L.set(lPos.y)(controller.y)\n                    ])\n                        (_state)\n\n                default: return _state;\n            }\n        })())\n    })\n\n/*\n    Main\n    The only thing it needs to do is setup the event listeners\n    All the event listeners need to do is set the state based on the pipeline, and render (or resize)\n*/\n\nconst Main = () => {\n    console.log(\"DriftJS State / Scenegraph Example v0.0.4\");\n\n    let state = initialState;\n    \n    \n\n\n    const onReady = (_state:StateElement) => {\n        console.log(\"ready!\");\n        logState(state);\n        console.log(state);\n        \n        startTick({})(evt => {\n            state = onTick(evt.data) (state);\n            renderer.render(state);\n        });\n\n        startKeyboard({})(evt => {\n            state = L.isDefined(evt.data.key)(KeyboardMapping)\n                ? onKeyboard(evt.data)(state)\n                : state;\n        });\n\n        const basePointerOptions = {\n            validate: makePointerCalmValidator(),\n            domElement: document.getElementById(\"canvasTouch\"),\n            hasPointer: (window as any).PointerEvent ? true : false\n        }\n\n        const handlePointer = evt => {\n            state = onPointer(evt.data)(state);\n        };\n\n        startPointer ({...basePointerOptions, status: PointerEventStatus.START }) (handlePointer)\n        startPointer ({...basePointerOptions, status: PointerEventStatus.MOVE }) (handlePointer)\n        startPointer ({...basePointerOptions, status: PointerEventStatus.END }) (handlePointer)\n        startDom(evt => {\n            const { lens, interactive } = (evt.data as DomEventData)\n            state = L.set(lens)(interactive)(state);\n        });\n\n        return L.set(lFirstDraw) (false) (_state);\n    }\n\n\n    startScreen\n        ({\n            sendInitial: true, //immediately update the state via the resize pipeline (set camera etc.)\n        })\n        (evt => {\n            state = S.pipe\n                ([\n                    onScreenResize(evt.data),\n                    S.when(L.get(lFirstDraw)) (onReady),\n                ])\n                (state)\n\n            renderer.resize(evt.data);\n        });    \n}\n\nMain();\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/app/App-Main.ts","export * from \"./Camera-Serializer\";\nexport * from \"./Camera-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/camera/Camera.ts","import { flatbuffers } from 'flatbuffers';\nimport { Camera as CameraData} from '../../flatbuffers/Camera_generated';\nimport { Camera } from './Camera-Utils';\nimport { ParseMatrix4, SerializeMatrix4 } from '../matrix/Matrix';\n\nexport const SerializeCamera =  (builder) => (props: Camera): number => {\n\n    //Prep non-scalar data\n    const projectionPtr = SerializeMatrix4(builder) (props.projection);\n    const eyePtr = SerializeMatrix4(builder) (props.eye);\n    const matrixPtr = SerializeMatrix4(builder)(props.matrix);\n\n    //Serialize everything\n    CameraData.Props.startProps(builder);\n    CameraData.Props.addProjection(builder, projectionPtr);\n    CameraData.Props.addEye(builder, eyePtr);\n    CameraData.Props.addMatrix(builder, matrixPtr);\n    return CameraData.Props.endProps(builder);\n\n}\n\nexport const SerializeCameraToBinary = (props: Camera): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeCamera(builder)(props));\n\n    return builder.asUint8Array();\n}\n\n\nexport const ParseCamera = (props:CameraData.Props): Camera => {\n    \n    return ({\n        projection: ParseMatrix4(props.projection()),\n        eye: ParseMatrix4(props.eye()),\n        matrix: ParseMatrix4(props.matrix()),\n    });\n}\n    \n\nexport const ParseCameraFromBinary = (bytes: Uint8Array): Camera =>\n    ParseCamera(\n        CameraData.Props\n            .getRootAsProps(new flatbuffers.ByteBuffer(bytes)));\n\nexport const CameraSerializer = {\n    serialize: SerializeCameraToBinary,\n    parse:  ParseCameraFromBinary\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/camera/Camera-Serializer.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\nimport * as NS1812855692714688431 from \"./Matrix4_generated\";\n/**\n * @constructor\n */\nexport namespace Camera{\nexport class Props {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Props}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Props {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Props=} obj\n * @returns {Props}\n */\nstatic getRootAsProps(bb:flatbuffers.ByteBuffer, obj?:Props):Props {\n  return (obj || new Props).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param {Matrix4.Values=} obj\n * @returns {Matrix4.Values|null}\n */\nprojection(obj?:NS1812855692714688431.Matrix4.Values):NS1812855692714688431.Matrix4.Values|null {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? (obj || new NS1812855692714688431.Matrix4.Values).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {Matrix4.Values=} obj\n * @returns {Matrix4.Values|null}\n */\neye(obj?:NS1812855692714688431.Matrix4.Values):NS1812855692714688431.Matrix4.Values|null {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? (obj || new NS1812855692714688431.Matrix4.Values).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {Matrix4.Values=} obj\n * @returns {Matrix4.Values|null}\n */\nmatrix(obj?:NS1812855692714688431.Matrix4.Values):NS1812855692714688431.Matrix4.Values|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? (obj || new NS1812855692714688431.Matrix4.Values).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startProps(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} projectionOffset\n */\nstatic addProjection(builder:flatbuffers.Builder, projectionOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, projectionOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} eyeOffset\n */\nstatic addEye(builder:flatbuffers.Builder, eyeOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, eyeOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} matrixOffset\n */\nstatic addMatrix(builder:flatbuffers.Builder, matrixOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, matrixOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endProps(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishPropsBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/Camera_generated.ts","import {NumberArray} from \"../array/Array\";\n\nconst identity:Readonly<Array<number>> = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\n\nexport const createMat4 = (vals?:NumberArray):NumberArray =>\n  Float64Array.from(vals === undefined ? identity : vals);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/matrix/Matrix-Create.ts","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat3.js\n// module id = 88\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec3.js\n// module id = 89\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec4.js\n// module id = 90\n// module chunks = 0","import {NumberArray} from \"../array/Array\";\n\nconst identity3:Readonly<Array<number>> = [0,0,0];\nconst identity4:Readonly<Array<number>> = [0,0,0,0];\n\nexport const createVec3 = (vals?:NumberArray):NumberArray =>\n  Float64Array.from(vals === undefined ? identity3 : vals);\n\nexport const createVec4 = (vals?:NumberArray):NumberArray =>\n  Float64Array.from(vals === undefined ? identity4 : vals);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/vector/Vector-Create.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Vector3{\nexport class Values {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Values}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Values {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Values=} obj\n * @returns {Values}\n */\nstatic getRootAsValues(bb:flatbuffers.ByteBuffer, obj?:Values):Values {\n  return (obj || new Values).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\na():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nb():number {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nc():number {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startValues(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} a\n */\nstatic addA(builder:flatbuffers.Builder, a:number) {\n  builder.addFieldFloat64(0, a, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} b\n */\nstatic addB(builder:flatbuffers.Builder, b:number) {\n  builder.addFieldFloat64(1, b, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} c\n */\nstatic addC(builder:flatbuffers.Builder, c:number) {\n  builder.addFieldFloat64(2, c, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endValues(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishValuesBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/Vector3_generated.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Vector4{\nexport class Values {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Values}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Values {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Values=} obj\n * @returns {Values}\n */\nstatic getRootAsValues(bb:flatbuffers.ByteBuffer, obj?:Values):Values {\n  return (obj || new Values).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\na():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nb():number {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nc():number {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nd():number {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startValues(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} a\n */\nstatic addA(builder:flatbuffers.Builder, a:number) {\n  builder.addFieldFloat64(0, a, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} b\n */\nstatic addB(builder:flatbuffers.Builder, b:number) {\n  builder.addFieldFloat64(1, b, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} c\n */\nstatic addC(builder:flatbuffers.Builder, c:number) {\n  builder.addFieldFloat64(2, c, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} d\n */\nstatic addD(builder:flatbuffers.Builder, d:number) {\n  builder.addFieldFloat64(3, d, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endValues(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishValuesBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/Vector4_generated.ts","export * from \"./Color-Data\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/color/Color.ts","export const padLeft = (pad:string) => (length:number) => (str:string) => {\n    while(str.length < length) {\n        str = pad + str;\n    }\n    return str;\n}\n\nexport const padLeftZero = padLeft(\"0\");\nexport const padLeftDigits2 = padLeftZero (2);\n\nconst ltrChars    = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF';\nconst rtlChars    = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\nconst rtlDirCheck = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\nexport const stringIsRtl = s => rtlDirCheck.test(s);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/string/String-Utils.ts","export const sameOrigin = (url:string):boolean =>\n    (new URL(url).origin === window.location.origin);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/headers/Headers-Cors.ts","export * from \"./Input-Event\";\nexport * from \"./Input-Serialize\";\n\nexport * from \"./keyboard/Keyboard\";\nexport * from \"./screen/Screen\";\nexport * from \"./tick/Tick\";\nexport * from \"./pointer/Pointer\";\nexport * from \"./tick-pointer/TickPointer\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/Input.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\nimport * as NS1812855692714688431 from \"./Matrix4_generated\";\n/**\n * @constructor\n */\nexport namespace Transform{\nexport class Props {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Props}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Props {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Props=} obj\n * @returns {Props}\n */\nstatic getRootAsProps(bb:flatbuffers.ByteBuffer, obj?:Props):Props {\n  return (obj || new Props).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param {Matrix4.Values=} obj\n * @returns {Matrix4.Values|null}\n */\nlocalSpace(obj?:NS1812855692714688431.Matrix4.Values):NS1812855692714688431.Matrix4.Values|null {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? (obj || new NS1812855692714688431.Matrix4.Values).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {Matrix4.Values=} obj\n * @returns {Matrix4.Values|null}\n */\nworldSpace(obj?:NS1812855692714688431.Matrix4.Values):NS1812855692714688431.Matrix4.Values|null {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? (obj || new NS1812855692714688431.Matrix4.Values).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {Matrix4.Values=} obj\n * @returns {Matrix4.Values|null}\n */\nparentWorldSpace(obj?:NS1812855692714688431.Matrix4.Values):NS1812855692714688431.Matrix4.Values|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? (obj || new NS1812855692714688431.Matrix4.Values).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @returns {number}\n */\nposX():number {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nposY():number {\n  var offset = this.bb.__offset(this.bb_pos, 12);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nposZ():number {\n  var offset = this.bb.__offset(this.bb_pos, 14);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\noriginX():number {\n  var offset = this.bb.__offset(this.bb_pos, 16);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\noriginY():number {\n  var offset = this.bb.__offset(this.bb_pos, 18);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\noriginZ():number {\n  var offset = this.bb.__offset(this.bb_pos, 20);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nscaleX():number {\n  var offset = this.bb.__offset(this.bb_pos, 22);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nscaleY():number {\n  var offset = this.bb.__offset(this.bb_pos, 24);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nscaleZ():number {\n  var offset = this.bb.__offset(this.bb_pos, 26);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nrotX():number {\n  var offset = this.bb.__offset(this.bb_pos, 28);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nrotY():number {\n  var offset = this.bb.__offset(this.bb_pos, 30);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nrotZ():number {\n  var offset = this.bb.__offset(this.bb_pos, 32);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nrotW():number {\n  var offset = this.bb.__offset(this.bb_pos, 34);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startProps(builder:flatbuffers.Builder) {\n  builder.startObject(16);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} localSpaceOffset\n */\nstatic addLocalSpace(builder:flatbuffers.Builder, localSpaceOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, localSpaceOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} worldSpaceOffset\n */\nstatic addWorldSpace(builder:flatbuffers.Builder, worldSpaceOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, worldSpaceOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} parentWorldSpaceOffset\n */\nstatic addParentWorldSpace(builder:flatbuffers.Builder, parentWorldSpaceOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, parentWorldSpaceOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} posX\n */\nstatic addPosX(builder:flatbuffers.Builder, posX:number) {\n  builder.addFieldFloat64(3, posX, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} posY\n */\nstatic addPosY(builder:flatbuffers.Builder, posY:number) {\n  builder.addFieldFloat64(4, posY, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} posZ\n */\nstatic addPosZ(builder:flatbuffers.Builder, posZ:number) {\n  builder.addFieldFloat64(5, posZ, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} originX\n */\nstatic addOriginX(builder:flatbuffers.Builder, originX:number) {\n  builder.addFieldFloat64(6, originX, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} originY\n */\nstatic addOriginY(builder:flatbuffers.Builder, originY:number) {\n  builder.addFieldFloat64(7, originY, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} originZ\n */\nstatic addOriginZ(builder:flatbuffers.Builder, originZ:number) {\n  builder.addFieldFloat64(8, originZ, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} scaleX\n */\nstatic addScaleX(builder:flatbuffers.Builder, scaleX:number) {\n  builder.addFieldFloat64(9, scaleX, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} scaleY\n */\nstatic addScaleY(builder:flatbuffers.Builder, scaleY:number) {\n  builder.addFieldFloat64(10, scaleY, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} scaleZ\n */\nstatic addScaleZ(builder:flatbuffers.Builder, scaleZ:number) {\n  builder.addFieldFloat64(11, scaleZ, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} rotX\n */\nstatic addRotX(builder:flatbuffers.Builder, rotX:number) {\n  builder.addFieldFloat64(12, rotX, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} rotY\n */\nstatic addRotY(builder:flatbuffers.Builder, rotY:number) {\n  builder.addFieldFloat64(13, rotY, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} rotZ\n */\nstatic addRotZ(builder:flatbuffers.Builder, rotZ:number) {\n  builder.addFieldFloat64(14, rotZ, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} rotW\n */\nstatic addRotW(builder:flatbuffers.Builder, rotW:number) {\n  builder.addFieldFloat64(15, rotW, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endProps(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishPropsBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/Transform_generated.ts","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/adjust.js\n// module id = 99\n// module chunks = 0","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xwrap.js\n// module id = 100\n// module chunks = 0","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/bind.js\n// module id = 101\n// module chunks = 0","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isArguments.js\n// module id = 102\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/and.js\n// module id = 103\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/any.js\n// module id = 104\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xany.js\n// module id = 105\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/apply.js\n// module id = 106\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/values.js\n// module id = 107\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/assocPath.js\n// module id = 108\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/isNil.js\n// module id = 109\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/liftN.js\n// module id = 110\n// module chunks = 0","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_makeFlat.js\n// module id = 111\n// module chunks = 0","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_clone.js\n// module id = 112\n// module chunks = 0","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_cloneRegExp.js\n// module id = 113\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/not.js\n// module id = 114\n// module chunks = 0","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pipe.js\n// module id = 115\n// module chunks = 0","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/composeK.js\n// module id = 116\n// module chunks = 0","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pipeP.js\n// module id = 117\n// module chunks = 0","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_indexOf.js\n// module id = 118\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/identical.js\n// module id = 119\n// module chunks = 0","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_complement.js\n// module id = 120\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/constructN.js\n// module id = 121\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/converge.js\n// module id = 122\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/defaultTo.js\n// module id = 123\n// module chunks = 0","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/difference.js\n// module id = 124\n// module chunks = 0","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/differenceWith.js\n// module id = 125\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dissoc.js\n// module id = 126\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/remove.js\n// module id = 127\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/drop.js\n// module id = 128\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xdropRepeatsWith.js\n// module id = 129\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dropRepeatsWith.js\n// module id = 130\n// module chunks = 0","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/last.js\n// module id = 131\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/or.js\n// module id = 132\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/empty.js\n// module id = 133\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/takeLast.js\n// module id = 134\n// module chunks = 0","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/uniqBy.js\n// module id = 135\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/objOf.js\n// module id = 136\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/is.js\n// module id = 137\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/juxt.js\n// module id = 138\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/length.js\n// module id = 139\n// module chunks = 0","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isNumber.js\n// module id = 140\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mean.js\n// module id = 141\n// module chunks = 0","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/sum.js\n// module id = 142\n// module chunks = 0","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/memoizeWith.js\n// module id = 143\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/multiply.js\n// module id = 144\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/over.js\n// module id = 145\n// module chunks = 0","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_createPartialApplicator.js\n// module id = 146\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pickAll.js\n// module id = 147\n// module chunks = 0","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/prepend.js\n// module id = 148\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/useWith.js\n// module id = 149\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reduceRight.js\n// module id = 150\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/times.js\n// module id = 151\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/sequence.js\n// module id = 152\n// module chunks = 0","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/uniqWith.js\n// module id = 153\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/where.js\n// module id = 154\n// module chunks = 0","/*              ___                 ______\n               /  /\\               /  ___/\\\n        ______/  / / _______    __/  /___\\/\n       /  ___   / / /  ___  \\  /_   __/\\\n      /  /\\_/  / / /  /__/  /\\ \\/  /\\_\\/\n     /  / //  / / /  ______/ / /  / /\n    /  /_//  / / /  /______\\/ /  / /\n    \\_______/ /  \\_______/\\  /__/ /\n     \\______\\/    \\______\\/  \\__*/\n\n//. # sanctuary-def\n//.\n//. sanctuary-def is a run-time type system for JavaScript. It facilitates\n//. the definition of curried JavaScript functions which are explicit about\n//. the number of arguments to which they may be applied and the types of\n//. those arguments.\n//.\n//. It is conventional to import the package as `$`:\n//.\n//. ```javascript\n//. const $ = require('sanctuary-def');\n//. ```\n//.\n//. The next step is to define an environment. An environment is an array\n//. of [types][]. [`env`][] is an environment containing all the built-in\n//. JavaScript types. It may be used as the basis for environments which\n//. include custom types in addition to the built-in types:\n//.\n//. ```javascript\n//. //    Integer :: Type\n//. const Integer = ...;\n//.\n//. //    NonZeroInteger :: Type\n//. const NonZeroInteger = ...;\n//.\n//. //    env :: Array Type\n//. const env = $.env.concat([Integer, NonZeroInteger]);\n//. ```\n//.\n//. Type constructors such as `List :: Type -> Type` cannot be included in\n//. an environment as they're not of the correct type. One could, though,\n//. use a type constructor to define a fixed number of concrete types:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat([\n//.   List($.Number),               // :: Type\n//.   List($.String),               // :: Type\n//.   List(List($.Number)),         // :: Type\n//.   List(List($.String)),         // :: Type\n//.   List(List(List($.Number))),   // :: Type\n//.   List(List(List($.String))),   // :: Type\n//. ]);\n//. ```\n//.\n//. Not only would this be tedious, but one could never enumerate all possible\n//. types as there are infinitely many. Instead, one should use [`Unknown`][]:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat([List($.Unknown)]);\n//. ```\n//.\n//. The next step is to define a `def` function for the environment:\n//.\n//. ```javascript\n//. const def = $.create({checkTypes: true, env: env});\n//. ```\n//.\n//. The `checkTypes` option determines whether type checking is enabled.\n//. This allows one to only pay the performance cost of run-time type checking\n//. during development. For example:\n//.\n//. ```javascript\n//. const def = $.create({\n//.   checkTypes: process.env.NODE_ENV === 'development',\n//.   env: env,\n//. });\n//. ```\n//.\n//. `def` is a function for defining functions. For example:\n//.\n//. ```javascript\n//. //    add :: Number -> Number -> Number\n//. const add =\n//. def('add', {}, [$.Number, $.Number, $.Number], (x, y) => x + y);\n//. ```\n//.\n//. `[$.Number, $.Number, $.Number]` specifies that `add` takes two arguments\n//. of type `Number` and returns a value of type `Number`.\n//.\n//. Applying `add` to two arguments gives the expected result:\n//.\n//. ```javascript\n//. add(2, 2);\n//. // => 4\n//. ```\n//.\n//. Applying `add` to greater than two arguments results in an exception being\n//. thrown:\n//.\n//. ```javascript\n//. add(2, 2, 2);\n//. // ! TypeError: ‘add’ requires two arguments; received three arguments\n//. ```\n//.\n//. Applying `add` to fewer than two arguments results in a function\n//. awaiting the remaining arguments. This is known as partial application.\n//. Partial application is convenient as it allows more specific functions\n//. to be defined in terms of more general ones:\n//.\n//. ```javascript\n//. //    inc :: Number -> Number\n//. const inc = add(1);\n//.\n//. inc(7);\n//. // => 8\n//. ```\n//.\n//. JavaScript's implicit type coercion often obfuscates the source of type\n//. errors. Consider the following function:\n//.\n//. ```javascript\n//. //    _add :: (Number, Number) -> Number\n//. const _add = (x, y) => x + y;\n//. ```\n//.\n//. The type signature indicates that `_add` takes two arguments of type\n//. `Number`, but this is not enforced. This allows type errors to be silently\n//. ignored:\n//.\n//. ```javascript\n//. _add('2', '2');\n//. // => '22'\n//. ```\n//.\n//. `add`, on the other hand, throws if applied to arguments of the wrong\n//. types:\n//.\n//. ```javascript\n//. add('2', '2');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"2\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n//.\n//. Type checking is performed as arguments are provided (rather than once all\n//. arguments have been provided), so type errors are reported early:\n//.\n//. ```javascript\n//. add('X');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"X\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-classes'),\n                       require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-classes', 'sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryDef = f(self.sanctuaryTypeClasses,\n                          self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(Z, type) {\n\n  'use strict';\n\n  //# __ :: Placeholder\n  //.\n  //. The special placeholder value.\n  //.\n  //. One may wish to partially apply a function whose parameters are in the\n  //. \"wrong\" order. Functions defined via sanctuary-def accommodate this by\n  //. accepting placeholders for arguments yet to be provided. For example:\n  //.\n  //. ```javascript\n  //. //    concatS :: String -> String -> String\n  //. const concatS =\n  //. def('concatS', {}, [$.String, $.String, $.String], (x, y) => x + y);\n  //.\n  //. //    exclaim :: String -> String\n  //. const exclaim = concatS($.__, '!');\n  //.\n  //. exclaim('ahoy');\n  //. // => 'ahoy!'\n  //. ```\n  var __ = {'@@functional/placeholder': true};\n\n  var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n  var MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n  var slice             = Array.prototype.slice;\n  var hasOwnProperty    = Object.prototype.hasOwnProperty;\n\n  function Either(tag, value) {\n    this.isLeft = tag === 'Left';\n    this.isRight = tag === 'Right';\n    this.value = value;\n  }\n\n  Either['@@type'] = 'sanctuary-def/Either';\n\n  Either.prototype['fantasy-land/map'] = function(f) {\n    return this.isLeft ? this : Right(f(this.value));\n  };\n\n  Either.prototype['fantasy-land/chain'] = function(f) {\n    return this.isLeft ? this : f(this.value);\n  };\n\n  //  Left :: a -> Either a b\n  function Left(x) { return new Either('Left', x); }\n\n  //  Right :: b -> Either a b\n  function Right(x) { return new Either('Right', x); }\n\n  //  K :: a -> b -> a\n  function K(x) { return function(y) { return x; }; }\n\n  //  always2 :: a -> (b, c) -> a\n  function always2(x) { return function(y, z) { return x; }; }\n\n  //  id :: a -> a\n  function id(x) { return x; }\n\n  //  init :: Array a -> Array a\n  function init(xs) { return xs.slice(0, -1); }\n\n  //  isEmpty :: Array a -> Boolean\n  function isEmpty(xs) { return xs.length === 0; }\n\n  //  isPrefix :: Array a -> Array a -> Boolean\n  function isPrefix(candidate) {\n    return function(xs) {\n      if (candidate.length > xs.length) return false;\n      for (var idx = 0; idx < candidate.length; idx += 1) {\n        if (candidate[idx] !== xs[idx]) return false;\n      }\n      return true;\n    };\n  }\n\n  //  last :: Array a -> a\n  function last(xs) { return xs[xs.length - 1]; }\n\n  //  memberOf :: Array a -> a -> Boolean\n  function memberOf(xs) {\n    return function(y) {\n      return xs.some(function(x) { return Z.equals(x, y); });\n    };\n  }\n\n  //  or :: (Array a, Array a) -> Array a\n  function or(xs, ys) { return isEmpty(xs) ? ys : xs; }\n\n  //  range :: (Number, Number) -> Array Number\n  function range(start, stop) {\n    var result = [];\n    for (var n = start; n < stop; n += 1) result.push(n);\n    return result;\n  }\n\n  //  singleton :: (String, a) -> StrMap a\n  function singleton(k, v) {\n    var result = {};\n    result[k] = v;\n    return result;\n  }\n\n  //  strRepeat :: (String, Integer) -> String\n  function strRepeat(s, times) {\n    return Array(times + 1).join(s);\n  }\n\n  //  r :: Char -> String -> String\n  function r(c) {\n    return function(s) {\n      return strRepeat(c, s.length);\n    };\n  }\n\n  //  _ :: String -> String\n  var _ = r(' ');\n\n  //  stripOutermostParens :: String -> String\n  function stripOutermostParens(s) {\n    return s.slice('('.length, -')'.length);\n  }\n\n  //  toMarkdownList :: (String, String, a -> String, Array a) -> String\n  function toMarkdownList(empty, s, f, xs) {\n    return isEmpty(xs) ?\n      empty :\n      Z.reduce(function(s, x) { return s + '  - ' + f(x) + '\\n'; }, s, xs);\n  }\n\n  //  trimTrailingSpaces :: String -> String\n  function trimTrailingSpaces(s) {\n    return s.replace(/[ ]+$/gm, '');\n  }\n\n  //  unless :: (Boolean, (a -> a), a) -> a\n  function unless(bool, f, x) {\n    return bool ? x : f(x);\n  }\n\n  //  when :: (Boolean, (a -> a), a) -> a\n  function when(bool, f, x) {\n    return bool ? f(x) : x;\n  }\n\n  //  wrap :: String -> String -> String -> String\n  function wrap(prefix) {\n    return function(suffix) {\n      return function(s) {\n        return prefix + s + suffix;\n      };\n    };\n  }\n\n  //  parenthesize :: String -> String\n  var parenthesize = wrap('(')(')');\n\n  //  q :: String -> String\n  var q = wrap('\\u2018')('\\u2019');\n\n  //  stripNamespace :: String -> String\n  function stripNamespace(s) { return s.slice(s.indexOf('/') + 1); }\n\n  //  _Type :: ... -> Type\n  function _Type(\n    type,       // :: String\n    name,       // :: String\n    url,        // :: String\n    format,     // :: (String -> String, String -> String -> String) -> String\n    test,       // :: Any -> Boolean\n    keys,       // :: Array String\n    types       // :: StrMap { extractor :: a -> Array b, type :: Type }\n  ) {\n    this._test = test;\n    this.format = format;\n    this.keys = keys;\n    this.name = name;\n    this.type = type;\n    this.types = types;\n    this.url = url;\n  }\n\n  _Type['@@type'] = 'sanctuary-def/Type';\n\n  _Type.prototype.validate = function(x) {\n    if (!this._test(x)) return Left({value: x, propPath: []});\n    for (var idx = 0; idx < this.keys.length; idx += 1) {\n      var k = this.keys[idx];\n      var t = this.types[k];\n      for (var idx2 = 0, ys = t.extractor(x); idx2 < ys.length; idx2 += 1) {\n        var result = t.type.validate(ys[idx2]);\n        if (result.isLeft) {\n          var value = result.value.value;\n          var propPath = Z.concat([k], result.value.propPath);\n          return Left({value: value, propPath: propPath});\n        }\n      }\n    }\n    return Right(x);\n  };\n\n  _Type.prototype.toString = function() {\n    return this.format(id, K(id));\n  };\n\n  var BINARY        = 'BINARY';\n  var FUNCTION      = 'FUNCTION';\n  var INCONSISTENT  = 'INCONSISTENT';\n  var NULLARY       = 'NULLARY';\n  var RECORD        = 'RECORD';\n  var UNARY         = 'UNARY';\n  var UNKNOWN       = 'UNKNOWN';\n  var VARIABLE      = 'VARIABLE';\n\n  //  Inconsistent :: Type\n  var Inconsistent =\n  new _Type(INCONSISTENT, '', '', always2('???'), K(false), [], {});\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(name) {\n    return function(x) {\n      return type(x) === name;\n    };\n  }\n\n  //  typeofEq :: String -> a -> Boolean\n  function typeofEq(typeof_) {\n    return function(x) {\n      // eslint-disable-next-line valid-typeof\n      return typeof x === typeof_;\n    };\n  }\n\n  //  functionUrl :: String -> String\n  function functionUrl(name) {\n    var version = '0.14.0';  // updated programmatically\n    return 'https://github.com/sanctuary-js/sanctuary-def/tree/v' + version +\n           '#' + stripNamespace(name);\n  }\n\n  //  NullaryTypeWithUrl :: (String, Any -> Boolean) -> Type\n  function NullaryTypeWithUrl(name, test) {\n    return NullaryType(name, functionUrl(name), test);\n  }\n\n  //  EnumTypeWithUrl :: (String, Array Any) -> Type\n  function EnumTypeWithUrl(name, members) {\n    return EnumType(name, functionUrl(name), members);\n  }\n\n  //  UnaryTypeWithUrl ::\n  //    (String, Any -> Boolean, t a -> Array a) -> (Type -> Type)\n  function UnaryTypeWithUrl(name, test, _1) {\n    return UnaryType(name, functionUrl(name), test, _1);\n  }\n\n  //  BinaryTypeWithUrl ::\n  //    (String, Any -> Boolean, t a b -> Array a, t a b -> Array b) ->\n  //      ((Type, Type) -> Type)\n  function BinaryTypeWithUrl(name, test, _1, _2) {\n    return BinaryType(name, functionUrl(name), test, _1, _2);\n  }\n\n  //. ### Types\n  //.\n  //. Conceptually, a type is a set of values. One can think of a value of\n  //. type `Type` as a function of type `Any -> Boolean` which tests values\n  //. for membership in the set (though this is an oversimplification).\n\n  //# Any :: Type\n  //.\n  //. Type comprising every JavaScript value.\n  var Any = NullaryTypeWithUrl('sanctuary-def/Any', K(true));\n\n  //# AnyFunction :: Type\n  //.\n  //. Type comprising every Function value.\n  var AnyFunction = NullaryTypeWithUrl('Function', typeofEq('function'));\n\n  //# Arguments :: Type\n  //.\n  //. Type comprising every [`arguments`][arguments] object.\n  var Arguments = NullaryTypeWithUrl('Arguments', typeEq('Arguments'));\n\n  //# Array :: Type -> Type\n  //.\n  //. Constructor for homogeneous Array types.\n  var Array_ = UnaryTypeWithUrl('Array', typeEq('Array'), id);\n\n  //# Boolean :: Type\n  //.\n  //. Type comprising `true` and `false`.\n  var Boolean_ = NullaryTypeWithUrl('Boolean', typeofEq('boolean'));\n\n  //# Date :: Type\n  //.\n  //. Type comprising every Date value.\n  var Date_ = NullaryTypeWithUrl('Date', typeEq('Date'));\n\n  //# Error :: Type\n  //.\n  //. Type comprising every Error value, including values of more specific\n  //. constructors such as [`SyntaxError`][] and [`TypeError`][].\n  var Error_ = NullaryTypeWithUrl('Error', typeEq('Error'));\n\n  //# FiniteNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `Infinity` and\n  //. `-Infinity`.\n  var FiniteNumber = NullaryTypeWithUrl(\n    'sanctuary-def/FiniteNumber',\n    function(x) { return ValidNumber._test(x) && isFinite(x); }\n  );\n\n  //# Function :: Array Type -> Type\n  //.\n  //. Constructor for Function types.\n  //.\n  //. Examples:\n  //.\n  //.   - `$.Function([$.Date, $.String])` represents the `Date -> String`\n  //.     type; and\n  //.   - `$.Function([a, b, a])` represents the `(a, b) -> a` type.\n  function Function_(types) {\n    function format(outer, inner) {\n      var xs = types.map(function(t, idx) {\n        return unless(t.type === RECORD || isEmpty(t.keys),\n                      stripOutermostParens,\n                      inner('$' + String(idx + 1))(String(t)));\n      });\n      var parenthesize = wrap(outer('('))(outer(')'));\n      return parenthesize(unless(types.length === 2,\n                                 parenthesize,\n                                 init(xs).join(outer(', '))) +\n                          outer(' -> ') +\n                          last(xs));\n    }\n\n    var test = AnyFunction._test;\n\n    var $keys = [];\n    var $types = {};\n    types.forEach(function(t, idx) {\n      var k = '$' + String(idx + 1);\n      $keys.push(k);\n      $types[k] = {extractor: K([]), type: t};\n    });\n\n    return new _Type(FUNCTION, '', '', format, test, $keys, $types);\n  }\n\n  //# GlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `true`.\n  //.\n  //. See also [`NonGlobalRegExp`][].\n  var GlobalRegExp = NullaryTypeWithUrl(\n    'sanctuary-def/GlobalRegExp',\n    function(x) { return RegExp_._test(x) && x.global; }\n  );\n\n  //# Integer :: Type\n  //.\n  //. Type comprising every integer in the range\n  //. [[`Number.MIN_SAFE_INTEGER`][min] .. [`Number.MAX_SAFE_INTEGER`][max]].\n  var Integer = NullaryTypeWithUrl(\n    'sanctuary-def/Integer',\n    function(x) {\n      return ValidNumber._test(x) &&\n             Math.floor(x) === x &&\n             x >= MIN_SAFE_INTEGER &&\n             x <= MAX_SAFE_INTEGER;\n    }\n  );\n\n  //# NegativeFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value less than zero.\n  var NegativeFiniteNumber = NullaryTypeWithUrl(\n    'sanctuary-def/NegativeFiniteNumber',\n    function(x) { return FiniteNumber._test(x) && x < 0; }\n  );\n\n  //# NegativeInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value less than zero.\n  var NegativeInteger = NullaryTypeWithUrl(\n    'sanctuary-def/NegativeInteger',\n    function(x) { return Integer._test(x) && x < 0; }\n  );\n\n  //# NegativeNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value less than zero.\n  var NegativeNumber = NullaryTypeWithUrl(\n    'sanctuary-def/NegativeNumber',\n    function(x) { return Number_._test(x) && x < 0; }\n  );\n\n  //# NonEmpty :: Type -> Type\n  //.\n  //. Constructor for non-empty types. `$.NonEmpty($.String)`, for example, is\n  //. the type comprising every [`String`][] value except `''`.\n  //.\n  //. The given type must satisfy the [Monoid][] and [Setoid][] specifications.\n  var NonEmpty = UnaryType(\n    'sanctuary-def/NonEmpty',\n    functionUrl('NonEmpty'),\n    function(x) {\n      return Z.Monoid.test(x) &&\n             Z.Setoid.test(x) &&\n             !Z.equals(x, Z.empty(x.constructor));\n    },\n    function(monoid) { return [monoid]; }\n  );\n\n  //# NonGlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `false`.\n  //.\n  //. See also [`GlobalRegExp`][].\n  var NonGlobalRegExp = NullaryTypeWithUrl(\n    'sanctuary-def/NonGlobalRegExp',\n    function(x) { return RegExp_._test(x) && !x.global; }\n  );\n\n  //# NonNegativeInteger :: Type\n  //.\n  //. Type comprising every non-negative [`Integer`][] value (including `-0`).\n  //. Also known as the set of natural numbers under ISO 80000-2:2009.\n  var NonNegativeInteger = NullaryTypeWithUrl(\n    'sanctuary-def/NonNegativeInteger',\n    function(x) { return Integer._test(x) && x >= 0; }\n  );\n\n  //# NonZeroFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value except `0` and `-0`.\n  var NonZeroFiniteNumber = NullaryTypeWithUrl(\n    'sanctuary-def/NonZeroFiniteNumber',\n    function(x) { return FiniteNumber._test(x) && x !== 0; }\n  );\n\n  //# NonZeroInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value except `0` and `-0`.\n  var NonZeroInteger = NullaryTypeWithUrl(\n    'sanctuary-def/NonZeroInteger',\n    function(x) { return Integer._test(x) && x !== 0; }\n  );\n\n  //# NonZeroValidNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `0` and `-0`.\n  var NonZeroValidNumber = NullaryTypeWithUrl(\n    'sanctuary-def/NonZeroValidNumber',\n    function(x) { return ValidNumber._test(x) && x !== 0; }\n  );\n\n  //# Null :: Type\n  //.\n  //. Type whose sole member is `null`.\n  var Null = NullaryTypeWithUrl('Null', typeEq('Null'));\n\n  //# Nullable :: Type -> Type\n  //.\n  //. Constructor for types which include `null` as a member.\n  var Nullable = UnaryTypeWithUrl(\n    'sanctuary-def/Nullable',\n    K(true),\n    function(nullable) {\n      // eslint-disable-next-line eqeqeq\n      return nullable === null ? [] : [nullable];\n    }\n  );\n\n  //# Number :: Type\n  //.\n  //. Type comprising every primitive Number value (including `NaN`).\n  var Number_ = NullaryTypeWithUrl('Number', typeofEq('number'));\n\n  //# Object :: Type\n  //.\n  //. Type comprising every \"plain\" Object value. Specifically, values\n  //. created via:\n  //.\n  //.   - object literal syntax;\n  //.   - [`Object.create`][]; or\n  //.   - the `new` operator in conjunction with `Object` or a custom\n  //.     constructor function.\n  var Object_ = NullaryTypeWithUrl('Object', typeEq('Object'));\n\n  //# Pair :: Type -> Type -> Type\n  //.\n  //. Constructor for tuple types of length 2. Arrays are said to represent\n  //. tuples. `['foo', 42]` is a member of `Pair String Number`.\n  var Pair = BinaryTypeWithUrl(\n    'sanctuary-def/Pair',\n    function(x) { return typeEq('Array')(x) && x.length === 2; },\n    function(pair) { return [pair[0]]; },\n    function(pair) { return [pair[1]]; }\n  );\n\n  //# PositiveFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value greater than zero.\n  var PositiveFiniteNumber = NullaryTypeWithUrl(\n    'sanctuary-def/PositiveFiniteNumber',\n    function(x) { return FiniteNumber._test(x) && x > 0; }\n  );\n\n  //# PositiveInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value greater than zero.\n  var PositiveInteger = NullaryTypeWithUrl(\n    'sanctuary-def/PositiveInteger',\n    function(x) { return Integer._test(x) && x > 0; }\n  );\n\n  //# PositiveNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value greater than zero.\n  var PositiveNumber = NullaryTypeWithUrl(\n    'sanctuary-def/PositiveNumber',\n    function(x) { return Number_._test(x) && x > 0; }\n  );\n\n  //# RegExp :: Type\n  //.\n  //. Type comprising every RegExp value.\n  var RegExp_ = NullaryTypeWithUrl('RegExp', typeEq('RegExp'));\n\n  //# RegexFlags :: Type\n  //.\n  //. Type comprising the canonical RegExp flags:\n  //.\n  //.   - `''`\n  //.   - `'g'`\n  //.   - `'i'`\n  //.   - `'m'`\n  //.   - `'gi'`\n  //.   - `'gm'`\n  //.   - `'im'`\n  //.   - `'gim'`\n  var RegexFlags = EnumTypeWithUrl(\n    'sanctuary-def/RegexFlags',\n    ['', 'g', 'i', 'm', 'gi', 'gm', 'im', 'gim']\n  );\n\n  //# StrMap :: Type -> Type\n  //.\n  //. Constructor for homogeneous Object types.\n  //.\n  //. `{foo: 1, bar: 2, baz: 3}`, for example, is a member of `StrMap Number`;\n  //. `{foo: 1, bar: 2, baz: 'XXX'}` is not.\n  var StrMap = UnaryTypeWithUrl(\n    'sanctuary-def/StrMap',\n    Object_._test,\n    function(strMap) {\n      return Z.reduce(function(xs, x) { return xs.concat([x]); }, [], strMap);\n    }\n  );\n\n  //# String :: Type\n  //.\n  //. Type comprising every primitive String value.\n  var String_ = NullaryTypeWithUrl('String', typeofEq('string'));\n\n  //# Symbol :: Type\n  //.\n  //. Type comprising every Symbol value.\n  var Symbol_ = NullaryTypeWithUrl('Symbol', typeofEq('symbol'));\n\n  //# Type :: Type\n  //.\n  //. Type comprising every `Type` value.\n  var Type = NullaryTypeWithUrl('Type', typeEq('sanctuary-def/Type'));\n\n  //# TypeClass :: Type\n  //.\n  //. Type comprising every [`TypeClass`][] value.\n  var TypeClass =\n  NullaryTypeWithUrl('TypeClass', typeEq('sanctuary-type-classes/TypeClass'));\n\n  //# Undefined :: Type\n  //.\n  //. Type whose sole member is `undefined`.\n  var Undefined = NullaryTypeWithUrl('Undefined', typeEq('Undefined'));\n\n  //# Unknown :: Type\n  //.\n  //. Type used to represent missing type information. The type of `[]`,\n  //. for example, is `Array ???`.\n  //.\n  //. May be used with type constructors when defining environments. Given a\n  //. type constructor `List :: Type -> Type`, one could use `List($.Unknown)`\n  //. to include an infinite number of types in an environment:\n  //.\n  //.   - `List Number`\n  //.   - `List String`\n  //.   - `List (List Number)`\n  //.   - `List (List String)`\n  //.   - `List (List (List Number))`\n  //.   - `List (List (List String))`\n  //.   - `...`\n  var Unknown =\n  new _Type(UNKNOWN, '', '', always2('Unknown'), K(true), [], {});\n\n  //# ValidDate :: Type\n  //.\n  //. Type comprising every [`Date`][] value except `new Date(NaN)`.\n  var ValidDate = NullaryTypeWithUrl(\n    'sanctuary-def/ValidDate',\n    function(x) { return Date_._test(x) && !isNaN(x.valueOf()); }\n  );\n\n  //# ValidNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value except `NaN`.\n  var ValidNumber = NullaryTypeWithUrl(\n    'sanctuary-def/ValidNumber',\n    function(x) { return Number_._test(x) && !isNaN(x); }\n  );\n\n  //# env :: Array Type\n  //.\n  //. An array of [types][]:\n  //.\n  //.   - <code>[AnyFunction](#AnyFunction)</code>\n  //.   - <code>[Arguments](#Arguments)</code>\n  //.   - <code>[Array](#Array)([Unknown](#Unknown))</code>\n  //.   - <code>[Boolean](#Boolean)</code>\n  //.   - <code>[Date](#Date)</code>\n  //.   - <code>[Error](#Error)</code>\n  //.   - <code>[Null](#Null)</code>\n  //.   - <code>[Number](#Number)</code>\n  //.   - <code>[Object](#Object)</code>\n  //.   - <code>[RegExp](#RegExp)</code>\n  //.   - <code>[StrMap](#StrMap)([Unknown](#Unknown))</code>\n  //.   - <code>[String](#String)</code>\n  //.   - <code>[Symbol](#Symbol)</code>\n  //.   - <code>[Undefined](#Undefined)</code>\n  var env = [\n    AnyFunction,\n    Arguments,\n    Array_(Unknown),\n    Boolean_,\n    Date_,\n    Error_,\n    Null,\n    Number_,\n    Object_,\n    RegExp_,\n    StrMap(Unknown),\n    String_,\n    Symbol_,\n    Undefined\n  ];\n\n  //  Unchecked :: String -> Type\n  function Unchecked(s) { return NullaryType(s, '', K(true)); }\n\n  var def = _create({checkTypes: true, env: env});\n\n  //  arity :: (Number, Function) -> Function\n  function arity(n, f) {\n    return (\n      n === 0 ?\n        function() {\n          return f.apply(this, arguments);\n        } :\n      n === 1 ?\n        function($1) {\n          return f.apply(this, arguments);\n        } :\n      n === 2 ?\n        function($1, $2) {\n          return f.apply(this, arguments);\n        } :\n      n === 3 ?\n        function($1, $2, $3) {\n          return f.apply(this, arguments);\n        } :\n      n === 4 ?\n        function($1, $2, $3, $4) {\n          return f.apply(this, arguments);\n        } :\n      n === 5 ?\n        function($1, $2, $3, $4, $5) {\n          return f.apply(this, arguments);\n        } :\n      n === 6 ?\n        function($1, $2, $3, $4, $5, $6) {\n          return f.apply(this, arguments);\n        } :\n      n === 7 ?\n        function($1, $2, $3, $4, $5, $6, $7) {\n          return f.apply(this, arguments);\n        } :\n      n === 8 ?\n        function($1, $2, $3, $4, $5, $6, $7, $8) {\n          return f.apply(this, arguments);\n        } :\n      // else\n        function($1, $2, $3, $4, $5, $6, $7, $8, $9) {\n          return f.apply(this, arguments);\n        }\n    );\n  }\n\n  //  numArgs :: Number -> String\n  function numArgs(n) {\n    switch (n) {\n      case  0:  return  'zero arguments';\n      case  1:  return   'one argument';\n      case  2:  return   'two arguments';\n      case  3:  return 'three arguments';\n      case  4:  return  'four arguments';\n      case  5:  return  'five arguments';\n      case  6:  return   'six arguments';\n      case  7:  return 'seven arguments';\n      case  8:  return 'eight arguments';\n      case  9:  return  'nine arguments';\n      default:  return  n + ' arguments';\n    }\n  }\n\n  //  expandUnknown :: ... -> Array Type\n  function expandUnknown(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    value,          // :: Any\n    r               // :: { extractor :: a -> Array b, type :: Type }\n  ) {\n    return r.type.type === UNKNOWN ?\n      _determineActualTypes(env, seen, r.extractor(value)) :\n      [r.type];\n  }\n\n  //  _determineActualTypes :: ... -> Array Type\n  function _determineActualTypes(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    values          // :: Array Any\n  ) {\n    function refine(types, value) {\n      var seen$;\n      if (typeof value === 'object' && value != null ||\n          typeof value === 'function') {\n        //  Abort if a circular reference is encountered; add the current\n        //  object to the array of seen objects otherwise.\n        if (seen.indexOf(value) >= 0) return [];\n        seen$ = Z.concat(seen, [value]);\n      } else {\n        seen$ = seen;\n      }\n      return Z.chain(function(t) {\n        return (\n          t.name === 'sanctuary-def/Nullable' || t.validate(value).isLeft ?\n            [] :\n          t.type === UNARY ?\n            Z.map(fromUnaryType(t),\n                  expandUnknown(env, seen$, value, t.types.$1)) :\n          t.type === BINARY ?\n            xprod(t,\n                  expandUnknown(env, seen$, value, t.types.$1),\n                  expandUnknown(env, seen$, value, t.types.$2)) :\n          // else\n            [t]\n        );\n      }, types);\n    }\n\n    return isEmpty(values) ?\n      [Unknown] :\n      or(Z.reduce(refine, env, values), [Inconsistent]);\n  }\n\n  //  isConsistent :: Type -> Boolean\n  function isConsistent(t) {\n    return t.type === UNARY   ? isConsistent(t.types.$1.type) :\n           t.type === BINARY  ? isConsistent(t.types.$1.type) &&\n                                isConsistent(t.types.$2.type) :\n           /* else */           t.type !== INCONSISTENT;\n  }\n\n  //  determineActualTypesStrict :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesStrict(env, values) {\n    return _determineActualTypes(env, [], values)\n           .filter(isConsistent);\n  }\n\n  //  determineActualTypesLoose :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesLoose(env, values) {\n    return _determineActualTypes(env, [], values)\n           .filter(function(t) { return t.type !== INCONSISTENT; });\n  }\n\n  //  TypeInfo = { name :: String\n  //             , constraints :: StrMap (Array TypeClass)\n  //             , types :: Array Type }\n  //\n  //  TypeVarMap = StrMap { types :: Array Type\n  //                      , valuesByPath :: StrMap (Array Any) }\n  //\n  //  PropPath = Array (Number | String)\n\n  //  updateTypeVarMap :: ... -> TypeVarMap\n  function updateTypeVarMap(\n    env,            // :: Array Type\n    typeVarMap,     // :: TypeVarMap\n    typeVar,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var $typeVarMap = {};\n    for (var typeVarName in typeVarMap) {\n      var entry = typeVarMap[typeVarName];\n      var $entry = {types: entry.types.slice(), valuesByPath: {}};\n      for (var k in entry.valuesByPath) {\n        $entry.valuesByPath[k] = entry.valuesByPath[k].slice();\n      }\n      $typeVarMap[typeVarName] = $entry;\n    }\n    if (!hasOwnProperty.call($typeVarMap, typeVar.name)) {\n      $typeVarMap[typeVar.name] = {types: env.slice(), valuesByPath: {}};\n    }\n\n    var key = JSON.stringify(Z.concat([index], propPath));\n    if (!hasOwnProperty.call($typeVarMap[typeVar.name].valuesByPath, key)) {\n      $typeVarMap[typeVar.name].valuesByPath[key] = [];\n    }\n\n    var isNullaryTypeVar = isEmpty(typeVar.keys);\n\n    values.forEach(function(value) {\n      $typeVarMap[typeVar.name].valuesByPath[key].push(value);\n      $typeVarMap[typeVar.name].types = Z.chain(\n        function(t) {\n          var xs;\n          var invalid = !test(env, t, value);\n          return (\n            invalid ?\n              [] :\n            t.type === UNARY ?\n              isNullaryTypeVar &&\n              t.types.$1.type.type === UNKNOWN &&\n              !isEmpty(xs = t.types.$1.extractor(value)) ?\n                Z.map(fromUnaryType(t),\n                      determineActualTypesStrict(env, xs)) :\n                [t] :\n            t.type === BINARY ?\n              isNullaryTypeVar ?\n                xprod(t,\n                      t.types.$1.type.type === UNKNOWN &&\n                      !isEmpty(xs = t.types.$1.extractor(value)) ?\n                        determineActualTypesStrict(env, xs) :\n                        [t.types.$1.type],\n                      t.types.$2.type.type === UNKNOWN &&\n                      !isEmpty(xs = t.types.$2.extractor(value)) ?\n                        determineActualTypesStrict(env, xs) :\n                        [t.types.$2.type]) :\n                [t] :\n            // else\n              [t]\n          );\n        },\n        $typeVarMap[typeVar.name].types\n      );\n    });\n\n    return $typeVarMap;\n  }\n\n  //  underlineTypeVars :: (TypeInfo, StrMap (Array Any)) -> String\n  function underlineTypeVars(typeInfo, valuesByPath) {\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var paths = Z.map(JSON.parse, Object.keys(valuesByPath).sort());\n    return underline(\n      typeInfo,\n      K(K(_)),\n      function(index) {\n        return function(f) {\n          return function(t) {\n            return function(propPath) {\n              var indexedPropPath = Z.concat([index], propPath);\n              return function(s) {\n                if (paths.some(isPrefix(indexedPropPath))) {\n                  var key = JSON.stringify(indexedPropPath);\n                  if (!hasOwnProperty.call(valuesByPath, key)) return s;\n                  if (!isEmpty(valuesByPath[key])) return f(s);\n                }\n                return _(s);\n              };\n            };\n          };\n        };\n      }\n    );\n  }\n\n  //  satisfactoryTypes ::\n  //    ... -> Either (() -> Error) { typeVarMap :: TypeVarMap\n  //                                , types :: Array Type }\n  function satisfactoryTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeVarMap,     // :: TypeVarMap\n    expType,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var recur = satisfactoryTypes;\n\n    for (var idx = 0; idx < values.length; idx += 1) {\n      var result = expType.validate(values[idx]);\n      if (result.isLeft) {\n        return Left(function() {\n          return invalidValue(env,\n                              typeInfo,\n                              index,\n                              result.value.propPath,\n                              result.value.value);\n        });\n      }\n    }\n\n    switch (expType.type) {\n\n      case VARIABLE:\n        var typeVarName = expType.name;\n        var constraints = typeInfo.constraints;\n        if (hasOwnProperty.call(constraints, typeVarName)) {\n          var typeClasses = constraints[typeVarName];\n          for (idx = 0; idx < values.length; idx += 1) {\n            for (var idx2 = 0; idx2 < typeClasses.length; idx2 += 1) {\n              if (!typeClasses[idx2].test(values[idx])) {\n                return Left(function() {\n                  return typeClassConstraintViolation(\n                    env,\n                    typeInfo,\n                    typeClasses[idx2],\n                    index,\n                    propPath,\n                    values[idx],\n                    typeVarMap\n                  );\n                });\n              }\n            }\n          }\n        }\n\n        var typeVarMap$ = updateTypeVarMap(env,\n                                           typeVarMap,\n                                           expType,\n                                           index,\n                                           propPath,\n                                           values);\n\n        var okTypes = typeVarMap$[typeVarName].types;\n        return isEmpty(okTypes) && !isEmpty(values) ?\n          Left(function() {\n            return typeVarConstraintViolation(\n              env,\n              typeInfo,\n              index,\n              propPath,\n              typeVarMap$[typeVarName].valuesByPath\n            );\n          }) :\n          Z.reduce(function(e, t) {\n            return isEmpty(expType.keys) || isEmpty(t.keys) ?\n              e :\n              Z.chain(function(r) {\n                //  The `a` in `Functor f => f a` corresponds to the `a`\n                //  in `Maybe a` but to the `b` in `Either a b`. A type\n                //  variable's $1 will correspond to either $1 or $2 of\n                //  the actual type depending on the actual type's arity.\n                var offset = t.keys.length - expType.keys.length;\n                return expType.keys.reduce(function(e, k, idx) {\n                  var extractor = t.types[t.keys[offset + idx]].extractor;\n                  var innerValues = Z.chain(extractor, values);\n                  return Z.chain(\n                    function(r) {\n                      return recur(env,\n                                   typeInfo,\n                                   r.typeVarMap,\n                                   expType.types[k].type,\n                                   index,\n                                   Z.concat(propPath, [k]),\n                                   innerValues);\n                    },\n                    Z.reduce(function(e, x) {\n                      var t = expType.types[k].type;\n                      return Z.chain(function(r) {\n                        return test(env, t, x) ? Right(r) : Left(function() {\n                          var propPath$ = Z.concat(propPath, [k]);\n                          return t.type === VARIABLE ?\n                            typeVarConstraintViolation(\n                              env,\n                              typeInfo,\n                              index,\n                              propPath$,\n                              singleton(JSON.stringify(Z.concat([index],\n                                                                propPath$)),\n                                        [x])\n                            ) :\n                            invalidValue(env, typeInfo, index, propPath$, x);\n                        });\n                      }, e);\n                    }, e, innerValues)\n                  );\n                }, Right(r));\n              }, e);\n          }, Right({typeVarMap: typeVarMap$, types: okTypes}), okTypes);\n\n      case UNARY:\n        return Z.map(\n          function(result) {\n            return {\n              typeVarMap: result.typeVarMap,\n              types: Z.map(fromUnaryType(expType),\n                           or(result.types, [expType.types.$1.type]))\n            };\n          },\n          recur(env,\n                typeInfo,\n                typeVarMap,\n                expType.types.$1.type,\n                index,\n                Z.concat(propPath, ['$1']),\n                Z.chain(expType.types.$1.extractor, values))\n        );\n\n      case BINARY:\n        return Z.chain(\n          function(result) {\n            var $1s = result.types;\n            return Z.map(\n              function(result) {\n                var $2s = result.types;\n                return {\n                  typeVarMap: result.typeVarMap,\n                  types: xprod(expType,\n                               or($1s, [expType.types.$1.type]),\n                               or($2s, [expType.types.$2.type]))\n                };\n              },\n              recur(env,\n                    typeInfo,\n                    result.typeVarMap,\n                    expType.types.$2.type,\n                    index,\n                    Z.concat(propPath, ['$2']),\n                    Z.chain(expType.types.$2.extractor, values))\n            );\n          },\n          recur(env,\n                typeInfo,\n                typeVarMap,\n                expType.types.$1.type,\n                index,\n                Z.concat(propPath, ['$1']),\n                Z.chain(expType.types.$1.extractor, values))\n        );\n\n      case RECORD:\n        return Z.reduce(function(e, k) {\n          return Z.chain(function(r) {\n            return recur(env,\n                         typeInfo,\n                         r.typeVarMap,\n                         expType.types[k].type,\n                         index,\n                         Z.concat(propPath, [k]),\n                         Z.chain(expType.types[k].extractor, values));\n          }, e);\n        }, Right({typeVarMap: typeVarMap, types: [expType]}), expType.keys);\n\n      default:\n        return Right({typeVarMap: typeVarMap, types: [expType]});\n    }\n  }\n\n  //# test :: Array Type -> Type -> a -> Boolean\n  //.\n  //. Takes an environment, a type, and any value. Returns `true` if the value\n  //. is a member of the type; `false` otherwise.\n  //.\n  //. The environment is only significant if the type contains\n  //. [type variables][].\n  //.\n  //. One may define a more restrictive type in terms of a more general one:\n  //.\n  //. ```javascript\n  //. //    NonNegativeInteger :: Type\n  //. const NonNegativeInteger = $.NullaryType(\n  //.   'my-package/NonNegativeInteger',\n  //.   'http://example.com/my-package#NonNegativeInteger',\n  //.   x => $.test([], $.Integer, x) && x >= 0\n  //. );\n  //. ```\n  //.\n  //. Using types as predicates is useful in other contexts too. One could,\n  //. for example, define a [record type][] for each endpoint of a REST API\n  //. and validate the bodies of incoming POST requests against these types.\n  function test(env, t, x) {\n    var typeInfo = {name: 'name', constraints: {}, types: [t]};\n    return satisfactoryTypes(env, typeInfo, {}, t, 0, [], [x]).isRight;\n  }\n\n  //. ### Type constructors\n  //.\n  //. sanctuary-def provides several functions for defining types.\n\n  //# NullaryType :: String -> String -> (Any -> Boolean) -> Type\n  //.\n  //. Type constructor for types with no type variables (such as [`Number`][]).\n  //.\n  //. To define a nullary type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - a predicate which accepts any JavaScript value and returns `true` if\n  //.     (and only if) the value is a member of `t`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Integer :: Type\n  //. const Integer = $.NullaryType(\n  //.   'my-package/Integer',\n  //.   'http://example.com/my-package#Integer',\n  //.   x => typeof x === 'number' &&\n  //.        Math.floor(x) === x &&\n  //.        x >= Number.MIN_SAFE_INTEGER &&\n  //.        x <= Number.MAX_SAFE_INTEGER\n  //. );\n  //.\n  //. //    NonZeroInteger :: Type\n  //. const NonZeroInteger = $.NullaryType(\n  //.   'my-package/NonZeroInteger',\n  //.   'http://example.com/my-package#NonZeroInteger',\n  //.   x => $.test([], Integer, x) && x !== 0\n  //. );\n  //.\n  //. //    rem :: Integer -> NonZeroInteger -> Integer\n  //. const rem =\n  //. def('rem', {}, [Integer, NonZeroInteger, Integer], (x, y) => x % y);\n  //.\n  //. rem(42, 5);\n  //. // => 2\n  //.\n  //. rem(0.5);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //          ^^^^^^^\n  //. //             1\n  //. //\n  //. //   1)  0.5 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Integer’.\n  //.\n  //. rem(42, 0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //                     ^^^^^^^^^^^^^^\n  //. //                           1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘NonZeroInteger’.\n  //. ```\n  function NullaryType(name, url, test) {\n    function format(outer, inner) {\n      return outer(stripNamespace(name));\n    }\n    return new _Type(NULLARY, name, url, format, test, [], {});\n  }\n\n  var CheckedNullaryType =\n  def('NullaryType',\n      {},\n      [String_, String_, Function_([Any, Boolean_]), Type],\n      NullaryType);\n\n  //# UnaryType :: String -> String -> (Any -> Boolean) -> (t a -> Array a) -> (Type -> Type)\n  //.\n  //. Type constructor for types with one type variable (such as [`Array`][]).\n  //.\n  //. To define a unary type `t a` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if (and only if) the value is a member of `t x` for some type `x`;\n  //.\n  //.   - a function which takes any value of type `t a` and returns an array\n  //.     of the values of type `a` contained in the `t` (exposed as\n  //.     `t.types.$1.extractor`); and\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`).\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //.\n  //. //    maybeTypeIdent :: String\n  //. const maybeTypeIdent = 'my-package/Maybe';\n  //.\n  //. //    Maybe :: Type -> Type\n  //. const Maybe = $.UnaryType(\n  //.   maybeTypeIdent,\n  //.   'http://example.com/my-package#Maybe',\n  //.   x => type(x) === maybeTypeIdent,\n  //.   maybe => maybe.isJust ? [maybe.value] : []\n  //. );\n  //.\n  //. //    MaybeTypeRep :: TypeRep Maybe\n  //. const MaybeTypeRep = {'@@type': maybeTypeIdent};\n  //.\n  //. //    Nothing :: Maybe a\n  //. const Nothing = {\n  //.   constructor: MaybeTypeRep,\n  //.   isJust: false,\n  //.   isNothing: true,\n  //.   toString: () => 'Nothing',\n  //. };\n  //.\n  //. //    Just :: a -> Maybe a\n  //. const Just = x => ({\n  //.   constructor: MaybeTypeRep,\n  //.   isJust: true,\n  //.   isNothing: false,\n  //.   toString: () => 'Just(' + Z.toString(x) + ')',\n  //.   value: x,\n  //. });\n  //.\n  //. //    fromMaybe :: a -> Maybe a -> a\n  //. const fromMaybe =\n  //. def('fromMaybe', {}, [a, Maybe(a), a], (x, m) => m.isJust ? m.value : x);\n  //.\n  //. fromMaybe(0, Just(42));\n  //. // => 42\n  //.\n  //. fromMaybe(0, Nothing);\n  //. // => 0\n  //.\n  //. fromMaybe(0, Just('XXX'));\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   fromMaybe :: a -> Maybe a -> a\n  //. //                ^          ^\n  //. //                1          2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"XXX\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function UnaryType(name, url, test, _1) {\n    return function($1) {\n      function format(outer, inner) {\n        return outer('(' + stripNamespace(name) + ' ') +\n               inner('$1')(String($1)) + outer(')');\n      }\n      var types = {$1: {extractor: _1, type: $1}};\n      return new _Type(UNARY, name, url, format, test, ['$1'], types);\n    };\n  }\n\n  var CheckedUnaryType =\n  def('UnaryType',\n      {},\n      [String_,\n       String_,\n       Function_([Any, Boolean_]),\n       Function_([Unchecked('t a'), Array_(Unchecked('a'))]),\n       AnyFunction],\n      function(name, url, test, _1) {\n        return def(stripNamespace(name),\n                   {},\n                   [Type, Type],\n                   UnaryType(name, url, test, _1));\n      });\n\n  //  fromUnaryType :: Type -> (Type -> Type)\n  function fromUnaryType(t) {\n    return UnaryType(t.name, t.url, t._test, t.types.$1.extractor);\n  }\n\n  //# BinaryType :: String -> String -> (Any -> Boolean) -> (t a b -> Array a) -> (t a b -> Array b) -> (Type -> Type -> Type)\n  //.\n  //. Type constructor for types with two type variables (such as [`Pair`][]).\n  //.\n  //. To define a binary type `t a b` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if (and only if) the value is a member of `t x y` for some types\n  //.     `x` and `y`;\n  //.\n  //.   - a function which takes any value of type `t a b` and returns an array\n  //.     of the values of type `a` contained in the `t` (exposed as\n  //.     `t.types.$1.extractor`);\n  //.\n  //.   - a function which takes any value of type `t a b` and returns an array\n  //.     of the values of type `b` contained in the `t` (exposed as\n  //.     `t.types.$2.extractor`);\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`); and\n  //.\n  //.   - the type of `b` (exposed as `t.types.$2.type`).\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //.\n  //. //    pairTypeIdent :: String\n  //. const pairTypeIdent = 'my-package/Pair';\n  //.\n  //. //    $Pair :: Type -> Type -> Type\n  //. const $Pair = $.BinaryType(\n  //.   pairTypeIdent,\n  //.   'http://example.com/my-package#Pair',\n  //.   x => type(x) === pairTypeIdent,\n  //.   pair => [pair[0]],\n  //.   pair => [pair[1]]\n  //. );\n  //.\n  //. //    PairTypeRep :: TypeRep Pair\n  //. const PairTypeRep = {'@@type': pairTypeIdent};\n  //.\n  //. //    Pair :: a -> b -> Pair a b\n  //. const Pair = def('Pair', {}, [a, b, $Pair(a, b)], (x, y) => ({\n  //.   '0': x,\n  //.   '1': y,\n  //.   constructor: PairTypeRep,\n  //.   length: 2,\n  //.   toString: () => 'Pair(' + Z.toString(x) + ', ' + Z.toString(y) + ')',\n  //. }));\n  //.\n  //. //    Rank :: Type\n  //. const Rank = $.NullaryType(\n  //.   'my-package/Rank',\n  //.   'http://example.com/my-package#Rank',\n  //.   x => typeof x === 'string' && /^([A23456789JQK]|10)$/.test(x)\n  //. );\n  //.\n  //. //    Suit :: Type\n  //. const Suit = $.NullaryType(\n  //.   'my-package/Suit',\n  //.   'http://example.com/my-package#Suit',\n  //.   x => typeof x === 'string' && /^[\\u2660\\u2663\\u2665\\u2666]$/.test(x)\n  //. );\n  //.\n  //. //    Card :: Type\n  //. const Card = $Pair(Rank, Suit);\n  //.\n  //. //    showCard :: Card -> String\n  //. const showCard =\n  //. def('showCard', {}, [Card, $.String], card => card[0] + card[1]);\n  //.\n  //. showCard(Pair('A', '♠'));\n  //. // => 'A♠'\n  //.\n  //. showCard(Pair('X', '♠'));\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   showCard :: Pair Rank Suit -> String\n  //. //                    ^^^^\n  //. //                     1\n  //. //\n  //. //   1)  \"X\" :: String\n  //. //\n  //. //   The value at position 1 is not a member of ‘Rank’.\n  //. ```\n  function BinaryType(name, url, test, _1, _2) {\n    return function($1, $2) {\n      function format(outer, inner) {\n        return outer('(' + stripNamespace(name) + ' ') +\n               inner('$1')(String($1)) + outer(' ') +\n               inner('$2')(String($2)) + outer(')');\n      }\n      var types = {$1: {extractor: _1, type: $1},\n                   $2: {extractor: _2, type: $2}};\n      return new _Type(BINARY, name, url, format, test, ['$1', '$2'], types);\n    };\n  }\n\n  var CheckedBinaryType =\n  def('BinaryType',\n      {},\n      [String_,\n       String_,\n       Function_([Any, Boolean_]),\n       Function_([Unchecked('t a b'), Array_(Unchecked('a'))]),\n       Function_([Unchecked('t a b'), Array_(Unchecked('b'))]),\n       AnyFunction],\n      function(name, url, test, _1, _2) {\n        return def(stripNamespace(name),\n                   {},\n                   [Type, Type, Type],\n                   BinaryType(name, url, test, _1, _2));\n      });\n\n  //  xprod :: (Type, Array Type, Array Type) -> Array Type\n  function xprod(t, $1s, $2s) {\n    var specialize = BinaryType(t.name,\n                                t.url,\n                                t._test,\n                                t.types.$1.extractor,\n                                t.types.$2.extractor);\n    var $types = [];\n    $1s.forEach(function($1) {\n      $2s.forEach(function($2) {\n        $types.push(specialize($1, $2));\n      });\n    });\n    return $types;\n  }\n\n  //# EnumType :: String -> String -> Array Any -> Type\n  //.\n  //. Type constructor for [enumerated types][] (such as [`RegexFlags`][]).\n  //.\n  //. To define an enumerated type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - an array of distinct values.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Denomination :: Type\n  //. const Denomination = $.EnumType(\n  //.   'my-package/Denomination',\n  //.   'http://example.com/my-package#Denomination',\n  //.   [10, 20, 50, 100, 200]\n  //. );\n  //. ```\n  function EnumType(name, url, members) {\n    return NullaryType(name, url, memberOf(members));\n  }\n\n  var CheckedEnumType =\n  def('EnumType', {}, [String_, String_, Array_(Any), Type], EnumType);\n\n  //# RecordType :: StrMap Type -> Type\n  //.\n  //. `RecordType` is used to construct record types. The type definition\n  //. specifies the name and type of each required field.\n  //.\n  //. To define a record type one must provide:\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Point :: Type\n  //. const Point = $.RecordType({x: $.FiniteNumber, y: $.FiniteNumber});\n  //.\n  //. //    dist :: Point -> Point -> FiniteNumber\n  //. const dist =\n  //. def('dist', {}, [Point, Point, $.FiniteNumber],\n  //.     (p, q) => Math.sqrt(Math.pow(p.x - q.x, 2) +\n  //.                         Math.pow(p.y - q.y, 2)));\n  //.\n  //. dist({x: 0, y: 0}, {x: 3, y: 4});\n  //. // => 5\n  //.\n  //. dist({x: 0, y: 0}, {x: 3, y: 4, color: 'red'});\n  //. // => 5\n  //.\n  //. dist({x: 0, y: 0}, {x: NaN, y: NaN});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //                                                              ^^^^^^^^^^^^\n  //. //                                                                   1\n  //. //\n  //. //   1)  NaN :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘FiniteNumber’.\n  //.\n  //. dist(0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //. //                              1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘{ x :: FiniteNumber, y :: FiniteNumber }’.\n  //. ```\n  function RecordType(fields) {\n    var keys = Object.keys(fields).sort();\n\n    function format(outer, inner) {\n      return wrap(outer('{'))(outer(' }'))(Z.map(function(k) {\n        var t = fields[k];\n        return outer(' ' + k + ' :: ') +\n               unless(t.type === RECORD || isEmpty(t.keys),\n                      stripOutermostParens,\n                      inner(k)(String(t)));\n      }, keys).join(outer(',')));\n    }\n\n    function test(x) {\n      return x != null &&\n             keys.every(function(k) { return hasOwnProperty.call(x, k); });\n    }\n\n    var $types = {};\n    keys.forEach(function(k) {\n      $types[k] = {extractor: function(x) { return [x[k]]; }, type: fields[k]};\n    });\n\n    return new _Type(RECORD, '', '', format, test, keys, $types);\n  }\n\n  var CheckedRecordType =\n  def('RecordType', {}, [StrMap(Type), Type], RecordType);\n\n  //# TypeVariable :: String -> Type\n  //.\n  //. Polymorphism is powerful. Not being able to define a function for\n  //. all types would be very limiting indeed: one couldn't even define the\n  //. identity function!\n  //.\n  //. Before defining a polymorphic function one must define one or more type\n  //. variables:\n  //.\n  //. ```javascript\n  //. const a = $.TypeVariable('a');\n  //. const b = $.TypeVariable('b');\n  //.\n  //. //    id :: a -> a\n  //. const id = def('id', {}, [a, a], x => x);\n  //.\n  //. id(42);\n  //. // => 42\n  //.\n  //. id(null);\n  //. // => null\n  //. ```\n  //.\n  //. The same type variable may be used in multiple positions, creating a\n  //. constraint:\n  //.\n  //. ```javascript\n  //. //    cmp :: a -> a -> Number\n  //. const cmp =\n  //. def('cmp', {}, [a, a, $.Number], (x, y) => x < y ? -1 : x > y ? 1 : 0);\n  //.\n  //. cmp(42, 42);\n  //. // => 0\n  //.\n  //. cmp('a', 'z');\n  //. // => -1\n  //.\n  //. cmp('z', 'a');\n  //. // => 1\n  //.\n  //. cmp(0, '1');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   cmp :: a -> a -> Number\n  //. //          ^    ^\n  //. //          1    2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"1\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function TypeVariable(name) {\n    return new _Type(VARIABLE, name, '', always2(name), K(true), [], {});\n  }\n\n  var CheckedTypeVariable =\n  def('TypeVariable', {}, [String_, Type], TypeVariable);\n\n  //# UnaryTypeVariable :: String -> (Type -> Type)\n  //.\n  //. Combines [`UnaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a unary type variable `t a` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`); and\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`).\n  //.\n  //. Consider the type of a generalized `map`:\n  //.\n  //. ```haskell\n  //. map :: Functor f => (a -> b) -> f a -> f b\n  //. ```\n  //.\n  //. `f` is a unary type variable. With two (nullary) type variables, one\n  //. unary type variable, and one [type class][] it's possible to define a\n  //. fully polymorphic `map` function:\n  //.\n  //. ```javascript\n  //. const $ = require('sanctuary-def');\n  //. const Z = require('sanctuary-type-classes');\n  //.\n  //. const a = $.TypeVariable('a');\n  //. const b = $.TypeVariable('b');\n  //. const f = $.UnaryTypeVariable('f');\n  //.\n  //. //    map :: Functor f => (a -> b) -> f a -> f b\n  //. const map =\n  //. def('map',\n  //.     {f: [Z.Functor]},\n  //.     [$.Function([a, b]), f(a), f(b)],\n  //.     Z.map);\n  //. ```\n  //.\n  //. Whereas a regular type variable is fully resolved (`a` might become\n  //. `Array (Array String)`, for example), a unary type variable defers to\n  //. its type argument, which may itself be a type variable. The type argument\n  //. corresponds to the type argument of a unary type or the *second* type\n  //. argument of a binary type. The second type argument of `Map k v`, for\n  //. example, is `v`. One could replace `Functor => f` with `Map k` or with\n  //. `Map Integer`, but not with `Map`.\n  //.\n  //. This shallow inspection makes it possible to constrain a value's \"outer\"\n  //. and \"inner\" types independently.\n  function UnaryTypeVariable(name) {\n    return function($1) {\n      function format(outer, inner) {\n        return outer('(' + name + ' ') + inner('$1')(String($1)) + outer(')');\n      }\n      var types = {$1: {extractor: K([]), type: $1}};\n      return new _Type(VARIABLE, name, '', format, K(true), ['$1'], types);\n    };\n  }\n\n  var CheckedUnaryTypeVariable =\n  def('UnaryTypeVariable',\n      {},\n      [String_, AnyFunction],\n      function(name) {\n        return def(name, {}, [Type, Type], UnaryTypeVariable(name));\n      });\n\n  //# BinaryTypeVariable :: String -> (Type -> Type -> Type)\n  //.\n  //. Combines [`BinaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a binary type variable `t a b` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`);\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`); and\n  //.\n  //.   - the type of `b` (exposed as `t.types.$2.type`).\n  //.\n  //. The more detailed explanation of [`UnaryTypeVariable`][] also applies to\n  //. `BinaryTypeVariable`.\n  function BinaryTypeVariable(name) {\n    return function($1, $2) {\n      function format(outer, inner) {\n        return outer('(' + name + ' ') + inner('$1')(String($1)) + outer(' ') +\n                                         inner('$2')(String($2)) + outer(')');\n      }\n      var keys = ['$1', '$2'];\n      var types = {$1: {extractor: K([]), type: $1},\n                   $2: {extractor: K([]), type: $2}};\n      return new _Type(VARIABLE, name, '', format, K(true), keys, types);\n    };\n  }\n\n  var CheckedBinaryTypeVariable =\n  def('BinaryTypeVariable',\n      {},\n      [String_, AnyFunction],\n      function(name) {\n        return def(name, {}, [Type, Type, Type], BinaryTypeVariable(name));\n      });\n\n  //# Thunk :: Type -> Type\n  //.\n  //. `$.Thunk(T)` is shorthand for `$.Function([T])`, the type comprising\n  //. every nullary function (thunk) which returns a value of type `T`.\n  var Thunk =\n  def('Thunk',\n      {},\n      [Type, Type],\n      function(t) { return Function_([t]); });\n\n  //# Predicate :: Type -> Type\n  //.\n  //. `$.Predicate(T)` is shorthand for `$.Function([T, $.Boolean])`, the type\n  //. comprising every predicate function which takes a value of type `T`.\n  var Predicate =\n  def('Predicate',\n      {},\n      [Type, Type],\n      function(t) { return Function_([t, Boolean_]); });\n\n  //. ### Type classes\n  //.\n  //. `concatS`, defined earlier, is a function which concatenates two strings.\n  //. This is overly restrictive, since other types support concatenation\n  //. (Array, for example).\n  //.\n  //. One could use a type variable to define a polymorphic \"concat\" function:\n  //.\n  //. ```javascript\n  //. //    _concat :: a -> a -> a\n  //. const _concat =\n  //. def('_concat', {}, [a, a, a], (x, y) => x.concat(y));\n  //.\n  //. _concat('fizz', 'buzz');\n  //. // => 'fizzbuzz'\n  //.\n  //. _concat([1, 2], [3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. _concat([1, 2], 'buzz');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   _concat :: a -> a -> a\n  //. //              ^    ^\n  //. //              1    2\n  //. //\n  //. //   1)  [1, 2] :: Array Number\n  //. //\n  //. //   2)  \"buzz\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  //.\n  //. The type of `_concat` is misleading: it suggests that it can operate on\n  //. any two values of *any* one type. In fact there's an implicit constraint,\n  //. since the type must support concatenation (in [mathematical][semigroup]\n  //. terms, the type must have a [semigroup][FL:Semigroup]). The run-time type\n  //. errors that result when this constraint is violated are not particularly\n  //. descriptive:\n  //.\n  //. ```javascript\n  //. _concat({}, {});\n  //. // ! TypeError: undefined is not a function\n  //.\n  //. _concat(null, null);\n  //. // ! TypeError: Cannot read property 'concat' of null\n  //. ```\n  //.\n  //. The solution is to constrain `a` by first defining a [`TypeClass`][]\n  //. value, then specifying the constraint in the definition of the \"concat\"\n  //. function:\n  //.\n  //. ```javascript\n  //. const Z = require('sanctuary-type-classes');\n  //.\n  //. //    Semigroup :: TypeClass\n  //. const Semigroup = Z.TypeClass(\n  //.   'my-package/Semigroup',\n  //.   'http://example.com/my-package#Semigroup',\n  //.   [],\n  //.   x => x != null && typeof x.concat === 'function'\n  //. );\n  //.\n  //. //    concat :: Semigroup a => a -> a -> a\n  //. const concat =\n  //. def('concat', {a: [Semigroup]}, [a, a, a], (x, y) => x.concat(y));\n  //.\n  //. concat([1, 2], [3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. concat({}, {});\n  //. // ! TypeError: Type-class constraint violation\n  //. //\n  //. //   concat :: Semigroup a => a -> a -> a\n  //. //             ^^^^^^^^^^^    ^\n  //. //                            1\n  //. //\n  //. //   1)  {} :: Object, StrMap ???\n  //. //\n  //. //   ‘concat’ requires ‘a’ to satisfy the Semigroup type-class constraint; the value at position 1 does not.\n  //. //\n  //. //   See http://example.com/my-package#Semigroup for information about the my-package/Semigroup type class.\n  //.\n  //. concat(null, null);\n  //. // ! TypeError: Type-class constraint violation\n  //. //\n  //. //   concat :: Semigroup a => a -> a -> a\n  //. //             ^^^^^^^^^^^    ^\n  //. //                            1\n  //. //\n  //. //   1)  null :: Null\n  //. //\n  //. //   ‘concat’ requires ‘a’ to satisfy the Semigroup type-class constraint; the value at position 1 does not.\n  //. //\n  //. //   See http://example.com/my-package#Semigroup for information about the my-package/Semigroup type class.\n  //. ```\n  //.\n  //. Multiple constraints may be placed on a type variable by including\n  //. multiple `TypeClass` values in the array (e.g. `{a: [Foo, Bar, Baz]}`).\n\n  //  checkValue :: ... -> Undefined\n  function checkValue(\n    env,                // :: Array Type\n    typeInfo,           // :: TypeInfo\n    $typeVarMapBox,     // :: Box TypeVarMap\n    index,              // :: Integer\n    propPath,           // :: PropPath\n    t,                  // :: Type\n    value               // :: Any\n  ) {\n    if (t.type === VARIABLE) {\n      $typeVarMapBox[0] =\n        updateTypeVarMap(env, $typeVarMapBox[0], t, index, propPath, [value]);\n      if (isEmpty($typeVarMapBox[0][t.name].types)) {\n        throw typeVarConstraintViolation(\n          env,\n          typeInfo,\n          index,\n          propPath,\n          $typeVarMapBox[0][t.name].valuesByPath\n        );\n      }\n    } else if (!test(env, t, value)) {\n      throw invalidValue(env, typeInfo, index, propPath, value);\n    }\n  }\n\n  //  wrapFunction :: ... -> Function\n  function wrapFunction(\n    env,                // :: Array Type\n    typeInfo,           // :: TypeInfo\n    $typeVarMapBox,     // :: Box TypeVarMap\n    index,              // :: Integer\n    f                   // :: Function\n  ) {\n    var expType = typeInfo.types[index];\n    var numArgsExpected = expType.keys.length - 1;\n    return arity(numArgsExpected, function() {\n      var args = slice.call(arguments);\n      if (args.length !== numArgsExpected) {\n        throw invalidArgumentsLength(typeInfo, index, numArgsExpected, args);\n      }\n      function checkValue$(propPath, t, x) {\n        checkValue(env, typeInfo, $typeVarMapBox, index, propPath, t, x);\n      }\n      init(expType.keys).forEach(function(k, idx) {\n        checkValue$([k], expType.types[k].type, args[idx]);\n      });\n\n      var output = f.apply(this, arguments);\n      var k = last(expType.keys);\n      checkValue$([k], expType.types[k].type, output);\n      return output;\n    });\n  }\n\n  //  wrapFunctionCond ::\n  //    Array Type -> TypeInfo -> Box TypeVarMap -> Integer -> a -> a\n  function wrapFunctionCond(env, typeInfo, $typeVarMapBox, index, value) {\n    return typeInfo.types[index].type === FUNCTION ?\n      wrapFunction(env, typeInfo, $typeVarMapBox, index, value) :\n      value;\n  }\n\n  //  wrapFunctions :: ... -> Array Any\n  function wrapFunctions(\n    env,                // :: Array Type\n    typeInfo,           // :: TypeInfo\n    $typeVarMapBox,     // :: Box TypeVarMap\n    values              // :: Array Any\n  ) {\n    return values.map(function(value, idx) {\n      return wrapFunctionCond(env, typeInfo, $typeVarMapBox, idx, value);\n    });\n  }\n\n  //  tooManyArguments :: (TypeInfo, Integer) -> Error\n  //\n  //  This function is used in `curry` when a function defined via `def`\n  //  is applied to too many arguments.\n  function tooManyArguments(typeInfo, numArgsReceived) {\n    var numArgsExpected = typeInfo.types.length - 1;\n    return new TypeError(trimTrailingSpaces(\n      'Function applied to too many arguments\\n\\n' +\n      typeSignature(typeInfo) + '\\n\\n' +\n      q(typeInfo.name) + ' expected' +\n      (numArgsExpected > 0 ? ' at most ' : ' ') + numArgs(numArgsExpected) +\n      ' but received ' + numArgs(numArgsReceived) + '.\\n'\n    ));\n  }\n\n  //  constraintsRepr :: ... -> String\n  function constraintsRepr(\n    constraints,    // :: StrMap (Array TypeClass)\n    outer,          // :: String -> String\n    inner           // :: String -> TypeClass -> String -> String\n  ) {\n    var $reprs = [];\n    Object.keys(constraints).sort().forEach(function(k) {\n      var f = inner(k);\n      constraints[k].forEach(function(typeClass) {\n        $reprs.push(f(typeClass)(stripNamespace(typeClass.name) + ' ' + k));\n      });\n    });\n    return when($reprs.length > 0,\n                function(s) { return s + outer(' => '); },\n                when($reprs.length > 1,\n                     wrap(outer('('))(outer(')')),\n                     $reprs.join(outer(', '))));\n  }\n\n  //  label :: String -> String -> String\n  function label(label) {\n    return function(s) {\n      var delta = s.length - label.length;\n      return strRepeat(' ', Math.floor(delta / 2)) + label +\n             strRepeat(' ', Math.ceil(delta / 2));\n    };\n  }\n\n  //  typeVarNames :: Type -> Array String\n  function typeVarNames(t) {\n    return Z.concat(\n      t.type === VARIABLE ? [t.name] : [],\n      Z.chain(function(k) { return typeVarNames(t.types[k].type); }, t.keys)\n    );\n  }\n\n  //  showTypeWith :: TypeInfo -> Type -> String\n  function showTypeWith(typeInfo) {\n    var names = Z.chain(typeVarNames, typeInfo.types);\n    return function(t) {\n      var code = 'a'.charCodeAt(0);\n      return unless(\n        t.type === FUNCTION || t.type === RECORD || isEmpty(t.keys),\n        stripOutermostParens,\n        String(t).replace(/\\bUnknown\\b/g, function() {\n          // eslint-disable-next-line no-plusplus\n          do var name = String.fromCharCode(code++);\n          while (names.indexOf(name) >= 0);\n          return name;\n        })\n      );\n    };\n  }\n\n  //  showTypeQuoted :: Type -> String\n  function showTypeQuoted(t) {\n    return q(unless(t.type === RECORD || isEmpty(t.keys),\n                    stripOutermostParens,\n                    String(t)));\n  }\n\n  //  showValuesAndTypes :: ... -> String\n  function showValuesAndTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    values,         // :: Array Any\n    pos             // :: Integer\n  ) {\n    var showType = showTypeWith(typeInfo);\n    return String(pos) + ')  ' + Z.map(function(x) {\n      var types = determineActualTypesLoose(env, [x]);\n      return Z.toString(x) + ' :: ' + Z.map(showType, types).join(', ');\n    }, values).join('\\n    ');\n  }\n\n  //  typeSignature :: TypeInfo -> String\n  function typeSignature(typeInfo) {\n    var reprs = Z.map(showTypeWith(typeInfo), typeInfo.types);\n    var arity = reprs.length - 1;\n    return typeInfo.name + ' :: ' +\n             constraintsRepr(typeInfo.constraints, id, K(K(id))) +\n             when(arity === 0, parenthesize, init(reprs).join(' -> ')) +\n             ' -> ' + last(reprs);\n  }\n\n  //  _underline :: ... -> String\n  function _underline(\n    t,              // :: Type\n    propPath,       // :: PropPath\n    formatType3     // :: Type -> Array String -> String -> String\n  ) {\n    return unless(t.type === RECORD ||\n                    isEmpty(t.keys) ||\n                    t.type === FUNCTION && isEmpty(propPath) ||\n                    !isEmpty(propPath),\n                  stripOutermostParens,\n                  formatType3(t)(propPath)(t.format(_, function(k) {\n                    return K(_underline(t.types[k].type,\n                                        Z.concat(propPath, [k]),\n                                        formatType3));\n                  })));\n  }\n\n  //  underline :: ... -> String\n  function underline(\n    typeInfo,               // :: TypeInfo\n    underlineConstraint,    // :: String -> TypeClass -> String -> String\n    formatType5\n    // :: Integer -> (String -> String) -> Type -> PropPath -> String -> String\n  ) {\n    var st = typeInfo.types.reduce(function(st, t, index) {\n      var formatType4 = formatType5(index);\n      var counter = st.counter;\n      function replace(s) { return label(String(counter += 1))(s); }\n      return {\n        carets: Z.concat(st.carets, [_underline(t, [], formatType4(r('^')))]),\n        numbers: Z.concat(st.numbers,\n                          [_underline(t, [], formatType4(replace))]),\n        counter: counter\n      };\n    }, {carets: [], numbers: [], counter: 0});\n\n    return typeSignature(typeInfo) + '\\n' +\n           _(typeInfo.name + ' :: ') +\n             constraintsRepr(typeInfo.constraints, _, underlineConstraint) +\n             st.carets.join(_(' -> ')) + '\\n' +\n           _(typeInfo.name + ' :: ') +\n             constraintsRepr(typeInfo.constraints, _, K(K(_))) +\n             st.numbers.join(_(' -> ')) + '\\n';\n  }\n\n  //  resolvePropPath :: (Type, Array String) -> Type\n  function resolvePropPath(t, propPath) {\n    return Z.reduce(function(t, prop) { return t.types[prop].type; },\n                    t,\n                    propPath);\n  }\n\n  //  formatType6 ::\n  //    PropPath -> Integer -> (String -> String) ->\n  //      Type -> PropPath -> String -> String\n  function formatType6(indexedPropPath) {\n    return function(index_) {\n      return function(f) {\n        return function(t) {\n          return function(propPath_) {\n            var indexedPropPath_ = Z.concat([index_], propPath_);\n            var p = isPrefix(indexedPropPath_)(indexedPropPath);\n            var q = isPrefix(indexedPropPath)(indexedPropPath_);\n            return p && q ? f : p ? id : _;\n          };\n        };\n      };\n    };\n  }\n\n  //  see :: (String, { name :: String, url :: String? }) -> String\n  function see(label, record) {\n    return record.url == null || record.url === '' ?\n           '' :\n           '\\nSee ' + record.url +\n           ' for information about the ' + record.name + ' ' + label + '.\\n';\n  }\n\n  //  typeClassConstraintViolation :: ... -> Error\n  function typeClassConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeClass,      // :: TypeClass\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value,          // :: Any\n    typeVarMap      // :: TypeVarMap\n  ) {\n    var expType = resolvePropPath(typeInfo.types[index], propPath);\n    return new TypeError(trimTrailingSpaces(\n      'Type-class constraint violation\\n\\n' +\n      underline(typeInfo,\n                function(tvn) {\n                  return function(tc) {\n                    return tvn === expType.name && tc.name === typeClass.name ?\n                      r('^') :\n                      _;\n                  };\n                },\n                formatType6(Z.concat([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes(env, typeInfo, [value], 1) + '\\n\\n' +\n      q(typeInfo.name) + ' requires ' + q(expType.name) + ' to satisfy the ' +\n      stripNamespace(typeClass.name) + ' type-class constraint; ' +\n      'the value at position 1 does not.\\n' +\n      see('type class', typeClass)\n    ));\n  }\n\n  //  typeVarConstraintViolation :: ... -> Error\n  function typeVarConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    valuesByPath    // :: StrMap (Array Any)\n  ) {\n    //  If we apply an ‘a -> a -> a -> a’ function to Left('x'), Right(1), and\n    //  Right(null) we'd like to avoid underlining the first argument position,\n    //  since Left('x') is compatible with the other ‘a’ values.\n    var key = JSON.stringify(Z.concat([index], propPath));\n    var values = valuesByPath[key];\n\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var keys = Object.keys(valuesByPath).sort().filter(function(k) {\n      var values_ = valuesByPath[k];\n      return (\n        //  Keep X, the position at which the violation was observed.\n        k === key ||\n        //  Keep positions whose values are incompatible with the values at X.\n        isEmpty(determineActualTypesStrict(env, Z.concat(values, values_)))\n      );\n    });\n\n    var underlinedTypeVars =\n    underlineTypeVars(typeInfo,\n                      Z.reduce(function($valuesByPath, k) {\n                        $valuesByPath[k] = valuesByPath[k];\n                        return $valuesByPath;\n                      }, {}, keys));\n\n    return new TypeError(trimTrailingSpaces(\n      values.length === 1 && isEmpty(determineActualTypesLoose(env, values)) ?\n        'Unrecognized value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        '1)  ' + Z.toString(values[0]) + ' :: (no types)\\n\\n' +\n        toMarkdownList(\n          'The environment is empty! ' +\n          'Polymorphic functions require a non-empty environment.\\n',\n          'The value at position 1 is not a member of any type in ' +\n          'the environment.\\n\\n' +\n          'The environment contains the following types:\\n\\n',\n          showTypeWith(typeInfo),\n          env\n        ) :\n      // else\n        'Type-variable constraint violation\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        Z.reduce(function(st, k) {\n          var values = valuesByPath[k];\n          return isEmpty(values) ? st : {\n            idx: st.idx + 1,\n            s: st.s +\n               showValuesAndTypes(env, typeInfo, values, st.idx + 1) +\n               '\\n\\n'\n          };\n        }, {idx: 0, s: ''}, keys).s +\n        'Since there is no type of which all the above values are ' +\n        'members, the type-variable constraint has been violated.\\n'\n    ));\n  }\n\n  //  invalidValue :: ... -> Error\n  function invalidValue(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value           // :: Any\n  ) {\n    var t = resolvePropPath(typeInfo.types[index], propPath);\n    return new TypeError(trimTrailingSpaces(\n      'Invalid value\\n\\n' +\n      underline(typeInfo,\n                K(K(_)),\n                formatType6(Z.concat([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes(env, typeInfo, [value], 1) + '\\n\\n' +\n      'The value at position 1 is not a member of ' + showTypeQuoted(t) + '.' +\n      '\\n' +\n      see('type', t)\n    ));\n  }\n\n  //  invalidArgumentsLength :: ... -> Error\n  //\n  //  This function is used in `wrapFunction` to ensure that higher-order\n  //  functions defined via `def` only ever apply a function argument to\n  //  the correct number of arguments.\n  function invalidArgumentsLength(\n    typeInfo,           // :: TypeInfo\n    index,              // :: Integer\n    numArgsExpected,    // :: Integer\n    args                // :: Array Any\n  ) {\n    return new TypeError(trimTrailingSpaces(\n      q(typeInfo.name) + ' applied ' + showTypeQuoted(typeInfo.types[index]) +\n      ' to the wrong number of arguments\\n\\n' +\n      underline(\n        typeInfo,\n        K(K(_)),\n        function(index_) {\n          return function(f) {\n            return function(t) {\n              return function(propPath) {\n                return function(s) {\n                  return index_ === index ?\n                    String(t).replace(\n                      /^[(](.*) -> (.*)[)]$/,\n                      function(s, $1, $2) {\n                        return _('(') + f($1) + _(' -> ' + $2 + ')');\n                      }\n                    ) :\n                    _(s);\n                };\n              };\n            };\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs(numArgsExpected) +\n      ' but received ' + numArgs(args.length) +\n      toMarkdownList('.\\n', ':\\n\\n', Z.toString, args)\n    ));\n  }\n\n  //  assertRight :: Either (() -> Error) a -> a !\n  function assertRight(either) {\n    if (either.isLeft) throw either.value();\n    return either.value;\n  }\n\n  //  curry :: ... -> Function\n  function curry(\n    opts,         // :: Options\n    typeInfo,     // :: TypeInfo\n    _typeVarMap,  // :: TypeVarMap\n    _values,      // :: Array Any\n    _indexes,     // :: Array Integer\n    impl          // :: Function\n  ) {\n    var n = typeInfo.types.length - 1;\n\n    var curried = arity(_indexes.length, function() {\n      if (opts.checkTypes) {\n        var delta = _indexes.length - arguments.length;\n        if (delta < 0) throw tooManyArguments(typeInfo, n - delta);\n      }\n      var typeVarMap = _typeVarMap;\n      var values = _values.slice();\n      var indexes = [];\n      for (var idx = 0; idx < _indexes.length; idx += 1) {\n        var index = _indexes[idx];\n\n        if (idx < arguments.length &&\n            !(typeof arguments[idx] === 'object' &&\n              arguments[idx] != null &&\n              arguments[idx]['@@functional/placeholder'] === true)) {\n\n          var value = arguments[idx];\n          if (opts.checkTypes) {\n            var result = satisfactoryTypes(opts.env,\n                                           typeInfo,\n                                           typeVarMap,\n                                           typeInfo.types[index],\n                                           index,\n                                           [],\n                                           [value]);\n            typeVarMap = assertRight(result).typeVarMap;\n          }\n          values[index] = value;\n        } else {\n          indexes.push(index);\n        }\n      }\n      if (isEmpty(indexes)) {\n        if (opts.checkTypes) {\n          var returnValue = impl.apply(this,\n                                       wrapFunctions(opts.env,\n                                                     typeInfo,\n                                                     [typeVarMap],\n                                                     values));\n          assertRight(satisfactoryTypes(opts.env,\n                                        typeInfo,\n                                        typeVarMap,\n                                        typeInfo.types[n],\n                                        n,\n                                        [],\n                                        [returnValue]));\n          return wrapFunctionCond(env, typeInfo, [typeVarMap], n, returnValue);\n        } else {\n          return impl.apply(this, values);\n        }\n      } else {\n        return curry(opts, typeInfo, typeVarMap, values, indexes, impl);\n      }\n    });\n\n    var showType = showTypeWith(typeInfo);\n    curried.inspect = curried.toString = function() {\n      var vReprs = [];\n      var tReprs = [];\n      for (var idx = 0, placeholders = 0; idx < n; idx += 1) {\n        if (_indexes.indexOf(idx) >= 0) {\n          placeholders += 1;\n          tReprs.push(showType(typeInfo.types[idx]));\n        } else {\n          while (placeholders > 0) {\n            vReprs.push('__');\n            placeholders -= 1;\n          }\n          vReprs.push(Z.toString(_values[idx]));\n        }\n      }\n      return typeInfo.name +\n             when(vReprs.length > 0, parenthesize, vReprs.join(', ')) +\n             ' :: ' +\n             constraintsRepr(typeInfo.constraints, id, K(K(id))) +\n             when(n === 0, parenthesize, tReprs.join(' -> ')) +\n             ' -> ' + showType(typeInfo.types[n]);\n    };\n\n    return curried;\n  }\n\n  function _create(opts) {\n    function def(name, constraints, expTypes, impl) {\n      var values = new Array(expTypes.length - 1);\n      if (values.length > 9) {\n        throw new RangeError(q(def.name) + ' cannot define a function ' +\n                             'with arity greater than nine');\n      }\n      return curry(opts,\n                   {name: name, constraints: constraints, types: expTypes},\n                   {},\n                   values,\n                   range(0, values.length),\n                   impl);\n    }\n    return def(def.name,\n               {},\n               [String_,\n                StrMap(Array_(TypeClass)),\n                NonEmpty(Array_(Type)),\n                AnyFunction,\n                AnyFunction],\n               def);\n  }\n\n  var create =\n  def('create',\n      {},\n      [RecordType({checkTypes: Boolean_, env: Array_(Any)}), AnyFunction],\n      _create);\n\n  //  fromUncheckedUnaryType :: (Type -> Type) -> (Type -> Type)\n  function fromUncheckedUnaryType(typeConstructor) {\n    var t = typeConstructor(Unknown);\n    var _1 = t.types.$1.extractor;\n    return CheckedUnaryType(t.name, t.url, t._test, _1);\n  }\n\n  //  fromUncheckedBinaryType :: ((Type, Type) -> Type) ->\n  //                             (Type -> Type -> Type)\n  function fromUncheckedBinaryType(typeConstructor) {\n    var t = typeConstructor(Unknown, Unknown);\n    var _1 = t.types.$1.extractor;\n    var _2 = t.types.$2.extractor;\n    return CheckedBinaryType(t.name, t.url, t._test, _1, _2);\n  }\n\n  return {\n    __: __,\n    Any: Any,\n    AnyFunction: AnyFunction,\n    Arguments: Arguments,\n    Array: fromUncheckedUnaryType(Array_),\n    Boolean: Boolean_,\n    Date: Date_,\n    Error: Error_,\n    FiniteNumber: FiniteNumber,\n    Function: def('Function', {}, [Array_(Type), Type], Function_),\n    GlobalRegExp: GlobalRegExp,\n    Integer: Integer,\n    NegativeFiniteNumber: NegativeFiniteNumber,\n    NegativeInteger: NegativeInteger,\n    NegativeNumber: NegativeNumber,\n    NonEmpty: NonEmpty,\n    NonGlobalRegExp: NonGlobalRegExp,\n    NonNegativeInteger: NonNegativeInteger,\n    NonZeroFiniteNumber: NonZeroFiniteNumber,\n    NonZeroInteger: NonZeroInteger,\n    NonZeroValidNumber: NonZeroValidNumber,\n    Null: Null,\n    Nullable: fromUncheckedUnaryType(Nullable),\n    Number: Number_,\n    Object: Object_,\n    Pair: fromUncheckedBinaryType(Pair),\n    PositiveFiniteNumber: PositiveFiniteNumber,\n    PositiveInteger: PositiveInteger,\n    PositiveNumber: PositiveNumber,\n    RegExp: RegExp_,\n    RegexFlags: RegexFlags,\n    StrMap: fromUncheckedUnaryType(StrMap),\n    String: String_,\n    Symbol: Symbol_,\n    Type: Type,\n    TypeClass: TypeClass,\n    Undefined: Undefined,\n    Unknown: Unknown,\n    ValidDate: ValidDate,\n    ValidNumber: ValidNumber,\n    env: env,\n    create: create,\n    test: def('test', {}, [Array_(Type), Type, Any, Boolean_], test),\n    NullaryType: CheckedNullaryType,\n    UnaryType: CheckedUnaryType,\n    BinaryType: CheckedBinaryType,\n    EnumType: CheckedEnumType,\n    RecordType: CheckedRecordType,\n    TypeVariable: CheckedTypeVariable,\n    UnaryTypeVariable: CheckedUnaryTypeVariable,\n    BinaryTypeVariable: CheckedBinaryTypeVariable,\n    Thunk: Thunk,\n    Predicate: Predicate\n  };\n\n}));\n\n//. [FL:Semigroup]:         https://github.com/fantasyland/fantasy-land#semigroup\n//. [Monoid]:               https://github.com/fantasyland/fantasy-land#monoid\n//. [Setoid]:               https://github.com/fantasyland/fantasy-land#setoid\n//. [`Array`]:              #Array\n//. [`BinaryType`]:         #BinaryType\n//. [`Date`]:               #Date\n//. [`FiniteNumber`]:       #FiniteNumber\n//. [`GlobalRegExp`]:       #GlobalRegExp\n//. [`Integer`]:            #Integer\n//. [`NonGlobalRegExp`]:    #NonGlobalRegExp\n//. [`Number`]:             #Number\n//. [`Object.create`]:      https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n//. [`Pair`]:               #Pair\n//. [`RegExp`]:             #RegExp\n//. [`RegexFlags`]:         #RegexFlags\n//. [`String`]:             #String\n//. [`SyntaxError`]:        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\n//. [`TypeClass`]:          https://github.com/sanctuary-js/sanctuary-type-classes#TypeClass\n//. [`TypeError`]:          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\n//. [`TypeVariable`]:       #TypeVariable\n//. [`UnaryType`]:          #UnaryType\n//. [`UnaryTypeVariable`]:  #UnaryTypeVariable\n//. [`Unknown`]:            #Unknown\n//. [`ValidNumber`]:        #ValidNumber\n//. [`env`]:                #env\n//. [arguments]:            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n//. [enumerated types]:     https://en.wikipedia.org/wiki/Enumerated_type\n//. [max]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n//. [min]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\n//. [record type]:          #RecordType\n//. [semigroup]:            https://en.wikipedia.org/wiki/Semigroup\n//. [type class]:           #type-classes\n//. [type variables]:       #TypeVariable\n//. [types]:                #types\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sanctuary-def/index.js\n// module id = 155\n// module chunks = 0","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sanctuary-type-classes/node_modules/sanctuary-type-identifiers/index.js\n// module id = 156\n// module chunks = 0","export * from \"./Screen-Event\";\nexport * from \"./Screen-Utils\";\nexport * from \"./Screen-Serialize\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/screen/Screen.ts","import { ScreenEventData} from './Screen-Event';\nimport {Camera, unprojectFromCamera} from \"../../camera/Camera\";\nimport {NumberArray} from \"../../array/Array\";\nimport {vec3} from \"gl-matrix\";\nimport {createVec3} from \"../../vector/Vector\";\n\nexport const getScreenSize = ():ScreenEventData => ({\n    width: window.innerWidth,\n    height: window.innerHeight\n});\n\n//Not tested so much\nexport const screenToWorldPoint = (stageSize:{width:number, height:number}) => (camera:Camera) => ({x,y}:{x: number, y:number}):NumberArray => {\n    /*const worldPointOrtho = NumberArray.from([\n        x,\n        stageSize.height - y,\n        0\n    ]);\n*/\n    // Project it by camera to get clip space\n    const worldPoint = vec3.transformMat4(createVec3() as any, [x,y,0] as any, camera.matrix as any) as any;\n\n    //Unproject it to then get real world space by camera view\n    return unprojectFromCamera (camera) (worldPoint);\n}\n\n//partially applied, last param is {x,y}\nexport const screenEventToWorldPoint = (evtData:ScreenEventData) =>\n    screenToWorldPoint(evtData) (evtData as Camera);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/screen/Screen-Utils.ts","import * as R from 'ramda';\n\nimport { Maybe, S } from '../../../external/sanctuary/Sanctuary';\nimport { InputEvent, InputEventSchedule, InputSender } from '../Input-Event';\nimport { getPointerCoordsFromDomElement } from '../Input-Utils';\n\n\nexport const PointerSourceId = \"pointer\";\n\nexport type PointerEventValidator = (data: PointerEventData) => boolean;\n\nexport enum PointerEventStatus {\n    START = 1,\n    MOVE = 2,\n    END = 3,\n    UNKNOWN = 4\n}\n\nexport interface PointerEventData {\n    status: PointerEventStatus,\n    x:number;\n    y:number;\n};\n\nexport interface PointerEventOptions {\n    domElement: HTMLElement;\n    hasPointer:boolean;\n    status:PointerEventStatus;\n    validate?: (evt: PointerEventData) => boolean;\n    schedule?:InputEventSchedule;\n    \n}\n\nexport const getTriggersFromOptions = (opts:PointerEventOptions):Array<string> => {\n    switch(opts.status) {\n        case PointerEventStatus.START:\n            return opts.hasPointer\n                ?   [\"pointerdown\"]\n                :   [\"mousedown\", \"touchstart\"]\n        case PointerEventStatus.MOVE:\n            return opts.hasPointer\n                ?   [\"pointermove\"]\n                :   [\"mousemove\", \"touchmove\"]\n        case PointerEventStatus.END:\n            return opts.hasPointer\n                ?   [\"pointerup\"]\n                :   [\"mouseup\", \"touchend\"]\n    }\n\n    return []\n}\n\nexport const normalizePointerOptions = (opts?:PointerEventOptions):PointerEventOptions => {\n\n    if(opts === undefined) {\n        opts = {} as PointerEventOptions;\n    }\n\n    return opts;\n}\n\nexport const pointerEventDataMaker = (opts: PointerEventOptions) => {\n    const getCoords = getPointerCoordsFromDomElement(opts.domElement);\n\n    return (evt: MouseEvent): Maybe<PointerEventData> => {\n        let result = S.Nothing;\n\n        const { x, y } = getCoords(evt);\n\n        const data: PointerEventData = {\n            status: opts.status,\n            x: x,\n            y: y,\n        };\n\n        result =\n            (!R.isNil(opts.validate) && !opts.validate(data))\n                ? S.Nothing\n                : S.Just(data);\n\n        //console.log(result);\n        return result;\n    }\n}\n\nexport const pointerEventMaker = (opts: PointerEventOptions) => {\n    const dataMaker = pointerEventDataMaker(opts);\n\n    return (evt: MouseEvent): Maybe<InputEvent> => {\n        const result = \n            evt.defaultPrevented\n                ?   S.Nothing\n                :   S.map((data:PointerEventData) => ({\n                        sourceId: PointerSourceId,\n                        schedule: opts.schedule,\n                        data: data,\n                        ts: evt.timeStamp\n                    }))\n                    (dataMaker(evt))\n\n        evt.preventDefault();\n\n        return result;\n    }\n}\n\nexport const startPointer = (_opts?: PointerEventOptions) => (send:InputSender) => {\n    const opts = normalizePointerOptions(_opts);\n    const makeEvent = pointerEventMaker(opts);\n\n    const sendEvent = evt => S.map(send) (makeEvent(evt));\n\n    getTriggersFromOptions(opts).forEach(trigger => {\n        opts.domElement.addEventListener(trigger, sendEvent, false);\n    });\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/pointer/Pointer-Event.ts","import { LoaderImage, LoaderImageRequest, LoaderImageCallback, LoaderImageResponse } from './Loaders-Image';\nimport { LoaderTexture, LoaderTextureRequest, LoaderTextureCallback, LoaderTextureResponse } from './Loaders-Texture';\nimport { LoaderXhr, LoaderXhrRequest, LoaderXhrCallback, LoaderXhrResponse } from './Loaders-Xhr';\n\nexport * from \"./Loaders-Image\";\nexport * from \"./Loaders-Xhr\";\nexport * from \"./Loaders-Texture\";\n\n//Sodium wrappers around loaders/*\nexport type LoaderRequestAny = Partial<LoaderXhrRequest> | Partial<LoaderImageRequest> | Partial<LoaderTextureRequest>;\nexport type LoaderResponseAny = LoaderXhrResponse | LoaderImageResponse | LoaderTextureResponse;\nexport type LoaderCallbackAny = LoaderXhrCallback | LoaderImageCallback | LoaderTextureCallback;\nexport type LoaderAny = LoaderXhr | LoaderImage | LoaderTexture;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/loaders/Loaders.ts","import {sameOrigin} from \"../headers/Headers-Cors\";\nimport * as R from \"ramda\";\nimport {S, Maybe, Either} from \"../../external/sanctuary/Sanctuary\";\n\nconst DOMURL = window.URL || (window as any).webkitURL || window;\n\nexport const LOADER_TYPE_IMAGE = \"image\";\n\nexport enum LoaderImageType {\n    URL = \"url\",\n}\n\nexport interface LoaderImageRequest {\n    url: string;\n    __loaderType:string;\n}\n\nexport interface LoaderImageResponse {\n    img?: HTMLImageElement;\n    errorEvt?:Event;\n    __loaderType:string;\n}\n\n\n//Nothing means it's loading, Left/Right means error/success\nexport type LoaderImageStatus = Maybe<LoaderImageResponse> | Either<LoaderImageResponse>;\n\nexport type LoaderImageCallback = (resp:Either<LoaderImageResponse>) => void;\n\n//this class is expected to be polled (or callback)\n//use loadImage for Promise style\nexport class LoaderImage {\n    private _status: Either<LoaderImageResponse>;\n    public __loaderType = LOADER_TYPE_IMAGE;\n    \n    constructor(_req:Partial<LoaderImageRequest>, callbackAfterLoad?:LoaderImageCallback) {\n        const req = {\n            ..._req,\n            __loaderType: LOADER_TYPE_IMAGE\n        }\n        const img = new Image();\n\n        \n        img.addEventListener(\"load\", evt => {\n            this._status = S.Right({\n                img: img,\n                __loaderType: LOADER_TYPE_IMAGE\n            });\n\n            if(callbackAfterLoad !== undefined) {\n                callbackAfterLoad(this._status);\n            }\n        });\n\n        img.addEventListener(\"error\", evt => {\n            console.error(evt);\n            this._status = S.Left({\n                errorEvt: evt\n            })\n        });\n\n        if(!sameOrigin(req.url)) {\n            img.crossOrigin = \"anonymous\";\n        }\n        img.src = req.url;\n        \n        \n    }\n\n    public get status():LoaderImageStatus {\n        return R.isNil(this._status)\n            ? S.Nothing\n            : this._status\n    }\n}\n\nexport const loadImagePromise = (_req:Partial<LoaderImageRequest>):Promise<Either<LoaderImageResponse>> =>\n    new Promise<Either<LoaderImageResponse>>(resolve => new LoaderImage(_req, resolve));\n\nexport const loadImageFactory = (req:Partial<LoaderImageRequest>, callback?:LoaderImageCallback):LoaderImage => new LoaderImage(req, callback)\n\nexport const isLoaderImage = (arg:any): arg is LoaderImage => \n    arg.__loaderType === LOADER_TYPE_IMAGE;\n    \n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/loaders/Loaders-Image.ts","import { Either, Maybe, S } from '../../external/sanctuary/Sanctuary';\nimport { isPowerOf2 } from '../math/Math';\n\nexport interface WebGlTextureOptions {\n    gl:WebGLRenderingContext;\n    alpha?: boolean;\n    useMips?: boolean; \n    noFlip?:boolean;\n}\n\nexport const createSimpleTextureFromTarget = (opts:WebGlTextureOptions) => (target: HTMLImageElement | HTMLCanvasElement): WebGLTexture => {\n    const {gl} = opts;\n    const format = opts.alpha ? gl.RGBA : gl.RGB;\n    const texture = gl.createTexture();\n    \n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if(opts.noFlip !== true) {\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    }\n    \n\n    //https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\n    if (isPowerOf2(target.width) && isPowerOf2(target.height) && opts.useMips === true) {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, format, format, gl.UNSIGNED_BYTE, target);\n    return texture;\n}\n\nexport const switchTexture = (gl:WebGLRenderingContext) => (texture:WebGLTexture) => (slot:number) => {\n    gl.activeTexture(slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/webgl/WebGl-Textures.ts","export * from \"./PowerOfTwo\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/math/Math.ts","export * from \"./Quat-Create\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/quat/Quat.ts","import * as L from \"partial.lenses\";\nimport { PROPS, CHILDREN } from \"./State-Accessors\";\nimport { StateElement, StateElementLens } from \"./State-Elements\";\nimport { NumberArray } from \"../array/Array\";\nimport { createMat4 } from \"../matrix/Matrix\";\n\nimport {\n  transformVectorSpace,\n  getTransformPosition,\n  getTransformScale,\n  getTransformRotation,\n  getTransformOrigin,\n  transformVectorInvertedSpace,\n  zeroPoint,\n  createLocalSpace,\n  createLocalSpaceImpure,\n  Transform,\n  createLocalTransform\n} from \"../transform/Transform\";\nimport { mat4, quat } from \"gl-matrix\";\n\nimport * as R from \"ramda\";\nimport { S } from \"../../external/sanctuary/Sanctuary\";\n\n//on the element itself\nexport const lTransform = L.compose([PROPS, \"transform\"]);\n\n//these are on the transform props object\nexport const lLocalSpace = L.compose([lTransform, \"localSpace\"]);\nexport const lWorldSpace = L.compose([lTransform, \"worldSpace\"]);\nexport const lParentWorldSpace = L.compose([lTransform, \"parentWorldSpace\"]);\nexport const lPosX = L.compose([lTransform, \"posX\"]);\nexport const lPosY = L.compose([lTransform, \"posY\"]);\nexport const lPosZ = L.compose([lTransform, \"posZ\"]);\n\nexport const lOriginX = L.compose([lTransform, \"originX\"]);\nexport const lOriginY = L.compose([lTransform, \"originY\"]);\nexport const lOriginZ = L.compose([lTransform, \"originZ\"]);\n\nexport const lScaleX = L.compose([lTransform, \"scaleX\"]);\nexport const lScaleY = L.compose([lTransform, \"scaleY\"]);\nexport const lScaleZ = L.compose([lTransform, \"scaleZ\"]);\n\nexport const lRotX = L.compose([lTransform, \"rotX\"]);\nexport const lRotY = L.compose([lTransform, \"rotY\"]);\nexport const lRotZ = L.compose([lTransform, \"rotZ\"]);\nexport const lRotW = L.compose([lTransform, \"rotW\"]);\n\n\nexport const getStateTransformPosition = (el: StateElement): NumberArray =>\n  getTransformPosition(L.get(lTransform)(el));\n\nexport const getStateTransformOrigin = (el: StateElement): NumberArray =>\n  getTransformOrigin(L.get(lTransform)(el));\n\nexport const getStateTransformScale = (el: StateElement): NumberArray =>\n  getTransformScale(L.get(lTransform)(el));\n\nexport const getStateTransformRotation = (el: StateElement): NumberArray =>\n  getTransformRotation(L.get(lTransform)(el));\n\n\nexport const getStateTransformLocalPointToWorld = (v: NumberArray) => (el: StateElement): NumberArray =>\n  transformVectorSpace(v)(L.get(lWorldSpace)(el));\n\nexport const getStateTransformLocalParentPointToWorld = (v: NumberArray) => (el: StateElement): NumberArray =>\n  transformVectorSpace(v)(L.get(lParentWorldSpace)(el));\n\nexport const getStateTransformWorldPointToLocal = (v: NumberArray) => (el: StateElement): NumberArray =>\n  transformVectorInvertedSpace(v)(L.get(lWorldSpace)(el));\n\nexport const getStateTransformWorldPointToLocalParent = (v: NumberArray) => (el: StateElement): NumberArray =>\n  transformVectorInvertedSpace(v)(L.get(lParentWorldSpace)(el));\n\nexport const getStateTransformPositionInWorldFromElement = (el: StateElement) =>\n  getStateTransformLocalPointToWorld(zeroPoint as NumberArray)(el);\n\nexport const getStateCenterPositionInWorldElement = (el: StateElement) =>\n  getStateTransformLocalPointToWorld(getStateTransformOrigin(el))(el);\n\nexport const updateStateWorldTransforms = (subState: StateElement): StateElement => {\n  const _update = (parentWorldSpace: NumberArray) => (lens: StateElementLens) => (elTree: StateElement) => {\n\n    if (L.isDefined(L.compose([lens, lTransform]))(elTree)) {\n\n      const localSpace = L.get(L.compose([lens, lLocalSpace]))(elTree);\n      const worldSpace = mat4.multiply(createMat4() as any, parentWorldSpace as any, localSpace as any) as any;\n\n      elTree = S.pipe([\n        L.set(L.compose([lens, lWorldSpace]))(worldSpace),\n        L.set(L.compose([lens, lParentWorldSpace]))(parentWorldSpace),\n      ])(elTree);\n\n      parentWorldSpace = worldSpace as any;\n    }\n\n    const children = L.get(L.compose([lens, CHILDREN]))(elTree);\n\n    if (!R.isNil(children)) {\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          elTree = _update(parentWorldSpace)(lens.concat([CHILDREN, i]))(elTree)\n        }\n      } else {\n        elTree = _update(parentWorldSpace)(lens.concat([CHILDREN]))(elTree)\n      }\n    }\n\n    return elTree;\n  }\n\n  const initialParentWorldSpace =\n    L.isDefined(lParentWorldSpace)(subState)\n      ? L.get(lParentWorldSpace)(subState)\n      : createMat4()\n\n  return _update(initialParentWorldSpace)([])(subState);\n}\n\n\n\nexport const updateStateElementWorldTransforms = elementLens =>\n  S.pipe([\n    _state =>\n      L.set\n        (L.compose([elementLens, lLocalSpace]))\n        (createLocalSpace\n          (L.get(L.compose([elementLens, lTransform]))(_state))\n        )\n        (_state),\n    _state =>\n      L.set\n        (elementLens)\n        (updateStateWorldTransforms(L.get(elementLens)(_state)))\n        (_state)\n  ]);\n\nexport const getStateElementClipSpaceImpure = (target: NumberArray) => (cameraMatrix: NumberArray) => (el: StateElement) =>\n  mat4.multiply(target as any, cameraMatrix as any, L.get(lWorldSpace)(el));\n\nexport const getStateElementClipSpace = (cameraMatrix: NumberArray) => (el: StateElement) =>\n  mat4.multiply(createMat4() as any, cameraMatrix as any, L.get(lWorldSpace)(el));\n\n//faster - but impure\nexport const impureUpdateStateWorldTransforms = (subState: StateElement) => {\n  const _update = (parentWorldSpace: NumberArray) => (lens: StateElementLens) => (elTree: StateElement) => {\n\n    if (L.isDefined(L.compose([lens, lTransform]))(elTree)) {\n      const _localSpace = L.get(L.compose([lens, lLocalSpace]))(elTree);\n      const _worldSpace = L.get(L.compose([lens, lWorldSpace]))(elTree);\n      const _parentWorldSpace = L.get(L.compose([lens, lParentWorldSpace]))(elTree);\n\n      mat4.multiply(_worldSpace, parentWorldSpace as any, _localSpace as any) as any;\n      mat4.copy(_parentWorldSpace, parentWorldSpace as any);\n      parentWorldSpace = _worldSpace as any;\n    }\n\n    const children = L.get(L.compose([lens, CHILDREN]))(elTree);\n\n    if (!R.isNil(children)) {\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          _update(parentWorldSpace)(lens.concat([CHILDREN, i]))(elTree)\n        }\n      } else {\n        _update(parentWorldSpace)(lens.concat([CHILDREN]))(elTree)\n      }\n    }\n\n  }\n}\n\nexport const impureUpdateStateElementWorldTransforms = elementLens => (state: StateElement): StateElement => {\n  const transformProps = L.get(L.compose([elementLens, lTransform]))(state);\n\n  createLocalSpaceImpure(transformProps.localSpace)(transformProps);\n\n  impureUpdateStateWorldTransforms(L.get(elementLens)(state));\n\n  return state;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State-Transform.ts","import * as R from \"ramda\";\nimport {S, Maybe} from \"../../external/sanctuary/Sanctuary\";\nimport * as L from \"partial.lenses\";\n\nexport interface StateElement {\n    type: string,\n    props: any,\n    children: any;\n    isChildText:boolean;\n}\n\nexport type StateElementLens = Array<string | number>;\n\nexport function createElement(type:string, props:any, children:any):StateElement {\n    //from https://github.com/facebook/react/blob/45c1ff348e1c7d03567f5bba6cb32cffa9222972/packages/react/src/ReactElement.js\n    let childrenLength = arguments.length - 2;\n    if (childrenLength > 1) {\n      let childArray = Array(childrenLength);\n      for (let i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 2];\n      }\n      children = childArray;\n    }\n\n    const isValid = !R.isNil(children);\n    const isChildArray = isValid && Array.isArray(children);\n    const isChildText = isValid && !isChildArray && !R.has(\"type\") (children);\n    \n   \n\n    if(R.isEmpty(props)) {\n        props = null;\n    }\n\n    const retObj:StateElement = {\n        type: type, \n        props: props,\n        children: \n        !isValid\n            ? null \n            : isChildArray \n                ? children\n                : [children],\n        isChildText: isChildText\n    }\n\n    return retObj;\n}\n\n//Adjustments that require more than simply L.get/L.set\nexport const appendElement = parentLens => props => (elTree:StateElement) => \n    L.set(L.compose([parentLens, \"children\", L.append])) (props) (elTree);\n\n//second arg is the props\nexport const maybePropsToElement = (fn:((props:any) => StateElement)) => S.pipe([\n    S.maybeToNullable,\n    props => props === null \n        ? null\n        : fn(props)\n])\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State-Elements.ts","import * as R from 'ramda';\n\nimport { NumberArray } from '../array/Array';\nimport { rgbFromColorIndex } from '../color/Color';\nimport { createMat4, matrixMultiply } from '../matrix/Matrix';\nimport {Transform} from \"../transform/Transform\";\nimport {\n    createWebGlBufferSwitcher,\n    createWebGlShaderSwitcher,\n    makeFramebufferPicker,\n    switchTexture,\n    WebGlBufferSwitcher,\n    WebGlFramebufferPicker,\n    WebGlShaderSwitcher,\n} from '../webgl/WebGl';\n\nexport type WebGlElement = Partial<{\n    rendererId:string;\n    interactive:boolean;\n    clipSpace: Float32Array;\n    transform:Transform;\n    visible: boolean;\n    \n    //only used here if picker and interactive\n    id:number; \n    hitColor: Float32Array;\n}>\n\nexport const setWebGlElementClipSpace = (cameraMatrix:NumberArray) => (element:WebGlElement):WebGlElement => \n    ({\n        ...element,\n        clipSpace: Float32Array.from(matrixMultiply (cameraMatrix) (element.transform.worldSpace))\n    })\n\nexport interface WebGlRendererConfig {\n    elementRenderers: Map<string, WebGlElementRenderer>;\n    canvasElement:HTMLCanvasElement;\n    clearBits:number; //gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT\n    clearColor:NumberArray;\n    picker:boolean;\n}\n\nexport type WebGlElementRenderer = (renderer:WebGlRenderer) => (item: WebGlElement) => void;\n\nexport interface WebGlRenderer {\n    render: (elements:Array<WebGlElement>) => void;\n    resize: ({ width, height }: { width: number, height: number }) => void;\n    canvas: HTMLCanvasElement;\n    gl: WebGLRenderingContext;\n    shaders: WebGlShaderSwitcher;\n    buffers: WebGlBufferSwitcher;\n    getPicker: () => WebGlFramebufferPicker;\n    colorHitMap: Map<number, number>;\n    switchTexture: (texture: WebGLTexture) => (slot: number) => void;\n    allocateId: () => number;\n}\n\nexport const createWebGlRenderer = (config:WebGlRendererConfig): WebGlRenderer => {\n    const canvas = config.canvasElement;\n    //alpha false here only means the backbuffer. see https://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html\n    const gl = (canvas.getContext(\"webgl\", { alpha: false }) as WebGLRenderingContext) || (canvas.getContext(\"experimental-webgl\", { alpha: false }) as WebGLRenderingContext);\n    const lastScreenSize = {\n        width: NaN,\n        height: NaN\n    }\n\n    const colorHitMap = new Map<number, number>();\n    const shaders = createWebGlShaderSwitcher(gl);\n    const buffers = createWebGlBufferSwitcher(gl);\n    const worldIdentity = createMat4();\n    const elementRenderers = new Map<string, (item: WebGlElement) => void>();\n\n    let idGenerator = 1;\n    let picker: WebGlFramebufferPicker; //gets reset on screen size\n\n\n    const render = (elements:Array<WebGlElement>) => {\n        //Clear the webgl buffers\n        gl.clear(config.clearBits);\n        if (config.picker && picker !== undefined) {\n            picker.clear(config.clearBits);\n        }\n\n        //clear the hitmap\n        colorHitMap.clear();\n        let colorIndex = 0;\n\n        const addRenderPropsToElement = (element: WebGlElement): WebGlElement => {\n            const ret = Object.assign({}, element) as WebGlElement;\n\n            if (config.picker && element.interactive) {\n                colorIndex++;\n                const color = rgbFromColorIndex(colorIndex);\n                colorHitMap.set(colorIndex, element.id);\n                ret.hitColor = Float32Array.from([color[0], color[1], color[2], 1.0]);\n            }\n\n            return ret;\n        }\n\n        //Flush the renderer with current state and additional prop mapper\n        elements\n            .filter(element => element.rendererId && element.visible && element.clipSpace)\n            .map((element: WebGlElement): WebGlElement => {\n                //Add hit color if relevant\n                if (config.picker && element.interactive) {\n                    colorIndex++;\n                    const color = rgbFromColorIndex(colorIndex);\n                    colorHitMap.set(colorIndex, element.id);\n                    return Object.assign({}, element, {\n                        hitColor: Float32Array.from([color[0], color[1], color[2], 1.0])\n                    });\n                }\n                return element;\n            })\n            .forEach(element => elementRenderers.get(element.rendererId) (element));\n    }\n\n    const resize = ({ width, height }: { width: number, height: number }) => {\n\n        if (lastScreenSize.width !== width || lastScreenSize.height !== height) {\n\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            if(config.picker) {\n                if (picker !== undefined) {\n                    picker.dispose();\n                }\n                picker = makeFramebufferPicker(gl)({ width: gl.drawingBufferWidth, height: gl.drawingBufferHeight });\n            }\n\n            lastScreenSize.width = width;\n            lastScreenSize.height = height;\n        }\n    }\n\n    //first-time initial gl setup\n    gl.clearColor(config.clearColor[0], config.clearColor[1], config.clearColor[2], config.clearColor[3]);\n    /*\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    */\n\n    const renderer = {\n        render: render,\n        resize: resize,\n        canvas: canvas,\n        gl: gl,\n        shaders: shaders,\n        buffers: buffers,\n        switchTexture: switchTexture(gl),\n        colorHitMap: colorHitMap,\n        getPicker: () => picker,\n        allocateId: () => {\n            idGenerator++;\n            return idGenerator;\n        }\n    }\n\n    config.elementRenderers.forEach((v,k) => elementRenderers.set(k, v(renderer)))\n    return renderer;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/renderer/Renderer-WebGl.ts","export * from \"./WebGl-FrameBuffer-Picker\";\nexport * from \"./WebGl-Constants\";\nexport * from \"./WebGl-DataBuffers\";\nexport * from \"./WebGl-Textures\";\nexport * from \"./WebGl-Shaders\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/webgl/WebGl.ts","import { Cell, Stream } from 'sodiumjs';\n\nimport { S } from '../../../external/sanctuary/Sanctuary';\n\nexport type SodiumStagedUpdateValidator = (evtData: any) => boolean;\n\n\n//`A` must be Maybe<any>\n//Typescript doesn't yet support typing this exactly, yet\nexport interface SodiumStagedUpdateOptions<A,B,C,D,E,F> {\n    sInit: Stream<B>;\n    mapInit: (evtData: B) => (target: A) => E;\n\n    sUpdate: Stream<C>;\n    mapUpdate: (evtData: C) => ([target, initData]:[A,E]) => F;\n\n    sCommit: Stream<D>;\n    mapCommit: (evtData: D) => ([target, initData, updateData]:[A,E,F]) => A;\n    \n    sEnd: Stream<any>;\n}\n\nexport const sodiumStagedUpdater = <A,B,C,D,E,F>(opts: SodiumStagedUpdateOptions<A,B,C,D,E,F>) => (validator: SodiumStagedUpdateValidator) => (cTarget: Cell<A>):Cell<A> => { \n    const cInit =\n        opts.sInit\n            .snapshot(cTarget, (evtData, fTarget) => \n                validator(evtData)\n                    ?   S.map(target => \n                            [target, opts.mapInit(evtData) (target)]\n                        )\n                        (fTarget)\n\n                    :   S.Nothing\n            )\n            .orElse(opts.sEnd.map(() => S.Nothing)) //This will mark the cycle as finished\n            .hold(S.Nothing);\n\n    const cHasInit = cInit.map(S.isJust) as Cell<boolean>;\n\n    const cUpdate =\n        opts.sUpdate\n            .gate(cHasInit) //if it hasn't inited, don't even propogate\n            .snapshot(cInit, (evtData, fInit) =>\n                S.map((args) => \n                    args.concat(opts.mapUpdate(evtData) (args))\n                )\n                (fInit)\n            )\n            .orElse(opts.sCommit.map(() => S.Nothing)) //This will mark the update as completed (otherwise it's always-dirty)\n            .hold(S.Nothing)\n\n    const cHasUpdate = cUpdate.map(S.isJust) as Cell<boolean>;\n\n    const cCommit =\n        opts.sCommit\n            .gate(cHasInit) //if it hasn't inited \n            .gate(cHasUpdate) //OR updated, don't propogate\n            .snapshot(cUpdate, (evtData, fUpdate) => \n                S.map(opts.mapCommit(evtData)) (fUpdate)\n            )\n            .hold(S.Nothing);\n\n    \n    return cCommit;\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/updaters/Sodium-StagedUpdate.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar arrays = require(\"./arrays\");\nvar Dictionary_1 = require(\"./Dictionary\");\nvar Set = /** @class */ (function () {\n    /**\n     * Creates an empty set.\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStringFunction optional function used\n     * to convert elements to strings. If the elements aren't strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Set(toStringFunction) {\n        this.dictionary = new Dictionary_1.default(toStringFunction);\n    }\n    /**\n     * Returns true if this set contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this set contains the specified element,\n     * false otherwise.\n     */\n    Set.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n     * Adds the specified element to this set if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this set did not already contain the specified element.\n     */\n    Set.prototype.add = function (element) {\n        if (this.contains(element) || util.isUndefined(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.setValue(element, element);\n            return true;\n        }\n    };\n    /**\n     * Performs an intersecion between this and another set.\n     * Removes all values that are not present this set and the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.intersection = function (otherSet) {\n        var set = this;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                set.remove(element);\n            }\n            return true;\n        });\n    };\n    /**\n     * Performs a union between this and another set.\n     * Adds all values from the given set to this set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.union = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.add(element);\n            return true;\n        });\n    };\n    /**\n     * Performs a difference between this and another set.\n     * Removes from this set all the values that are present in the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.difference = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.remove(element);\n            return true;\n        });\n    };\n    /**\n     * Checks whether the given set contains all the elements in this set.\n     * @param {collections.Set} otherSet other set.\n     * @return {boolean} true if this set is a subset of the given set.\n     */\n    Set.prototype.isSubsetOf = function (otherSet) {\n        if (this.size() > otherSet.size()) {\n            return false;\n        }\n        var isSub = true;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                isSub = false;\n                return false;\n            }\n            return true;\n        });\n        return isSub;\n    };\n    /**\n     * Removes the specified element from this set if it is present.\n     * @return {boolean} true if this set contained the specified element.\n     */\n    Set.prototype.remove = function (element) {\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.remove(element);\n            return true;\n        }\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this set.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one arguments: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Set.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            return callback(v);\n        });\n    };\n    /**\n     * Returns an array containing all of the elements in this set in arbitrary order.\n     * @return {Array} an array containing all of the elements in this set.\n     */\n    Set.prototype.toArray = function () {\n        return this.dictionary.values();\n    };\n    /**\n     * Returns true if this set contains no elements.\n     * @return {boolean} true if this set contains no elements.\n     */\n    Set.prototype.isEmpty = function () {\n        return this.dictionary.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this set.\n     * @return {number} the number of elements in this set.\n     */\n    Set.prototype.size = function () {\n        return this.dictionary.size();\n    };\n    /**\n     * Removes all of the elements from this set.\n     */\n    Set.prototype.clear = function () {\n        this.dictionary.clear();\n    };\n    /*\n    * Provides a string representation for display\n    */\n    Set.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    return Set;\n}()); // end of Set\nexports.default = Set;\n//# sourceMappingURL=Set.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/Set.js\n// module id = 170\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Queue_1 = require(\"./Queue\");\n/**\n * General binary search tree implementation.\n *\n * This interface allows one to search elements using a subset of their attributes (thus the\n * tree can be used as an index for complex objects).\n * The attributes required to define an ordering in the tree must be defined in the type K.\n * Any additional attribute must be defined in the type V.\n *\n * @see BSTree\n */\nvar BSTreeKV = /** @class */ (function () {\n    /**\n     * Creates an empty binary search tree.\n     * @class <p>A binary search tree is a binary tree in which each\n     * internal node stores an element such that the elements stored in the\n     * left subtree are less than it and the elements\n     * stored in the right subtree are greater.</p>\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\n     * has the following properties:</p>\n     * <ul>\n     * <li>The left subtree of a node contains only nodes with elements less\n     * than the node's element</li>\n     * <li>The right subtree of a node contains only nodes with elements greater\n     * than the node's element</li>\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\n     * </ul>\n     * <p>If the inserted elements are custom objects a compare function must\n     * be provided at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function BSTreeKV(compareFunction) {\n        this.root = null;\n        this.compare = compareFunction || util.defaultCompare;\n        this.nElements = 0;\n    }\n    /**\n     * Adds the specified element to this tree if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this tree did not already contain the specified element.\n     */\n    BSTreeKV.prototype.add = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        if (this.insertNode(this.createNode(element)) !== null) {\n            this.nElements++;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this tree.\n     */\n    BSTreeKV.prototype.clear = function () {\n        this.root = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this tree contains no elements.\n     * @return {boolean} true if this tree contains no elements.\n     */\n    BSTreeKV.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Returns the number of elements in this tree.\n     * @return {number} the number of elements in this tree.\n     */\n    BSTreeKV.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this tree contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this tree contains the specified element,\n     * false otherwise.\n     */\n    BSTreeKV.prototype.contains = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        return this.searchNode(this.root, element) !== null;\n    };\n    /**\n     * Looks for the value with the provided search key.\n     * @param {Object} element The key to look for\n     * @return {Object} The value found or undefined if it was not found.\n     */\n    BSTreeKV.prototype.search = function (element) {\n        var ret = this.searchNode(this.root, element);\n        if (ret === null) {\n            return undefined;\n        }\n        return ret.element;\n    };\n    /**\n     * Removes the specified element from this tree if it is present.\n     * @return {boolean} true if this tree contained the specified element.\n     */\n    BSTreeKV.prototype.remove = function (element) {\n        var node = this.searchNode(this.root, element);\n        if (node === null) {\n            return false;\n        }\n        this.removeNode(node);\n        this.nElements--;\n        return true;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * in-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.inorderTraversal = function (callback) {\n        this.inorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in pre-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.preorderTraversal = function (callback) {\n        this.preorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in post-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.postorderTraversal = function (callback) {\n        this.postorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * level-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.levelTraversal = function (callback) {\n        this.levelTraversalAux(this.root, callback);\n    };\n    /**\n     * Returns the minimum element of this tree.\n     * @return {*} the minimum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.minimum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.minimumAux(this.root).element;\n    };\n    /**\n     * Returns the maximum element of this tree.\n     * @return {*} the maximum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.maximum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.maximumAux(this.root).element;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in inorder.\n     * Equivalent to inorderTraversal.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    BSTreeKV.prototype.forEach = function (callback) {\n        this.inorderTraversal(callback);\n    };\n    /**\n     * Returns an array containing all of the elements in this tree in in-order.\n     * @return {Array} an array containing all of the elements in this tree in in-order.\n     */\n    BSTreeKV.prototype.toArray = function () {\n        var array = [];\n        this.inorderTraversal(function (element) {\n            array.push(element);\n            return true;\n        });\n        return array;\n    };\n    /**\n     * Returns the height of this tree.\n     * @return {number} the height of this tree or -1 if is empty.\n     */\n    BSTreeKV.prototype.height = function () {\n        return this.heightAux(this.root);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.searchNode = function (node, element) {\n        var cmp = 1;\n        while (node !== null && cmp !== 0) {\n            cmp = this.compare(element, node.element);\n            if (cmp < 0) {\n                node = node.leftCh;\n            }\n            else if (cmp > 0) {\n                node = node.rightCh;\n            }\n        }\n        return node;\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.transplant = function (n1, n2) {\n        if (n1.parent === null) {\n            this.root = n2;\n        }\n        else if (n1 === n1.parent.leftCh) {\n            n1.parent.leftCh = n2;\n        }\n        else {\n            n1.parent.rightCh = n2;\n        }\n        if (n2 !== null) {\n            n2.parent = n1.parent;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.removeNode = function (node) {\n        if (node.leftCh === null) {\n            this.transplant(node, node.rightCh);\n        }\n        else if (node.rightCh === null) {\n            this.transplant(node, node.leftCh);\n        }\n        else {\n            var y = this.minimumAux(node.rightCh);\n            if (y.parent !== node) {\n                this.transplant(y, y.rightCh);\n                y.rightCh = node.rightCh;\n                y.rightCh.parent = y;\n            }\n            this.transplant(node, y);\n            y.leftCh = node.leftCh;\n            y.leftCh.parent = y;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.inorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.levelTraversalAux = function (node, callback) {\n        var queue = new Queue_1.default();\n        if (node !== null) {\n            queue.enqueue(node);\n        }\n        node = queue.dequeue() || null;\n        while (node != null) {\n            if (callback(node.element) === false) {\n                return;\n            }\n            if (node.leftCh !== null) {\n                queue.enqueue(node.leftCh);\n            }\n            if (node.rightCh !== null) {\n                queue.enqueue(node.rightCh);\n            }\n            node = queue.dequeue() || null;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.preorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.postorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.rightCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n    };\n    BSTreeKV.prototype.minimumAux = function (node) {\n        while (node != null && node.leftCh !== null) {\n            node = node.leftCh;\n        }\n        return node;\n    };\n    BSTreeKV.prototype.maximumAux = function (node) {\n        while (node != null && node.rightCh !== null) {\n            node = node.rightCh;\n        }\n        return node;\n    };\n    /**\n      * @private\n      */\n    BSTreeKV.prototype.heightAux = function (node) {\n        if (node === null) {\n            return -1;\n        }\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\n    };\n    /*\n    * @private\n    */\n    BSTreeKV.prototype.insertNode = function (node) {\n        var parent = null;\n        var position = this.root;\n        while (position !== null) {\n            var cmp = this.compare(node.element, position.element);\n            if (cmp === 0) {\n                return null;\n            }\n            else if (cmp < 0) {\n                parent = position;\n                position = position.leftCh;\n            }\n            else {\n                parent = position;\n                position = position.rightCh;\n            }\n        }\n        node.parent = parent;\n        if (parent === null) {\n            // tree is empty\n            this.root = node;\n        }\n        else if (this.compare(node.element, parent.element) < 0) {\n            parent.leftCh = node;\n        }\n        else {\n            parent.rightCh = node;\n        }\n        return node;\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.createNode = function (element) {\n        return {\n            element: element,\n            leftCh: null,\n            rightCh: null,\n            parent: null\n        };\n    };\n    return BSTreeKV;\n}());\nexports.default = BSTreeKV;\n//# sourceMappingURL=BSTreeKV.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/BSTreeKV.js\n// module id = 171\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList_1 = require(\"./LinkedList\");\nvar Queue = /** @class */ (function () {\n    /**\n     * Creates an empty queue.\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\n     * element added to the queue will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Queue() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.enqueue = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.add = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Retrieves and removes the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.dequeue = function () {\n        if (this.list.size() !== 0) {\n            var el = this.list.first();\n            this.list.removeElementAtIndex(0);\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.peek = function () {\n        if (this.list.size() !== 0) {\n            return this.list.first();\n        }\n        return undefined;\n    };\n    /**\n     * Returns the number of elements in this queue.\n     * @return {number} the number of elements in this queue.\n     */\n    Queue.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this queue contains the specified element,\n     * false otherwise.\n     */\n    Queue.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this queue is empty.\n     * @return {boolean} true if and only if this queue contains no items; false\n     * otherwise.\n     */\n    Queue.prototype.isEmpty = function () {\n        return this.list.size() <= 0;\n    };\n    /**\n     * Removes all of the elements from this queue.\n     */\n    Queue.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * FIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Queue.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Queue;\n}()); // End of queue\nexports.default = Queue;\n//# sourceMappingURL=Queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/Queue.js\n// module id = 172\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections = require(\"./util\");\nvar arrays = require(\"./arrays\");\nvar Heap = /** @class */ (function () {\n    /**\n     * Creates an empty Heap.\n     * @class\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\n     * each node is smaller than each of its children and therefore a MinHeap\n     * This implementation uses an array to store elements.</p>\n     * <p>If the inserted elements are custom objects a compare function must be provided,\n     *  at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     *\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\n     * reverse compare function to accomplish that behavior. Example:</p>\n     *\n     * <pre>\n     * function reverseCompare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return 1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return -1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function Heap(compareFunction) {\n        /**\n         * Array used to store the elements of the heap.\n         * @type {Array.<Object>}\n         * @private\n         */\n        this.data = [];\n        this.compare = compareFunction || collections.defaultCompare;\n    }\n    /**\n     * Returns the index of the left child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the left child\n     * for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    Heap.prototype.leftChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 1;\n    };\n    /**\n     * Returns the index of the right child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the right child\n     * for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    Heap.prototype.rightChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 2;\n    };\n    /**\n     * Returns the index of the parent of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    Heap.prototype.parentIndex = function (nodeIndex) {\n        return Math.floor((nodeIndex - 1) / 2);\n    };\n    /**\n     * Returns the index of the smaller child node (if it exists).\n     * @param {number} leftChild left child index.\n     * @param {number} rightChild right child index.\n     * @return {number} the index with the minimum value or -1 if it doesn't\n     * exists.\n     * @private\n     */\n    Heap.prototype.minIndex = function (leftChild, rightChild) {\n        if (rightChild >= this.data.length) {\n            if (leftChild >= this.data.length) {\n                return -1;\n            }\n            else {\n                return leftChild;\n            }\n        }\n        else {\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\n                return leftChild;\n            }\n            else {\n                return rightChild;\n            }\n        }\n    };\n    /**\n     * Moves the node at the given index up to its proper place in the heap.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    Heap.prototype.siftUp = function (index) {\n        var parent = this.parentIndex(index);\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\n            arrays.swap(this.data, parent, index);\n            index = parent;\n            parent = this.parentIndex(index);\n        }\n    };\n    /**\n     * Moves the node at the given index down to its proper place in the heap.\n     * @param {number} nodeIndex The index of the node to move down.\n     * @private\n     */\n    Heap.prototype.siftDown = function (nodeIndex) {\n        //smaller child index\n        var min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        while (min >= 0 && this.compare(this.data[nodeIndex], this.data[min]) > 0) {\n            arrays.swap(this.data, min, nodeIndex);\n            nodeIndex = min;\n            min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        }\n    };\n    /**\n     * Retrieves but does not remove the root element of this heap.\n     * @return {*} The value at the root of the heap. Returns undefined if the\n     * heap is empty.\n     */\n    Heap.prototype.peek = function () {\n        if (this.data.length > 0) {\n            return this.data[0];\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * Adds the given element into the heap.\n     * @param {*} element the element.\n     * @return true if the element was added or fals if it is undefined.\n     */\n    Heap.prototype.add = function (element) {\n        if (collections.isUndefined(element)) {\n            return false;\n        }\n        this.data.push(element);\n        this.siftUp(this.data.length - 1);\n        return true;\n    };\n    /**\n     * Retrieves and removes the root element of this heap.\n     * @return {*} The value removed from the root of the heap. Returns\n     * undefined if the heap is empty.\n     */\n    Heap.prototype.removeRoot = function () {\n        if (this.data.length > 0) {\n            var obj = this.data[0];\n            this.data[0] = this.data[this.data.length - 1];\n            this.data.splice(this.data.length - 1, 1);\n            if (this.data.length > 0) {\n                this.siftDown(0);\n            }\n            return obj;\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if this heap contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this Heap contains the specified element, false\n     * otherwise.\n     */\n    Heap.prototype.contains = function (element) {\n        var equF = collections.compareToEquals(this.compare);\n        return arrays.contains(this.data, element, equF);\n    };\n    /**\n     * Returns the number of elements in this heap.\n     * @return {number} the number of elements in this heap.\n     */\n    Heap.prototype.size = function () {\n        return this.data.length;\n    };\n    /**\n     * Checks if this heap is empty.\n     * @return {boolean} true if and only if this heap contains no items; false\n     * otherwise.\n     */\n    Heap.prototype.isEmpty = function () {\n        return this.data.length <= 0;\n    };\n    /**\n     * Removes all of the elements from this heap.\n     */\n    Heap.prototype.clear = function () {\n        this.data.length = 0;\n    };\n    /**\n     * Executes the provided function once for each element present in this heap in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Heap.prototype.forEach = function (callback) {\n        arrays.forEach(this.data, callback);\n    };\n    return Heap;\n}());\nexports.default = Heap;\n//# sourceMappingURL=Heap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/Heap.js\n// module id = 173\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dictionary_1 = require(\"./Dictionary\");\nvar util = require(\"./util\");\nvar FactoryDictionary = /** @class */ (function (_super) {\n    __extends(FactoryDictionary, _super);\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>The default factory function should return a new object of the provided\n     * type. Example:</p>\n     * <pre>\n     * function petFactory() {\n     *  return new Pet();\n     * }\n     * </pre>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function():V=} defaultFactoryFunction function used to create a\n     * default object.\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function FactoryDictionary(defaultFactoryFunction, toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.defaultFactoryFunction = defaultFactoryFunction;\n        return _this;\n    }\n    /**\n     * Associates the specified default value with the specified key in this dictionary,\n     * if it didn't contain the key yet. If the key existed, the existing value will be used.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} defaultValue default value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or the default value,\n     * if the key didn't exist yet.\n     */\n    FactoryDictionary.prototype.setDefault = function (key, defaultValue) {\n        var currentValue = _super.prototype.getValue.call(this, key);\n        if (util.isUndefined(currentValue)) {\n            this.setValue(key, defaultValue);\n            return defaultValue;\n        }\n        return currentValue;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns a default value created by the factory passed in the constructor,\n     * if this dictionary contains no mapping for this key. The missing key will\n     * automatically be added to the dictionary.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * a default value if the map contains no mapping for this key.\n     */\n    FactoryDictionary.prototype.getValue = function (key) {\n        return this.setDefault(key, this.defaultFactoryFunction());\n    };\n    return FactoryDictionary;\n}(Dictionary_1.default));\nexports.default = FactoryDictionary;\n//# sourceMappingURL=FactoryDictionary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/FactoryDictionary.js\n// module id = 174\n// module chunks = 0","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sodiumjs/node_modules/sanctuary-type-identifiers/index.js\n// module id = 175\n// module chunks = 0","import { createQuat, createElement, createLocalTransform, getScreenSize, Transform, updateStateWorldTransforms } from '../../lib/Drift';\nimport { quat } from 'gl-matrix';\n\n\nconst QUAD_SIZE_1 = 400;\nconst QUAD_SIZE_2 = 200;\nconst QUAD_SIZE_3 = 80;\nconst QUAD_SIZE_4 = 40;\n\nconst stageSize = getScreenSize();\n\nconst createTransformProps = (t: Partial<Transform>) => (rotAngle: number) => {\n    const rot = quat.fromEuler(createQuat() as any, 0, 0, rotAngle);\n    return {\n        transform: createLocalTransform(Object.assign({}, t, {\n            rotX: rot[0],\n            rotY: rot[1],\n            rotZ: rot[2],\n            rotW: rot[3]\n        }))\n    }\n}\n\nexport const initialState = updateStateWorldTransforms(\n    <state firstDraw={true}>\n        <controller />\n        <camera >\n            <quads>\n                <quad\n                    interactive={true}\n                    {...createTransformProps({\n                        posX: (stageSize.width - QUAD_SIZE_1) / 2,\n                        posY: (stageSize.height - QUAD_SIZE_1) / 2,\n                        originX: QUAD_SIZE_1 / 2,\n                        originY: QUAD_SIZE_1 / 2\n                    })\n                        (45)\n                    }\n                    width={QUAD_SIZE_1}\n                    height={QUAD_SIZE_1}\n                    color={Float64Array.from([1.0, 0.0, 0.0, 1.0])}\n                >\n                    <quad\n                        interactive={true}\n                        {...createTransformProps({\n                            posX: 100,\n                            posY: 0,\n                            originX: QUAD_SIZE_2 / 2,\n                            originY: QUAD_SIZE_2 / 2,\n                        })\n                            (-45)\n                        }\n                        width={QUAD_SIZE_2}\n                        height={QUAD_SIZE_2}\n                        color={Float64Array.from([0.0, 1.0, 1.0, 1.0])}\n                    />\n\n                    <quad\n                        {...createTransformProps({\n                            posX: (QUAD_SIZE_1 - QUAD_SIZE_2) / 2,\n                            posY: (QUAD_SIZE_1 - QUAD_SIZE_2) / 2,\n                            originX: QUAD_SIZE_2 / 2,\n                            originY: QUAD_SIZE_2 / 2,\n                        })\n                            (45)\n                        }\n                        width={QUAD_SIZE_2}\n                        height={QUAD_SIZE_2}\n                        color={Float64Array.from([0.0, 1.0, 0.0, 1.0])}\n                    >\n                        <quad\n                            interactive={true}\n                            {...createTransformProps({\n                                posX: (QUAD_SIZE_2 - QUAD_SIZE_3) / 2,\n                                posY: (QUAD_SIZE_2 - QUAD_SIZE_3) / 2,\n                                originX: QUAD_SIZE_3 / 2,\n                                originY: QUAD_SIZE_3 / 2,\n                            })\n                                (45)\n                            }\n                            width={QUAD_SIZE_3}\n                            height={QUAD_SIZE_3}\n                            color={Float64Array.from([0.0, 0.0, 1.0, 1.0])}\n                        >\n                            <quad\n                                {...createTransformProps({\n                                    posX: 0,\n                                    posY: 0,\n                                    originX: QUAD_SIZE_4 / 2,\n                                    originY: QUAD_SIZE_4 / 2,\n                                })\n                                    (90)\n                                }\n                                width={QUAD_SIZE_4}\n                                height={QUAD_SIZE_4}\n                                color={Float64Array.from([1.0, 1.0, 0.0, 1.0])}\n                            />\n                        </quad>\n                    </quad>\n                </quad>\n            </quads>\n        </camera>\n    </state>\n)\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/app/state/State.tsx","export type NumberArray = Array<number> | Float64Array | Float32Array | Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array;\n\nexport const AssignValueFloat64 = (data:Float64Array) => (index:number) => (value:number):Float64Array => {\n    const ALLOCATE_AMOUNT = 10;\n\n    \n    if(index >= data.length) {\n        const newData = new Float64Array(data.length + ALLOCATE_AMOUNT);\n        newData.set(data);\n        data = newData;\n    }\n\n    data[index] = value;\n    return data;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/array/Array.ts","import {flatbuffers} from \"flatbuffers\";\nimport {NumberArray} from \"../array/Array\";\n\nimport {Matrix4} from \"../../flatbuffers/Matrix4_generated\";\n\nexport const SerializeMatrix4 = (builder) => (props:NumberArray): number => {\n\n    Matrix4.Values.startValues(builder);\n    Matrix4.Values.addA(builder, props[0]);\n    Matrix4.Values.addB(builder, props[1]);\n    Matrix4.Values.addC(builder, props[2]);\n    Matrix4.Values.addD(builder, props[3]);\n\n    Matrix4.Values.addE(builder, props[4]);\n    Matrix4.Values.addF(builder, props[5]);\n    Matrix4.Values.addG(builder, props[6]);\n    Matrix4.Values.addH(builder, props[7]);\n\n    Matrix4.Values.addI(builder, props[8]);\n    Matrix4.Values.addJ(builder, props[9]);\n    Matrix4.Values.addK(builder, props[10]);\n    Matrix4.Values.addL(builder, props[11]);\n\n    Matrix4.Values.addM(builder, props[12]);\n    Matrix4.Values.addN(builder, props[13]);\n    Matrix4.Values.addO(builder, props[14]);\n    Matrix4.Values.addP(builder, props[15]);\n    return Matrix4.Values.endValues(builder);\n}\n\nexport const SerializeMatrix4ToBinary = (props:NumberArray):Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeMatrix4(builder)(props));\n\n    return builder.asUint8Array();\n}\n\nexport const  ParseMatrix4 = (m:Matrix4.Values):NumberArray => [\n    m.a(),\n    m.b(),\n    m.c(),\n    m.d(),\n\n    m.e(),\n    m.f(),\n    m.g(),\n    m.h(),\n\n    m.i(),\n    m.j(),\n    m.k(),\n    m.l(),\n\n    m.m(),\n    m.n(),\n    m.o(),\n    m.p(),\n];\n\nexport const  ParseMatrix4FromBinary = (bytes:Uint8Array):NumberArray =>\nParseMatrix4(\n        Matrix4.Values\n            .getRootAsValues(new flatbuffers.ByteBuffer(bytes)));\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/matrix/Matrix-Serialize.ts","import {NumberArray} from \"../array/Array\";\nimport {mat4} from \"gl-matrix\";\nimport {createMat4} from \"./Matrix-Create\";\n\nexport const matrixMultiplyImpure = (out:NumberArray) => (dest:NumberArray) => (src:NumberArray) =>\n  mat4.multiply(out as any, dest as any, src as any);\n\nexport const matrixMultiply = (dest:NumberArray) => (src:NumberArray) =>\n  mat4.multiply(createMat4() as any, dest as any, src as any);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/matrix/Matrix-Utils.ts","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat2.js\n// module id = 180\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat2d.js\n// module id = 181\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return mat4.identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat4.js\n// module id = 182\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\"\nimport * as mat3 from \"./mat3\"\nimport * as vec3 from \"./vec3\"\nimport * as vec4 from \"./vec4\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/quat.js\n// module id = 183\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec2.js\n// module id = 184\n// module chunks = 0","import {NumberArray} from \"../array/Array\";\nimport {mat4, vec3} from \"gl-matrix\";\nimport {createMat4} from \"../matrix/Matrix\";\nimport {createVec3} from  \"../vector/Vector\";\n\n\nexport interface Camera {\n    projection: NumberArray;\n    eye: NumberArray;\n    matrix: NumberArray;\n}\n\n\n\nexport interface CameraPerspectiveOptions {\n    fov: number;\n    aspect: number;\n    near: number;\n    far: number;\n\n    origin: NumberArray;\n    dest: NumberArray;\n    up: NumberArray;\n}\n\n\n\nexport const getCameraOrthoFullscreen = ({width, height}:{width:number, height:number}):Camera => {\n    const props:Partial<Camera> = {\n        projection: mat4.ortho(createMat4() as any, 0, width, 0, height, 0, 1) as any,\n        eye: createMat4()\n    }\n\n    props.matrix = getCameraMatrixFromProps(props);\n    \n    return props as Camera;\n}\n\n\n\nexport const getCameraPerspective = (opts:CameraPerspectiveOptions):Camera => {\n    const props:Partial<Camera> = {\n        projection: mat4.perspective(createMat4() as any, opts.fov, opts.aspect, opts.near, opts.far)  as any,\n        eye: mat4.lookAt(createMat4() as any, opts.origin as any, opts.dest as any, opts.up as any)  as any\n    }\n    props.matrix = getCameraMatrixFromProps(props);\n\n    return props as Camera;\n}\n\nexport const getCameraMatrixFromProps = (props:Partial<Camera>):NumberArray =>\n    mat4.multiply(createMat4() as any, props.projection as any, props.eye as any) as any\n\n//Not really tested so much...\nexport const unprojectFromCamera = (camera:Camera) => (point:NumberArray):NumberArray => {\n    const invMatrix = \n        mat4.multiply(\n            createMat4() as any,\n            mat4.invert(createMat4() as any, camera.projection as any),\n            mat4.invert(createMat4() as any, camera.eye as any)\n        )\n\n    return vec3.transformMat4(createVec3() as any, point as any, invMatrix) as any;\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/camera/Camera-Utils.ts","import { flatbuffers } from \"flatbuffers\";\nimport { Vector3 } from \"../../flatbuffers/Vector3_generated\";\nimport { Vector4 } from \"../../flatbuffers/Vector4_generated\";\nimport { vec3, vec4 } from \"gl-matrix\";\nimport { NumberArray } from \"../array/Array\";\n\n//Vector3\nexport const SerializeVector3 = (builder) => (props: NumberArray): number => {\n\n    Vector3.Values.startValues(builder);\n    Vector3.Values.addA(builder, props[0]);\n    Vector3.Values.addB(builder, props[1]);\n    Vector3.Values.addC(builder, props[2]);\n    return Vector3.Values.endValues(builder);\n}\n\nexport const SerializeVector3ToBinary = (props: NumberArray): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeVector3(builder)(props));\n\n    return builder.asUint8Array();\n}\n\nexport const ParseVector3 = (props: Vector3.Values): NumberArray =>\n    [props.a(), props.b(), props.c()];\n\nexport const ParseVector3FromBinary = (bytes: Uint8Array): NumberArray =>\n    ParseVector3(\n        Vector3.Values\n            .getRootAsValues(new flatbuffers.ByteBuffer(bytes)));\n\n//Vector4\n\nexport const SerializeVector4 = (builder) => (props: NumberArray): number => {\n\n    Vector4.Values.startValues(builder);\n    Vector4.Values.addA(builder, props[0]);\n    Vector4.Values.addB(builder, props[1]);\n    Vector4.Values.addC(builder, props[2]);\n    Vector4.Values.addD(builder, props[3]);\n\n    return Vector4.Values.endValues(builder);\n}\n\nexport const SerializeVector4ToBinary = (props: NumberArray): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeVector4(builder)(props));\n\n    return builder.asUint8Array();\n}\n\nexport const ParseVector4 = (props: Vector4.Values): NumberArray =>\n    [props.a(), props.b(), props.c(), props.d()];\n\nexport const ParseVector4FromBinary = (bytes: Uint8Array): NumberArray =>\n    ParseVector4(\n        Vector4.Values\n            .getRootAsValues(new flatbuffers.ByteBuffer(bytes)));\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/vector/Vector-Serialize.ts","import {padLeftDigits2} from \"../string/String-Utils\";\nimport {NumberArray} from \"../array/Array\";\nimport {createMat4} from \"../matrix/Matrix\";\nimport {createVec3, createVec4} from  \"../vector/Vector\";\n\nconst paddedHexString = num => padLeftDigits2((num | 0).toString(16));\n\nexport const rgbFromColorIndex = (colorIndex:number):NumberArray =>\n    [\n        (((colorIndex) >>> 16) & 0xFF) / 0xFF,\n        (((colorIndex) >>> 8) & 0xFF) / 0xFF,\n        ((colorIndex) & 0xFF) / 0xFF\n    ]\n\nexport const rgbToColorIndex = (rgb:NumberArray):number =>\n    ((rgb[0] << 16) | (rgb[1] << 8) | rgb[2]);\n\nexport class ColorRGBA {\n    public readonly elements:NumberArray;\n\n    constructor(values?:NumberArray) {\n        this.elements = (values === undefined) ? createVec4() : values;\n    }\n\n    //static methods\n    public static fromNumber = (n:number):ColorRGBA =>\n        new ColorRGBA([\n            (((n) >>> 24) & 0xFF) / 0xFF,\n            (((n) >>> 16) & 0xFF) / 0xFF,\n            (((n) >>> 8) & 0xFF) / 0xFF,\n            ((n) & 0xFF) / 0xFF,\n        ]);\n    \n    public static fromString = (s:string):ColorRGBA =>\n        ColorRGBA.fromNumber(parseInt(s, 16));\n\n    //instance methods\n    public toString = ():string =>\n        paddedHexString(this.r * 0xFF) + paddedHexString(this.g * 0xFF) + paddedHexString(this.b * 0xFF) + paddedHexString(this.a * 0xFF);\n\n    public toNumber = ():number =>\n        parseInt(this.toString(), 16);\n\n    //getter/setters\n    public get r():number {\n        return this.elements[0];\n    }\n    public set r(val:number) {\n        this.elements[0] = val;\n    }\n\n    public get g():number {\n        return this.elements[1];\n    }\n    public set g(val:number) {\n        this.elements[1] = val;\n    }\n\n    public get b():number {\n        return this.elements[2];\n    }\n    public set b(val:number) {\n        this.elements[2] = val;\n    }\n\n    public get a():number {\n        return this.elements[3];\n    }\n    public set a(val:number) {\n        this.elements[3] = val;\n    }\n}\n\n\nexport class ColorRGB {\n    public readonly elements:NumberArray;\n\n    constructor(values?:NumberArray) {\n        this.elements = (values === undefined) ? createVec3() : values;\n    }\n\n    //static methods\n    public static fromNumber = (n:number):ColorRGB =>\n        new ColorRGB([\n            (((n) >>> 16) & 0xFF) / 0xFF,\n            (((n) >>> 8) & 0xFF) / 0xFF,\n            ((n) & 0xFF) / 0xFF,\n        ]);\n    \n    public static fromString = (s:string):ColorRGB =>\n        ColorRGB.fromNumber(parseInt(s, 16));\n\n    //instance methods\n    public toString = ():string =>\n        paddedHexString(this.r * 0xFF) + paddedHexString(this.g * 0xFF) + paddedHexString(this.b * 0xFF);\n\n    public toNumber = ():number =>\n        parseInt(this.toString(), 16);\n\n    //getter/setters\n    public get r():number {\n        return this.elements[0];\n    }\n    public set r(val:number) {\n        this.elements[0] = val;\n    }\n\n    public get g():number {\n        return this.elements[1];\n    }\n    public set g(val:number) {\n        this.elements[1] = val;\n    }\n\n    public get b():number {\n        return this.elements[2];\n    }\n    public set b(val:number) {\n        this.elements[2] = val;\n    }\n}\n\n    \n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/color/Color-Data.ts","export * from \"./Headers-Cors\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/headers/Headers.ts","import { Either, Maybe, S } from '../../external/sanctuary/Sanctuary';\nimport {PointerEventData} from \"./pointer/Pointer-Event\";\nimport {ScreenEventData} from \"./screen/Screen-Event\";\nimport {TickEventData} from \"./tick/Tick-Event\";\nimport {TickPointerEventData} from \"./tick-pointer/TickPointer-Event\";\nimport {Camera} from \"../camera/Camera\";\n\nimport {NumberArray} from \"../array/Array\";\n\nimport * as R from \"ramda\";\n\nexport interface InputEvent {\n    sourceId: string;\n    schedule?: InputEventSchedule;\n    data?: any;\n    ts?:number;\n}\n\nexport enum InputEventSchedule {\n    IMMEDIATE = \"immediate\",\n    MICROTASK = \"microtask\",\n    NEXTFRAME = \"nextFrame\"\n}\n\nexport type InputSender = (evt:InputEvent) => void;\n\nexport interface ScheduledInputSenderOptions {\n    defaultSchedule: InputEventSchedule;\n    send: InputSender;\n}\n\nexport const makeTimestampedInputSender = (send:InputSender):InputSender => (_evt:InputEvent) =>\n    send(\n        (_evt.ts === undefined)\n            ? Object.assign({}, _evt, {ts: performance.now()})\n            : _evt\n    );\n    \nexport const makeScheduledInputSender = (opts: ScheduledInputSenderOptions): InputSender => (evt: InputEvent) => {\n    if (evt.schedule === undefined) {\n        evt.schedule = opts.defaultSchedule;\n    }\n\n    switch (evt.schedule) {\n        case InputEventSchedule.IMMEDIATE:\n            opts.send(evt);\n            break;\n        case InputEventSchedule.MICROTASK:\n            Promise.resolve().then(() => opts.send(evt));\n            break;\n        case InputEventSchedule.NEXTFRAME:\n            setTimeout(() => opts.send(evt), 0);\n            break;\n    }\n}\n\n/* Useful combinations */\nexport type TickScreenEventData = TickEventData & ScreenEventData;\nexport type PointerScreenEventData = PointerEventData & ScreenEventData;\nexport type TickPointerScreenEventData = TickPointerEventData & ScreenEventData;\n\nexport interface TickWorldEventData extends TickScreenEventData {\n    worldPoint: NumberArray //in vector form since this will usually be passed to transform functions\n}\n\nexport interface PointerWorldEventData extends PointerScreenEventData {\n    worldPoint: NumberArray //in vector form since this will usually be passed to transform functions\n}\n\nexport interface TickPointerWorldEventData extends TickPointerScreenEventData {\n    worldPoint: NumberArray //in vector form since this will usually be passed to transform functions\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/Input-Event.ts","import {flatbuffers} from \"flatbuffers\";\nimport {Input} from \"../../flatbuffers/Flatbuffers\";\nimport {Serializers, Serializer} from \"../serialize/Serialize\";\nimport {InputEvent, InputEventSchedule} from \"./Input-Event\";\nimport * as R from \"ramda\";\nimport {S} from \"../../external/sanctuary/Sanctuary\";\n\nexport const serializeInputEvent = builder => (serializers:Serializers) => (evt:InputEvent):Uint8Array => {\n    const sourceIdPtr = builder.createString(evt.sourceId);\n    \n    const maybeSchedulePtr = \n        R.isNil (evt.schedule)\n        ?   S.Nothing\n        :   S.Just(builder.createString(evt.schedule));\n\n    const maybeDataPtr = \n        R.isNil (evt.data)\n        ?   S.Nothing\n        :   serializers.has(evt.sourceId)\n            ?   S.Just(Input.Event.createDataVector(builder, serializers.get(evt.sourceId).serialize (evt.data)))\n            :   S.Nothing;\n\n    Input.Event.startEvent(builder);\n    Input.Event.addSourceId(builder, sourceIdPtr);\n    Input.Event.addTs(builder, evt.ts);\n    S.map\n        (dataPtr  => Input.Event.addData(builder, dataPtr))\n        (maybeDataPtr);\n    S.map\n        (schedulePtr  => Input.Event.addSchedule(builder, schedulePtr))\n        (maybeSchedulePtr);\n    return Input.Event.endEvent(builder);\n}\n\nexport const serializeInputEventToBinary = (serializers:Serializers) => (evt:InputEvent):Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(serializeInputEvent (builder) (serializers) (evt));\n    return builder.asUint8Array();\n}\n\nexport const parseInputEvent = (serializers:Serializers) => (evt:Input.Event):InputEvent => {\n    const ret = {} as InputEvent;\n\n    ret.sourceId = evt.sourceId();\n    ret.ts = evt.ts();\n    \n    if(evt.dataLength() && serializers.has(ret.sourceId)) {\n        ret.data = serializers.get(ret.sourceId).parse(evt.dataArray())\n    }\n\n    const schedule = evt.schedule();\n    \n    if(!R.isNil(schedule)) {\n        ret.schedule = evt.schedule() as InputEventSchedule;\n    }\n    \n    return ret;\n}\n\n\nexport const parseInputEventFromBinary = (serializers:Serializers) => (bytes:Uint8Array):InputEvent =>\n    parseInputEvent(serializers) (Input.Event.getRootAsEvent(new flatbuffers.ByteBuffer(bytes)));\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/Input-Serialize.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Input{\nexport class Event {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Event}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Event {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Event=} obj\n * @returns {Event}\n */\nstatic getRootAsEvent(bb:flatbuffers.ByteBuffer, obj?:Event):Event {\n  return (obj || new Event).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param {flatbuffers.Encoding=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\nsourceId():string|null\nsourceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nsourceId(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param {flatbuffers.Encoding=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\nschedule():string|null\nschedule(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nschedule(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param {number} index\n * @returns {number}\n */\ndata(index: number):number|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;\n};\n\n/**\n * @returns {number}\n */\ndataLength():number {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns {Uint8Array}\n */\ndataArray():Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @returns {number}\n */\nts():number {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startEvent(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} sourceIdOffset\n */\nstatic addSourceId(builder:flatbuffers.Builder, sourceIdOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, sourceIdOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} scheduleOffset\n */\nstatic addSchedule(builder:flatbuffers.Builder, scheduleOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, scheduleOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} dataOffset\n */\nstatic addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, dataOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {Array.<number>} data\n * @returns {flatbuffers.Offset}\n */\nstatic createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} numElems\n */\nstatic startDataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} ts\n */\nstatic addTs(builder:flatbuffers.Builder, ts:number) {\n  builder.addFieldFloat64(3, ts, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endEvent(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishEventBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/InputEvent_generated.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\nimport * as NS13062362683108152174 from \"./Camera_generated\";\n/**\n * @constructor\n */\nexport namespace Screen{\nexport class Event {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Event}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Event {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Event=} obj\n * @returns {Event}\n */\nstatic getRootAsEvent(bb:flatbuffers.ByteBuffer, obj?:Event):Event {\n  return (obj || new Event).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\nwidth():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\nheight():number {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {Camera.Props=} obj\n * @returns {Camera.Props|null}\n */\ncamera(obj?:NS13062362683108152174.Camera.Props):NS13062362683108152174.Camera.Props|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? (obj || new NS13062362683108152174.Camera.Props).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startEvent(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} width\n */\nstatic addWidth(builder:flatbuffers.Builder, width:number) {\n  builder.addFieldFloat64(0, width, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} height\n */\nstatic addHeight(builder:flatbuffers.Builder, height:number) {\n  builder.addFieldFloat64(1, height, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} cameraOffset\n */\nstatic addCamera(builder:flatbuffers.Builder, cameraOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, cameraOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endEvent(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishEventBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/ScreenEvent_generated.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\nimport * as NS4385075382419840921 from \"./Transform_generated\";\n/**\n * @constructor\n */\nexport namespace State{\nexport class Element {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Element}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Element {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Element=} obj\n * @returns {Element}\n */\nstatic getRootAsElement(bb:flatbuffers.ByteBuffer, obj?:Element):Element {\n  return (obj || new Element).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param {flatbuffers.Encoding=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\ntypeId():string|null\ntypeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\ntypeId(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param {flatbuffers.Encoding=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\ntext():string|null\ntext(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\ntext(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param {number} index\n * @returns {number}\n */\nprops(index: number):number|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;\n};\n\n/**\n * @returns {number}\n */\npropsLength():number {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns {Uint8Array}\n */\npropsArray():Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param {number} index\n * @param {State.Element=} obj\n * @returns {State.Element}\n */\nchildren(index: number, obj?:State.Element):State.Element|null {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? (obj || new State.Element).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n};\n\n/**\n * @returns {number}\n */\nchildrenLength():number {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns {boolean}\n */\nchildIsText():boolean {\n  var offset = this.bb.__offset(this.bb_pos, 12);\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param {Transform.Props=} obj\n * @returns {Transform.Props|null}\n */\ntransform(obj?:NS4385075382419840921.Transform.Props):NS4385075382419840921.Transform.Props|null {\n  var offset = this.bb.__offset(this.bb_pos, 14);\n  return offset ? (obj || new NS4385075382419840921.Transform.Props).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startElement(builder:flatbuffers.Builder) {\n  builder.startObject(6);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} typeIdOffset\n */\nstatic addTypeId(builder:flatbuffers.Builder, typeIdOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, typeIdOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} textOffset\n */\nstatic addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, textOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} propsOffset\n */\nstatic addProps(builder:flatbuffers.Builder, propsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, propsOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {Array.<number>} data\n * @returns {flatbuffers.Offset}\n */\nstatic createPropsVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} numElems\n */\nstatic startPropsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} childrenOffset\n */\nstatic addChildren(builder:flatbuffers.Builder, childrenOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, childrenOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {Array.<flatbuffers.Offset>} data\n * @returns {flatbuffers.Offset}\n */\nstatic createChildrenVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} numElems\n */\nstatic startChildrenVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {boolean} childIsText\n */\nstatic addChildIsText(builder:flatbuffers.Builder, childIsText:boolean) {\n  builder.addFieldInt8(4, +childIsText, +false);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} transformOffset\n */\nstatic addTransform(builder:flatbuffers.Builder, transformOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, transformOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endElement(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishElementBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/State_generated.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Tick{\nexport class Event {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Event}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Event {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Event=} obj\n * @returns {Event}\n */\nstatic getRootAsEvent(bb:flatbuffers.ByteBuffer, obj?:Event):Event {\n  return (obj || new Event).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\nframeTs():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\ndt():number {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startEvent(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} frameTs\n */\nstatic addFrameTs(builder:flatbuffers.Builder, frameTs:number) {\n  builder.addFieldFloat64(0, frameTs, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} dt\n */\nstatic addDt(builder:flatbuffers.Builder, dt:number) {\n  builder.addFieldFloat64(1, dt, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endEvent(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishEventBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/TickEvent_generated.ts","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/F.js\n// module id = 195\n// module chunks = 0","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/T.js\n// module id = 196\n// module chunks = 0","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/__.js\n// module id = 197\n// module chunks = 0","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/addIndex.js\n// module id = 198\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/all.js\n// module id = 199\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xall.js\n// module id = 200\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/allPass.js\n// module id = 201\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xmap.js\n// module id = 202\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/anyPass.js\n// module id = 203\n// module chunks = 0","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/aperture.js\n// module id = 204\n// module chunks = 0","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_aperture.js\n// module id = 205\n// module chunks = 0","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xaperture.js\n// module id = 206\n// module chunks = 0","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/append.js\n// module id = 207\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/applySpec.js\n// module id = 208\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/applyTo.js\n// module id = 209\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/ascend.js\n// module id = 210\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/binary.js\n// module id = 211\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/both.js\n// module id = 212\n// module chunks = 0","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/call.js\n// module id = 213\n// module chunks = 0","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xchain.js\n// module id = 214\n// module chunks = 0","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_flatCat.js\n// module id = 215\n// module chunks = 0","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_forceReduced.js\n// module id = 216\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/clamp.js\n// module id = 217\n// module chunks = 0","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/clone.js\n// module id = 218\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/comparator.js\n// module id = 219\n// module chunks = 0","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/complement.js\n// module id = 220\n// module chunks = 0","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_pipe.js\n// module id = 221\n// module chunks = 0","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/composeP.js\n// module id = 222\n// module chunks = 0","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_pipeP.js\n// module id = 223\n// module chunks = 0","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_toString.js\n// module id = 224\n// module chunks = 0","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_equals.js\n// module id = 225\n// module chunks = 0","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_arrayFromIterator.js\n// module id = 226\n// module chunks = 0","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_functionName.js\n// module id = 227\n// module chunks = 0","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_quote.js\n// module id = 228\n// module chunks = 0","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_toISOString.js\n// module id = 229\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xfilter.js\n// module id = 230\n// module chunks = 0","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/cond.js\n// module id = 231\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/construct.js\n// module id = 232\n// module chunks = 0","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/contains.js\n// module id = 233\n// module chunks = 0","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/countBy.js\n// module id = 234\n// module chunks = 0","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xreduceBy.js\n// module id = 235\n// module chunks = 0","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dec.js\n// module id = 236\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/descend.js\n// module id = 237\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dissocPath.js\n// module id = 238\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/divide.js\n// module id = 239\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xdrop.js\n// module id = 240\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dropLast.js\n// module id = 241\n// module chunks = 0","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_dropLast.js\n// module id = 242\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xtake.js\n// module id = 243\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xdropLast.js\n// module id = 244\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dropLastWhile.js\n// module id = 245\n// module chunks = 0","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_dropLastWhile.js\n// module id = 246\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xdropLastWhile.js\n// module id = 247\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dropRepeats.js\n// module id = 248\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/dropWhile.js\n// module id = 249\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xdropWhile.js\n// module id = 250\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/either.js\n// module id = 251\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/endsWith.js\n// module id = 252\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/eqBy.js\n// module id = 253\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/eqProps.js\n// module id = 254\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/evolve.js\n// module id = 255\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/find.js\n// module id = 256\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xfind.js\n// module id = 257\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/findIndex.js\n// module id = 258\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xfindIndex.js\n// module id = 259\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/findLast.js\n// module id = 260\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xfindLast.js\n// module id = 261\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/findLastIndex.js\n// module id = 262\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xfindLastIndex.js\n// module id = 263\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/flatten.js\n// module id = 264\n// module chunks = 0","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/forEach.js\n// module id = 265\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/forEachObjIndexed.js\n// module id = 266\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/fromPairs.js\n// module id = 267\n// module chunks = 0","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/groupBy.js\n// module id = 268\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/groupWith.js\n// module id = 269\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/gt.js\n// module id = 270\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/gte.js\n// module id = 271\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/has.js\n// module id = 272\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/hasIn.js\n// module id = 273\n// module chunks = 0","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/head.js\n// module id = 274\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/ifElse.js\n// module id = 275\n// module chunks = 0","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/inc.js\n// module id = 276\n// module chunks = 0","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/indexBy.js\n// module id = 277\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/indexOf.js\n// module id = 278\n// module chunks = 0","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/init.js\n// module id = 279\n// module chunks = 0","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/innerJoin.js\n// module id = 280\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/insert.js\n// module id = 281\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/insertAll.js\n// module id = 282\n// module chunks = 0","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/intersection.js\n// module id = 283\n// module chunks = 0","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_Set.js\n// module id = 284\n// module chunks = 0","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/intersperse.js\n// module id = 285\n// module chunks = 0","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/into.js\n// module id = 286\n// module chunks = 0","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_stepCat.js\n// module id = 287\n// module chunks = 0","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_objectAssign.js\n// module id = 288\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/invert.js\n// module id = 289\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/invertObj.js\n// module id = 290\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/isEmpty.js\n// module id = 291\n// module chunks = 0","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/join.js\n// module id = 292\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/keysIn.js\n// module id = 293\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lastIndexOf.js\n// module id = 294\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lensIndex.js\n// module id = 295\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lensPath.js\n// module id = 296\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lensProp.js\n// module id = 297\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lt.js\n// module id = 298\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/lte.js\n// module id = 299\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mapAccum.js\n// module id = 300\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mapAccumRight.js\n// module id = 301\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mapObjIndexed.js\n// module id = 302\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/match.js\n// module id = 303\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mathMod.js\n// module id = 304\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/maxBy.js\n// module id = 305\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/median.js\n// module id = 306\n// module chunks = 0","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/memoize.js\n// module id = 307\n// module chunks = 0","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/merge.js\n// module id = 308\n// module chunks = 0","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeAll.js\n// module id = 309\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeDeepLeft.js\n// module id = 310\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeDeepRight.js\n// module id = 311\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeDeepWith.js\n// module id = 312\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/mergeWith.js\n// module id = 313\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/min.js\n// module id = 314\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/minBy.js\n// module id = 315\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/modulo.js\n// module id = 316\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/negate.js\n// module id = 317\n// module chunks = 0","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/none.js\n// module id = 318\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/nthArg.js\n// module id = 319\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/o.js\n// module id = 320\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/of.js\n// module id = 321\n// module chunks = 0","export default function _of(x) {\n  return [x];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_of.js\n// module id = 322\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/omit.js\n// module id = 323\n// module chunks = 0","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/once.js\n// module id = 324\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pair.js\n// module id = 325\n// module chunks = 0","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/partial.js\n// module id = 326\n// module chunks = 0","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/partialRight.js\n// module id = 327\n// module chunks = 0","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/partition.js\n// module id = 328\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pathEq.js\n// module id = 329\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pathOr.js\n// module id = 330\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pathSatisfies.js\n// module id = 331\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pick.js\n// module id = 332\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pickBy.js\n// module id = 333\n// module chunks = 0","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/pipeK.js\n// module id = 334\n// module chunks = 0","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/product.js\n// module id = 335\n// module chunks = 0","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/project.js\n// module id = 336\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/propEq.js\n// module id = 337\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/propIs.js\n// module id = 338\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/propOr.js\n// module id = 339\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/propSatisfies.js\n// module id = 340\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/props.js\n// module id = 341\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/range.js\n// module id = 342\n// module chunks = 0","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reduceWhile.js\n// module id = 343\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/reduced.js\n// module id = 344\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/repeat.js\n// module id = 345\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/replace.js\n// module id = 346\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/scan.js\n// module id = 347\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/set.js\n// module id = 348\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/sort.js\n// module id = 349\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/sortBy.js\n// module id = 350\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/sortWith.js\n// module id = 351\n// module chunks = 0","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/split.js\n// module id = 352\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/splitAt.js\n// module id = 353\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/splitEvery.js\n// module id = 354\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/splitWhen.js\n// module id = 355\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/startsWith.js\n// module id = 356\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/subtract.js\n// module id = 357\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/symmetricDifference.js\n// module id = 358\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/symmetricDifferenceWith.js\n// module id = 359\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/takeLastWhile.js\n// module id = 360\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/takeWhile.js\n// module id = 361\n// module chunks = 0","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xtakeWhile.js\n// module id = 362\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/tap.js\n// module id = 363\n// module chunks = 0","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_xtap.js\n// module id = 364\n// module chunks = 0","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/test.js\n// module id = 365\n// module chunks = 0","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/internal/_isRegExp.js\n// module id = 366\n// module chunks = 0","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/toLower.js\n// module id = 367\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/toPairs.js\n// module id = 368\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/toPairsIn.js\n// module id = 369\n// module chunks = 0","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/toUpper.js\n// module id = 370\n// module chunks = 0","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/transduce.js\n// module id = 371\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/transpose.js\n// module id = 372\n// module chunks = 0","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/traverse.js\n// module id = 373\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/trim.js\n// module id = 374\n// module chunks = 0","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/tryCatch.js\n// module id = 375\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/unapply.js\n// module id = 376\n// module chunks = 0","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/unary.js\n// module id = 377\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/uncurryN.js\n// module id = 378\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/unfold.js\n// module id = 379\n// module chunks = 0","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/union.js\n// module id = 380\n// module chunks = 0","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/unionWith.js\n// module id = 381\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/unless.js\n// module id = 382\n// module chunks = 0","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/unnest.js\n// module id = 383\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/until.js\n// module id = 384\n// module chunks = 0","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/valuesIn.js\n// module id = 385\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/view.js\n// module id = 386\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/when.js\n// module id = 387\n// module chunks = 0","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/whereEq.js\n// module id = 388\n// module chunks = 0","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/without.js\n// module id = 389\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/xprod.js\n// module id = 390\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/zip.js\n// module id = 391\n// module chunks = 0","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/zipObj.js\n// module id = 392\n// module chunks = 0","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/es/zipWith.js\n// module id = 393\n// module chunks = 0","import {create, env} from 'sanctuary';\n\nconst checkTypes = false; //process.env.BUILD_TYPE !== 'build';\n\nexport const S = create({checkTypes, env});\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/external/sanctuary/Sanctuary-Instance.ts","/*    #######\n   ####     ####\n ####   ###   ####\n#####   ###########   sanctuary\n########   ########   noun\n###########   #####   1 [ mass noun ] refuge from unsafe JavaScript\n ####   ###   ####\n   ####     ####\n      #######    */\n\n//. # Sanctuary\n//.\n//. [![npm](https://img.shields.io/npm/v/sanctuary.svg)](https://www.npmjs.com/package/sanctuary)\n//. [![CircleCI](https://img.shields.io/circleci/project/github/sanctuary-js/sanctuary/master.svg)](https://circleci.com/gh/sanctuary-js/sanctuary/tree/master)\n//. [![Gitter](https://img.shields.io/gitter/room/badges/shields.svg)](https://gitter.im/sanctuary-js/sanctuary)\n//.\n//. Sanctuary is a JavaScript functional programming library inspired by\n//. [Haskell][] and [PureScript][]. It's stricter than [Ramda][], and\n//. provides a similar suite of functions.\n//.\n//. Sanctuary promotes programs composed of simple, pure functions. Such\n//. programs are easier to comprehend, test, and maintain &ndash; they are\n//. also a pleasure to write.\n//.\n//. Sanctuary provides two data types, [Maybe][] and [Either][], both of\n//. which are compatible with [Fantasy Land][]. Thanks to these data types\n//. even Sanctuary functions which may fail, such as [`head`](#head), are\n//. composable.\n//.\n//. Sanctuary makes it possible to write safe code without null checks.\n//. In JavaScript it's trivial to introduce a possible run-time type error:\n//.\n//.     words[0].toUpperCase()\n//.\n//. If `words` is `[]` we'll get a familiar error at run-time:\n//.\n//.     TypeError: Cannot read property 'toUpperCase' of undefined\n//.\n//. Sanctuary gives us a fighting chance of avoiding such errors. We might\n//. write:\n//.\n//.     S.map(S.toUpper, S.head(words))\n//.\n//. Sanctuary is designed to work in Node.js and in ES5-compatible browsers.\n//.\n//. ## Types\n//.\n//. Sanctuary uses Haskell-like type signatures to describe the types of\n//. values, including functions. `'foo'`, for example, is a member of `String`;\n//. `[1, 2, 3]` is a member of `Array Number`. The double colon (`::`) is used\n//. to mean \"is a member of\", so one could write:\n//.\n//.     'foo' :: String\n//.     [1, 2, 3] :: Array Number\n//.\n//. An identifier may appear to the left of the double colon:\n//.\n//.     Math.PI :: Number\n//.\n//. The arrow (`->`) is used to express a function's type:\n//.\n//.     Math.abs :: Number -> Number\n//.\n//. That states that `Math.abs` is a unary function which takes an argument\n//. of type `Number` and returns a value of type `Number`.\n//.\n//. Some functions are parametrically polymorphic: their types are not fixed.\n//. Type variables are used in the representations of such functions:\n//.\n//.     S.I :: a -> a\n//.\n//. `a` is a type variable. Type variables are not capitalized, so they\n//. are differentiable from type identifiers (which are always capitalized).\n//. By convention type variables have single-character names. The signature\n//. above states that `S.I` takes a value of any type and returns a value of\n//. the same type. Some signatures feature multiple type variables:\n//.\n//.     S.K :: a -> b -> a\n//.\n//. It must be possible to replace all occurrences of `a` with a concrete type.\n//. The same applies for each other type variable. For the function above, the\n//. types with which `a` and `b` are replaced may be different, but needn't be.\n//.\n//. Since all Sanctuary functions are curried (they accept their arguments\n//. one at a time), a binary function is represented as a unary function which\n//. returns a unary function: `* -> * -> *`. This aligns neatly with Haskell,\n//. which uses curried functions exclusively. In JavaScript, though, we may\n//. wish to represent the types of functions with arities less than or greater\n//. than one. The general form is `(<input-types>) -> <output-type>`, where\n//. `<input-types>` comprises zero or more comma–space (<code>, </code>)\n//. -separated type representations:\n//.\n//.   - `() -> String`\n//.   - `(a, b) -> a`\n//.   - `(a, b, c) -> d`\n//.\n//. `Number -> Number` can thus be seen as shorthand for `(Number) -> Number`.\n//.\n//. The question mark (`?`) is used to represent types which include `null`\n//. and `undefined` as members. `String?`, for example, represents the type\n//. comprising `null`, `undefined`, and all strings.\n//.\n//. Sanctuary embraces types. JavaScript doesn't support algebraic data types,\n//. but these can be simulated by providing a group of data constructors which\n//. return values with the same set of methods. A value of the Either type, for\n//. example, is created via the Left constructor or the Right constructor.\n//.\n//. It's necessary to extend Haskell's notation to describe implicit arguments\n//. to the *methods* provided by Sanctuary's types. In `x.map(y)`, for example,\n//. the `map` method takes an implicit argument `x` in addition to the explicit\n//. argument `y`. The type of the value upon which a method is invoked appears\n//. at the beginning of the signature, separated from the arguments and return\n//. value by a squiggly arrow (`~>`). The type of the `fantasy-land/map` method\n//. of the Maybe type is written `Maybe a ~> (a -> b) -> Maybe b`. One could\n//. read this as:\n//.\n//. _When the `fantasy-land/map` method is invoked on a value of type `Maybe a`\n//. (for any type `a`) with an argument of type `a -> b` (for any type `b`),\n//. it returns a value of type `Maybe b`._\n//.\n//. The squiggly arrow is also used when representing non-function properties.\n//. `Maybe a ~> Boolean`, for example, represents a Boolean property of a value\n//. of type `Maybe a`.\n//.\n//. Sanctuary supports type classes: constraints on type variables. Whereas\n//. `a -> a` implicitly supports every type, `Functor f => (a -> b) -> f a ->\n//. f b` requires that `f` be a type which satisfies the requirements of the\n//. Functor type class. Type-class constraints appear at the beginning of a\n//. type signature, separated from the rest of the signature by a fat arrow\n//. (`=>`).\n//.\n//. ### Type representatives\n//.\n//. What is the type of `Number`? One answer is `a -> Number`, since it's a\n//. function which takes an argument of any type and returns a Number value.\n//. When provided as the first argument to [`is`](#is), though, `Number` is\n//. really the value-level representative of the Number type.\n//.\n//. Sanctuary uses the TypeRep pseudotype to describe type representatives.\n//. For example:\n//.\n//.     Number :: TypeRep Number\n//.\n//. `Number` is the sole inhabitant of the TypeRep Number type.\n//.\n//. ## Type checking\n//.\n//. Sanctuary functions are defined via [sanctuary-def][] to provide run-time\n//. type checking. This is tremendously useful during development: type errors\n//. are reported immediately, avoiding circuitous stack traces (at best) and\n//. silent failures due to type coercion (at worst). For example:\n//.\n//. ```javascript\n//. S.add(2, true);\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n//. //                          ^^^^^^^^^^^^\n//. //                               1\n//. //\n//. //   1)  true :: Boolean\n//. //\n//. //   The value at position 1 is not a member of ‘FiniteNumber’.\n//. //\n//. //   See v:sanctuary-js/sanctuary-def#FiniteNumber for information about the sanctuary-def/FiniteNumber type.\n//. ```\n//.\n//. Compare this to the behaviour of Ramda's unchecked equivalent:\n//.\n//. ```javascript\n//. R.add(2, true);\n//. // => 3\n//. ```\n//.\n//. There is a performance cost to run-time type checking. One may wish to\n//. disable type checking in certain contexts to avoid paying this cost.\n//. [`create`](#create) facilitates the creation of a Sanctuary module which\n//. does not perform type checking.\n//.\n//. In Node, one could use an environment variable to determine whether to\n//. perform type checking:\n//.\n//. ```javascript\n//. const {create, env} = require('sanctuary');\n//.\n//. const checkTypes = process.env.NODE_ENV !== 'production';\n//. const S = create({checkTypes, env});\n//. ```\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-def'),\n                       require('sanctuary-type-classes'),\n                       require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-def',\n            'sanctuary-type-classes',\n            'sanctuary-type-identifiers'],\n           f);\n  } else {\n    self.sanctuary = f(self.sanctuaryDef,\n                       self.sanctuaryTypeClasses,\n                       self.sanctuaryTypeIdentifiers);\n  }\n\n}(function($, Z, type) {\n\n  'use strict';\n\n  //  Fn :: (Type, Type) -> Type\n  function Fn(x, y) { return $.Function([x, y]); }\n\n  //  flip$ :: ((a, b) -> c) -> b -> a -> c\n  function flip$(f) {\n    return function(x) {\n      return function(y) {\n        return f(y, x);\n      };\n    };\n  }\n\n  //  toObject :: a -> Object\n  function toObject(x) {\n    return x == null ? Object.create(null) : Object(x);\n  }\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(typeIdent) {\n    return function(x) {\n      return type(x) === typeIdent;\n    };\n  }\n\n  //  uncurry2 :: (a -> b -> c) -> ((a, b) -> c)\n  function uncurry2(f) {\n    return function(x, y) {\n      return f(x)(y);\n    };\n  }\n\n  //  readmeUrl :: String -> String\n  function readmeUrl(id) {\n    var version = '0.14.1';  // updated programmatically\n    return 'https://github.com/sanctuary-js/sanctuary/tree/v' + version +\n           '#' + id;\n  }\n\n  //  :: Type\n  var a = $.TypeVariable('a');\n  var b = $.TypeVariable('b');\n  var c = $.TypeVariable('c');\n  var d = $.TypeVariable('d');\n  var e = $.TypeVariable('e');\n  var g = $.TypeVariable('g');\n  var l = $.TypeVariable('l');\n  var r = $.TypeVariable('r');\n\n  //  :: Type -> Type\n  var f = $.UnaryTypeVariable('f');\n  var m = $.UnaryTypeVariable('m');\n  var t = $.UnaryTypeVariable('t');\n  var w = $.UnaryTypeVariable('w');\n\n  //  :: Type -> Type -> Type\n  var p = $.BinaryTypeVariable('p');\n  var s = $.BinaryTypeVariable('s');\n\n  //  eitherTypeIdent :: String\n  var eitherTypeIdent = 'sanctuary/Either';\n\n  //  $Either :: Type -> Type -> Type\n  var $Either = $.BinaryType(\n    eitherTypeIdent,\n    readmeUrl('EitherType'),\n    typeEq(eitherTypeIdent),\n    function(either) { return either.isLeft ? [either.value] : []; },\n    function(either) { return either.isRight ? [either.value] : []; }\n  );\n\n  //  List :: Type -> Type\n  var List = $.UnaryType(\n    'sanctuary/List',\n    readmeUrl('list'),\n    function(x) { return $.String._test(x) || Array.isArray(x); },\n    function(list) { return $.String._test(list) ? [] : list; }\n  );\n\n  //  maybeTypeIdent :: String\n  var maybeTypeIdent = 'sanctuary/Maybe';\n\n  //  $Maybe :: Type -> Type\n  var $Maybe = $.UnaryType(\n    maybeTypeIdent,\n    readmeUrl('MaybeType'),\n    typeEq(maybeTypeIdent),\n    function(maybe) { return maybe.isJust ? [maybe.value] : []; }\n  );\n\n  //  TypeRep :: Type -> Type\n  var TypeRep = $.UnaryType(\n    'sanctuary/TypeRep',\n    readmeUrl('type-representatives'),\n    function(x) {\n      return $.AnyFunction._test(x) ||\n             x != null && $.String._test(x['@@type']);\n    },\n    function(typeRep) { return []; }\n  );\n\n  //  defaultEnv :: Array Type\n  var defaultEnv = Z.concat($.env, [\n    $.FiniteNumber,\n    $.NonZeroFiniteNumber,\n    $Either($.Unknown, $.Unknown),\n    Fn($.Unknown, $.Unknown),\n    $.GlobalRegExp,\n    $.NonGlobalRegExp,\n    $.Integer,\n    $.NonNegativeInteger,\n    $Maybe($.Unknown),\n    $.Pair($.Unknown, $.Unknown),\n    $.RegexFlags,\n    $.ValidDate,\n    $.ValidNumber\n  ]);\n\n  //  Options :: Type\n  var Options = $.RecordType({checkTypes: $.Boolean, env: $.Array($.Any)});\n\n  //  createSanctuary :: Options -> Module\n  function createSanctuary(opts) {\n\n  /* eslint-disable indent */\n\n  //  checkTypes :: Boolean\n  var checkTypes = opts.checkTypes;\n\n  //  env :: Array Type\n  var env = opts.env;\n\n  var S = {};\n\n  //# create :: { checkTypes :: Boolean, env :: Array Type } -> Module\n  //.\n  //. Takes an options record and returns a Sanctuary module. `checkTypes`\n  //. specifies whether to enable type checking. The module's polymorphic\n  //. functions (such as [`I`](#I)) require each value associated with a\n  //. type variable to be a member of at least one type in the environment.\n  //.\n  //. A well-typed application of a Sanctuary function will produce the same\n  //. result regardless of whether type checking is enabled. If type checking\n  //. is enabled, a badly typed application will produce an exception with a\n  //. descriptive error message.\n  //.\n  //. The following snippet demonstrates defining a custom type and using\n  //. `create` to produce a Sanctuary module which is aware of that type:\n  //.\n  //. ```javascript\n  //. const {create, env} = require('sanctuary');\n  //. const $ = require('sanctuary-def');\n  //. const type = require('sanctuary-type-identifiers');\n  //.\n  //. //    Identity :: a -> Identity a\n  //. const Identity = function Identity(x) {\n  //.   if (!(this instanceof Identity)) return new Identity(x);\n  //.   this.value = x;\n  //. };\n  //.\n  //. Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. Identity.prototype['fantasy-land/map'] = function(f) {\n  //.   return Identity(f(this.value));\n  //. };\n  //.\n  //. //    IdentityType :: Type -> Type\n  //. const IdentityType = $.UnaryType(\n  //.   Identity['@@type'],\n  //.   'http://example.com/my-package#Identity',\n  //.   x => type(x) === Identity['@@type'],\n  //.   identity => [identity.value]\n  //. );\n  //.\n  //. const S = create({\n  //.   checkTypes: process.env.NODE_ENV !== 'production',\n  //.   env: env.concat([IdentityType($.Unknown)]),\n  //. });\n  //.\n  //. S.map(S.sub(1), Identity(43));\n  //. // => Identity(42)\n  //. ```\n  //.\n  //. See also [`env`](#env).\n  S.create =\n  $.create({checkTypes: checkTypes, env: defaultEnv})('create',\n                                                      {},\n                                                      [Options, $.Object],\n                                                      createSanctuary);\n\n  //# env :: Array Type\n  //.\n  //. The default environment, which may be used as is or as the basis of a\n  //. custom environment in conjunction with [`create`](#create).\n  S.env = defaultEnv;\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var _List = __doctest.require('./test/internal/List');\n    var Cons = _List.Cons;\n    var Nil = _List.Nil;\n    var Sum = __doctest.require('./test/internal/Sum');\n    /* eslint-enable no-unused-vars */\n    env = Z.concat(env, [_List.Type($.Unknown), Sum.Type]);\n  }\n\n  var def = $.create({checkTypes: checkTypes, env: env});\n\n  //. ### Placeholder\n  //.\n  //. Sanctuary functions are designed with partial application in mind.\n  //. In many cases one can define a more specific function in terms of\n  //. a more general one simply by applying the more general function to\n  //. some (but not all) of its arguments. For example, one could define\n  //. `sum :: Foldable f => f Number -> Number` as `S.reduce(S.add, 0)`.\n  //.\n  //. In some cases, though, there are multiple orders in which one may\n  //. wish to provide a function's arguments. `S.concat('prefix')` is a\n  //. function which prefixes its argument, but how would one define a\n  //. function which suffixes its argument? It's possible with the help\n  //. of [`__`](#__), the special placeholder value.\n  //.\n  //. The placeholder indicates a hole to be filled at some future time.\n  //. The following are all equivalent (`_` represents the placeholder):\n  //.\n  //.   - `f(x, y, z)`\n  //.   - `f(_, y, z)(x)`\n  //.   - `f(_, _, z)(x, y)`\n  //.   - `f(_, _, z)(_, y)(x)`\n\n  //# __ :: Placeholder\n  //.\n  //. The special [placeholder](#placeholder) value.\n  //.\n  //. ```javascript\n  //. > S.map(S.concat('@'), ['foo', 'bar', 'baz'])\n  //. ['@foo', '@bar', '@baz']\n  //.\n  //. > S.map(S.concat(S.__, '?'), ['foo', 'bar', 'baz'])\n  //. ['foo?', 'bar?', 'baz?']\n  //. ```\n  S.__ = $.__;\n\n  //. ### Classify\n\n  //# type :: Any -> { namespace :: Maybe String, name :: String, version :: NonNegativeInteger }\n  //.\n  //. Returns the result of parsing the [type identifier][] of the given value.\n  //.\n  //. ```javascript\n  //. > S.type(S.Just(42))\n  //. {namespace: Just('sanctuary'), name: 'Maybe', version: 0}\n  //.\n  //. > S.type([1, 2, 3])\n  //. {namespace: Nothing, name: 'Array', version: 0}\n  //. ```\n  S.type =\n  def('type',\n      {},\n      [$.Any,\n       $.RecordType({namespace: $Maybe($.String),\n                     name: $.String,\n                     version: $.NonNegativeInteger})],\n      function(x) {\n        var r = type.parse(type(x));\n        r.namespace = toMaybe(r.namespace);\n        return r;\n      });\n\n  //# is :: TypeRep a -> Any -> Boolean\n  //.\n  //. Takes a [type representative](#type-representatives) and a value of any\n  //. type and returns `true` [iff][] the given value is of the specified type.\n  //. Subtyping is not respected.\n  //.\n  //. ```javascript\n  //. > S.is(Number, 42)\n  //. true\n  //.\n  //. > S.is(Object, 42)\n  //. false\n  //.\n  //. > S.is(String, 42)\n  //. false\n  //. ```\n  function is(typeRep, x) {\n    var xType = type(x);\n    if ($.String._test(typeRep['@@type'])) {\n      return xType === typeRep['@@type'];\n    } else {\n      var match = /function (\\w*)/.exec(typeRep);\n      return match != null && match[1] === xType;\n    }\n  }\n  S.is = def('is', {}, [TypeRep(a), $.Any, $.Boolean], is);\n\n  //. ### Showable\n\n  //# toString :: Any -> String\n  //.\n  //. Alias of [`Z.toString`][].\n  //.\n  //. ```javascript\n  //. > S.toString(-0)\n  //. '-0'\n  //.\n  //. > S.toString(['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > S.toString({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > S.toString(S.Left(S.Right(S.Just(S.Nothing))))\n  //. 'Left(Right(Just(Nothing)))'\n  //. ```\n  S.toString = def('toString', {}, [$.Any, $.String], Z.toString);\n\n  //. ### Fantasy Land\n  //.\n  //. Sanctuary is compatible with the [Fantasy Land][] specification.\n\n  //# equals :: Setoid a => a -> a -> Boolean\n  //.\n  //. Curried version of [`Z.equals`][] which requires two arguments of the\n  //. same type.\n  //.\n  //. To compare values of different types first use [`create`](#create) to\n  //. create a Sanctuary module with type checking disabled, then use that\n  //. module's `equals` function.\n  //.\n  //. ```javascript\n  //. > S.equals(0, -0)\n  //. true\n  //.\n  //. > S.equals(NaN, NaN)\n  //. true\n  //.\n  //. > S.equals(S.Just([1, 2, 3]), S.Just([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals(S.Just([1, 2, 3]), S.Just([1, 2, 4]))\n  //. false\n  //. ```\n  S.equals = def('equals', {a: [Z.Setoid]}, [a, a, $.Boolean], Z.equals);\n\n  //# lt :: Ord a => a -> (a -> Boolean)\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than the first\n  //. according to [`Z.lt`][]. The arguments must be provided one at a time.\n  //.\n  //. See also [`lt_`](#lt_).\n  //.\n  //. ```javascript\n  //. > S.filter(S.lt(3), [1, 2, 3, 4, 5])\n  //. [1, 2]\n  //. ```\n  S.lt = def('lt', {a: [Z.Ord]}, [a, $.Predicate(a)], flip$(Z.lt));\n\n  //# lt_ :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the first argument is less than the second\n  //. according to [`Z.lt`][].\n  //.\n  //. See also [`lt`](#lt).\n  //.\n  //. ```javascript\n  //. > S.lt_([1, 2, 3], [1, 2, 3])\n  //. false\n  //.\n  //. > S.lt_([1, 2, 3], [1, 2, 4])\n  //. true\n  //.\n  //. > S.lt_([1, 2, 3], [1, 2])\n  //. false\n  //. ```\n  S.lt_ = def('lt_', {a: [Z.Ord]}, [a, a, $.Boolean], Z.lt);\n\n  //# lte :: Ord a => a -> (a -> Boolean)\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than or equal to\n  //. the first according to [`Z.lte`][]. The arguments must be provided one\n  //. at a time.\n  //.\n  //. See also [`lte_`](#lte_).\n  //.\n  //. ```javascript\n  //. > S.filter(S.lte(3), [1, 2, 3, 4, 5])\n  //. [1, 2, 3]\n  //. ```\n  S.lte = def('lte', {a: [Z.Ord]}, [a, $.Predicate(a)], flip$(Z.lte));\n\n  //# lte_ :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the first argument is less than or equal to the\n  //. second according to [`Z.lte`][].\n  //.\n  //. See also [`lte`](#lte).\n  //.\n  //. ```javascript\n  //. > S.lte_([1, 2, 3], [1, 2, 3])\n  //. true\n  //.\n  //. > S.lte_([1, 2, 3], [1, 2, 4])\n  //. true\n  //.\n  //. > S.lte_([1, 2, 3], [1, 2])\n  //. false\n  //. ```\n  S.lte_ = def('lte_', {a: [Z.Ord]}, [a, a, $.Boolean], Z.lte);\n\n  //# gt :: Ord a => a -> (a -> Boolean)\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than the first\n  //. according to [`Z.gt`][]. The arguments must be provided one at a time.\n  //.\n  //. See also [`gt_`](#gt_).\n  //.\n  //. ```javascript\n  //. > S.filter(S.gt(3), [1, 2, 3, 4, 5])\n  //. [4, 5]\n  //. ```\n  S.gt = def('gt', {a: [Z.Ord]}, [a, $.Predicate(a)], flip$(Z.gt));\n\n  //# gt_ :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the first argument is greater than the second\n  //. according to [`Z.gt`][].\n  //.\n  //. See also [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > S.gt_([1, 2, 3], [1, 2, 3])\n  //. false\n  //.\n  //. > S.gt_([1, 2, 3], [1, 2, 4])\n  //. false\n  //.\n  //. > S.gt_([1, 2, 3], [1, 2])\n  //. true\n  //. ```\n  S.gt_ = def('gt_', {a: [Z.Ord]}, [a, a, $.Boolean], Z.gt);\n\n  //# gte :: Ord a => a -> (a -> Boolean)\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than or equal\n  //. to the first according to [`Z.gte`][]. The arguments must be provided\n  //. one at a time.\n  //.\n  //. See also [`gte_`](#gte_).\n  //.\n  //. ```javascript\n  //. > S.filter(S.gte(3), [1, 2, 3, 4, 5])\n  //. [3, 4, 5]\n  //. ```\n  S.gte = def('gte', {a: [Z.Ord]}, [a, $.Predicate(a)], flip$(Z.gte));\n\n  //# gte_ :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the first argument is greater than or equal to\n  //. the second according to [`Z.gte`][].\n  //.\n  //. See also [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > S.gte_([1, 2, 3], [1, 2, 3])\n  //. true\n  //.\n  //. > S.gte_([1, 2, 3], [1, 2, 4])\n  //. false\n  //.\n  //. > S.gte_([1, 2, 3], [1, 2])\n  //. true\n  //. ```\n  S.gte_ = def('gte_', {a: [Z.Ord]}, [a, a, $.Boolean], Z.gte);\n\n  //# min :: Ord a => a -> a -> a\n  //.\n  //. Returns the smaller of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.min(10, 2)\n  //. 2\n  //.\n  //. > S.min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > S.min('10', '2')\n  //. '10'\n  //. ```\n  S.min = def('min', {a: [Z.Ord]}, [a, a, a], Z.min);\n\n  //# max :: Ord a => a -> a -> a\n  //.\n  //. Returns the larger of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > S.max(10, 2)\n  //. 10\n  //.\n  //. > S.max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > S.max('10', '2')\n  //. '2'\n  //. ```\n  S.max = def('max', {a: [Z.Ord]}, [a, a, a], Z.max);\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.id`][].\n  //.\n  //. ```javascript\n  //. > S.id(Function)(42)\n  //. 42\n  //. ```\n  S.id = def('id', {c: [Z.Category]}, [TypeRep(c), c], Z.id);\n\n  //# concat :: Semigroup a => a -> a -> a\n  //.\n  //. Curried version of [`Z.concat`][].\n  //.\n  //. ```javascript\n  //. > S.concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > S.concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > S.concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > S.concat(S.Just([1, 2, 3]), S.Just([4, 5, 6]))\n  //. Just([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat(Sum(18), Sum(24))\n  //. Sum(42)\n  //. ```\n  S.concat = def('concat', {a: [Z.Semigroup]}, [a, a, a], Z.concat);\n\n  //# empty :: Monoid a => TypeRep a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.empty`][].\n  //.\n  //. ```javascript\n  //. > S.empty(String)\n  //. ''\n  //.\n  //. > S.empty(Array)\n  //. []\n  //.\n  //. > S.empty(Object)\n  //. {}\n  //.\n  //. > S.empty(Sum)\n  //. Sum(0)\n  //. ```\n  S.empty = def('empty', {a: [Z.Monoid]}, [TypeRep(a), a], Z.empty);\n\n  //# invert :: Group g => g -> g\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.invert`][].\n  //.\n  //. ```javascript\n  //. > S.invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  S.invert = def('invert', {g: [Z.Group]}, [g, g], Z.invert);\n\n  //# map :: Functor f => (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.map`][].\n  //.\n  //. ```javascript\n  //. > S.map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > S.map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > S.map(Math.sqrt, S.Just(9))\n  //. Just(3)\n  //.\n  //. > S.map(Math.sqrt, S.Right(9))\n  //. Right(3)\n  //. ```\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the B combinator\n  //. from combinatory logic (i.e. [`compose`](#compose)):\n  //.\n  //.     Functor f => (a -> b) -> f a -> f b\n  //.     (a -> b) -> Function x a -> Function x b\n  //.     (a -> c) -> Function x a -> Function x c\n  //.     (b -> c) -> Function x b -> Function x c\n  //.     (b -> c) -> Function a b -> Function a c\n  //.     (b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.map(Math.sqrt, S.add(1))(99)\n  //. 10\n  //. ```\n  S.map = def('map', {f: [Z.Functor]}, [Fn(a, b), f(a), f(b)], Z.map);\n\n  //# bimap :: Bifunctor f => (a -> b) -> (c -> d) -> f a c -> f b d\n  //.\n  //. Curried version of [`Z.bimap`][].\n  //.\n  //. ```javascript\n  //. > S.bimap(S.toUpper, Math.sqrt, S.Left('foo'))\n  //. Left('FOO')\n  //.\n  //. > S.bimap(S.toUpper, Math.sqrt, S.Right(64))\n  //. Right(8)\n  //. ```\n  S.bimap =\n  def('bimap',\n      {p: [Z.Bifunctor]},\n      [Fn(a, b), Fn(c, d), p(a, c), p(b, d)],\n      Z.bimap);\n\n  //# promap :: Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n  //.\n  //. Curried version of [`Z.promap`][].\n  //.\n  //. ```javascript\n  //. > S.promap(Math.abs, S.add(1), Math.sqrt)(-100)\n  //. 11\n  //. ```\n  S.promap =\n  def('promap',\n      {p: [Z.Profunctor]},\n      [Fn(a, b), Fn(c, d), p(b, c), p(a, d)],\n      Z.promap);\n\n  //# alt :: Alt f => f a -> f a -> f a\n  //.\n  //. Curried version of [`Z.alt`][].\n  //.\n  //. ```javascript\n  //. > S.alt(S.Nothing, S.Just(1))\n  //. Just(1)\n  //.\n  //. > S.alt(S.Just(2), S.Just(3))\n  //. Just(2)\n  //.\n  //. > S.alt(S.Left('X'), S.Right(1))\n  //. Right(1)\n  //.\n  //. > S.alt(S.Right(2), S.Right(3))\n  //. Right(2)\n  //. ```\n  S.alt = def('alt', {f: [Z.Alt]}, [f(a), f(a), f(a)], Z.alt);\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.zero`][].\n  //.\n  //. ```javascript\n  //. > S.zero(Array)\n  //. []\n  //.\n  //. > S.zero(Object)\n  //. {}\n  //.\n  //. > S.zero(S.Maybe)\n  //. Nothing\n  //. ```\n  S.zero =\n  def('zero', {f: [Z.Plus]}, [TypeRep($.TypeVariable('f')), f(a)], Z.zero);\n\n  //# reduce :: Foldable f => (b -> a -> b) -> b -> f a -> b\n  //.\n  //. Takes a curried binary function, an initial value, and a [Foldable][],\n  //. and applies the function to the initial value and the Foldable's first\n  //. value, then applies the function to the result of the previous\n  //. application and the Foldable's second value. Repeats this process\n  //. until each of the Foldable's values has been used. Returns the initial\n  //. value if the Foldable is empty; the result of the final application\n  //. otherwise.\n  //.\n  //. ```javascript\n  //. > S.reduce(S.add, 0, [1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.reduce(xs => x => [x].concat(xs), [], [1, 2, 3, 4, 5])\n  //. [5, 4, 3, 2, 1]\n  //. ```\n  function reduce(f, initial, foldable) {\n    return Z.reduce(uncurry2(f), initial, foldable);\n  }\n  S.reduce =\n  def('reduce', {f: [Z.Foldable]}, [Fn(a, Fn(b, a)), a, f(b), a], reduce);\n\n  //# traverse :: (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n  //.\n  //. Curried version of [`Z.traverse`][].\n  //.\n  //. ```javascript\n  //. > S.traverse(Array, S.words, S.Just('foo bar baz'))\n  //. [Just('foo'), Just('bar'), Just('baz')]\n  //.\n  //. > S.traverse(Array, S.words, S.Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse(S.Maybe, S.parseInt(16), ['A', 'B', 'C'])\n  //. Just([10, 11, 12])\n  //.\n  //. > S.traverse(S.Maybe, S.parseInt(16), ['A', 'B', 'C', 'X'])\n  //. Nothing\n  //.\n  //. > S.traverse(S.Maybe, S.parseInt(16), {a: 'A', b: 'B', c: 'C'})\n  //. Just({a: 10, b: 11, c: 12})\n  //.\n  //. > S.traverse(S.Maybe, S.parseInt(16), {a: 'A', b: 'B', c: 'C', x: 'X'})\n  //. Nothing\n  //. ```\n  S.traverse =\n  def('traverse',\n      {f: [Z.Applicative], t: [Z.Traversable]},\n      [TypeRep($.TypeVariable('f')), Fn(a, f(b)), t(a), f(t(b))],\n      Z.traverse);\n\n  //# sequence :: (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n  //.\n  //. Curried version of [`Z.sequence`][]. Inverts the given `t (f a)`\n  //. to produce an `f (t a)`.\n  //.\n  //. ```javascript\n  //. > S.sequence(Array, S.Just([1, 2, 3]))\n  //. [Just(1), Just(2), Just(3)]\n  //.\n  //. > S.sequence(S.Maybe, [S.Just(1), S.Just(2), S.Just(3)])\n  //. Just([1, 2, 3])\n  //.\n  //. > S.sequence(S.Maybe, [S.Just(1), S.Just(2), S.Nothing])\n  //. Nothing\n  //.\n  //. > S.sequence(S.Maybe, {a: S.Just(1), b: S.Just(2), c: S.Just(3)})\n  //. Just({a: 1, b: 2, c: 3})\n  //.\n  //. > S.sequence(S.Maybe, {a: S.Just(1), b: S.Just(2), c: S.Nothing})\n  //. Nothing\n  //. ```\n  S.sequence =\n  def('sequence',\n      {f: [Z.Applicative], t: [Z.Traversable]},\n      [TypeRep($.TypeVariable('f')), t(f(a)), f(t(a))],\n      Z.sequence);\n\n  //# ap :: Apply f => f (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.ap`][].\n  //.\n  //. ```javascript\n  //. > S.ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > S.ap({x: Math.sqrt, y: S.add(1), z: S.sub(1)}, {w: 4, x: 4, y: 4})\n  //. {x: 2, y: 5}\n  //.\n  //. > S.ap(S.Just(Math.sqrt), S.Just(64))\n  //. Just(8)\n  //. ```\n  //.\n  //. Replacing `Apply f => f` with `Function x` produces the S combinator\n  //. from combinatory logic:\n  //.\n  //.     Apply f => f (a -> b) -> f a -> f b\n  //.     Function x (a -> b) -> Function x a -> Function x b\n  //.     Function x (a -> c) -> Function x a -> Function x c\n  //.     Function x (b -> c) -> Function x b -> Function x c\n  //.     Function a (b -> c) -> Function a b -> Function a c\n  //.     (a -> b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  S.ap =\n  def('ap',\n      {f: [Z.Apply]},\n      [f(Fn(a, b)), f(a), f(b)],\n      Z.ap);\n\n  //# lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n  //.\n  //. Promotes a curried binary function to a function which operates on two\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift2(S.add, S.Just(2), S.Just(3))\n  //. Just(5)\n  //.\n  //. > S.lift2(S.add, S.Just(2), S.Nothing)\n  //. Nothing\n  //.\n  //. > S.lift2(S.and, S.Just(true), S.Just(true))\n  //. Just(true)\n  //.\n  //. > S.lift2(S.and, S.Just(true), S.Just(false))\n  //. Just(false)\n  //. ```\n  S.lift2 =\n  def('lift2', {f: [Z.Apply]}, [Fn(a, Fn(b, c)), f(a), f(b), f(c)], Z.lift2);\n\n  //# lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n  //.\n  //. Promotes a curried ternary function to a function which operates on three\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift3(S.reduce, S.Just(S.add), S.Just(0), S.Just([1, 2, 3]))\n  //. Just(6)\n  //.\n  //. > S.lift3(S.reduce, S.Just(S.add), S.Just(0), S.Nothing)\n  //. Nothing\n  //. ```\n  S.lift3 =\n  def('lift3',\n      {f: [Z.Apply]},\n      [Fn(a, Fn(b, Fn(c, d))), f(a), f(b), f(c), f(d)],\n      Z.lift3);\n\n  //# apFirst :: Apply f => f a -> f b -> f a\n  //.\n  //. Curried version of [`Z.apFirst`][]. Combines two effectful actions,\n  //. keeping only the result of the first. Equivalent to Haskell's `(<*)`\n  //. function.\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > S.apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > S.apFirst(S.Just(1), S.Just(2))\n  //. Just(1)\n  //. ```\n  S.apFirst = def('apFirst', {f: [Z.Apply]}, [f(a), f(b), f(a)], Z.apFirst);\n\n  //# apSecond :: Apply f => f a -> f b -> f b\n  //.\n  //. Curried version of [`Z.apSecond`][]. Combines two effectful actions,\n  //. keeping only the result of the second. Equivalent to Haskell's `(*>)`\n  //. function.\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > S.apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > S.apSecond(S.Just(1), S.Just(2))\n  //. Just(2)\n  //. ```\n  S.apSecond = def('apSecond', {f: [Z.Apply]}, [f(a), f(b), f(b)], Z.apSecond);\n\n  //# of :: Applicative f => TypeRep f -> a -> f a\n  //.\n  //. Curried version of [`Z.of`][].\n  //.\n  //. ```javascript\n  //. > S.of(Array, 42)\n  //. [42]\n  //.\n  //. > S.of(Function, 42)(null)\n  //. 42\n  //.\n  //. > S.of(S.Maybe, 42)\n  //. Just(42)\n  //.\n  //. > S.of(S.Either, 42)\n  //. Right(42)\n  //. ```\n  S.of =\n  def('of',\n      {f: [Z.Applicative]},\n      [TypeRep($.TypeVariable('f')), a, f(a)],\n      Z.of);\n\n  //# chain :: Chain m => (a -> m b) -> m a -> m b\n  //.\n  //. Curried version of [`Z.chain`][].\n  //.\n  //. ```javascript\n  //. > S.chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > S.chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('slice')\n  //. 'sli'\n  //.\n  //. > S.chain(S.parseInt(10), S.Just('123'))\n  //. Just(123)\n  //.\n  //. > S.chain(S.parseInt(10), S.Just('XXX'))\n  //. Nothing\n  //. ```\n  S.chain = def('chain', {m: [Z.Chain]}, [Fn(a, m(b)), m(a), m(b)], Z.chain);\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.join`][].\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. ```javascript\n  //. > S.join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > S.join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > S.join(S.Just(S.Just(1)))\n  //. S.Just(1)\n  //. ```\n  //.\n  //. Replacing `Chain m => m` with `Function x` produces the W combinator\n  //. from combinatory logic:\n  //.\n  //.     Chain m => m (m a) -> m a\n  //.     Function x (Function x a) -> Function x a\n  //.     (x -> x -> a) -> (x -> a)\n  //.\n  //. ```javascript\n  //. > S.join(S.concat)('abc')\n  //. 'abcabc'\n  //. ```\n  S.join = def('join', {m: [Z.Chain]}, [m(m(a)), m(a)], Z.join);\n\n  //# chainRec :: ChainRec m => TypeRep m -> (a -> m (Either a b)) -> a -> m b\n  //.\n  //. Performs a [`chain`](#chain)-like computation with constant stack usage.\n  //. Similar to [`Z.chainRec`][], but curried and more convenient due to the\n  //. use of the Either type to indicate completion (via a Right).\n  //.\n  //. ```javascript\n  //. > S.chainRec(Array,\n  //. .            s => s.length === 2 ? S.map(S.Right, [s + '!', s + '?'])\n  //. .                                : S.map(S.Left, [s + 'o', s + 'n']),\n  //. .            '')\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    function step(next, done, x) {\n      return Z.map(function(e) { return either(next, done, e); }, f(x));\n    }\n    return Z.chainRec(typeRep, step, x);\n  }\n  S.chainRec =\n  def('chainRec',\n      {m: [Z.ChainRec]},\n      [TypeRep($.TypeVariable('m')), Fn(a, m($Either(a, b))), a, m(b)],\n      chainRec);\n\n  //# extend :: Extend w => (w a -> b) -> w a -> w b\n  //.\n  //. Curried version of [`Z.extend`][].\n  //.\n  //. ```javascript\n  //. > S.extend(S.joinWith(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //. ```\n  S.extend =\n  def('extend', {w: [Z.Extend]}, [Fn(w(a), b), w(a), w(b)], Z.extend);\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.extract`][].\n  S.extract =\n  def('extract', {w: [Z.Comonad]}, [w(a), a], Z.extract);\n\n  //# contramap :: Contravariant f => (b -> a) -> f a -> f b\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.contramap`][].\n  //.\n  //. ```javascript\n  //. > S.contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  S.contramap =\n  def('contramap',\n      {f: [Z.Contravariant]},\n      [Fn(b, a), f(a), f(b)],\n      Z.contramap);\n\n  //# filter :: (Applicative f, Foldable f, Monoid (f a)) => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.filter`][]. Filters its second argument in\n  //. accordance with the given predicate.\n  //.\n  //. See also [`filterM`](#filterM).\n  //.\n  //. ```javascript\n  //. > S.filter(S.odd, [1, 2, 3, 4, 5])\n  //. [1, 3, 5]\n  //. ```\n  S.filter =\n  def('filter',\n      {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n      [$.Predicate(a), f(a), f(a)],\n      Z.filter);\n\n  //# filterM :: (Alternative m, Monad m) => (a -> Boolean) -> m a -> m a\n  //.\n  //. Curried version of [`Z.filterM`][]. Filters its second argument in\n  //. accordance with the given predicate.\n  //.\n  //. See also [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > S.filterM(S.odd, [1, 2, 3, 4, 5])\n  //. [1, 3, 5]\n  //.\n  //. > S.filterM(S.odd, S.Just(9))\n  //. Just(9)\n  //.\n  //. > S.filterM(S.odd, S.Just(4))\n  //. Nothing\n  //. ```\n  S.filterM =\n  def('filterM',\n      {m: [Z.Alternative, Z.Monad]},\n      [$.Predicate(a), m(a), m(a)],\n      Z.filterM);\n\n  //# takeWhile :: (Foldable f, Alternative f) => (a -> Boolean) -> f a -> f a\n  //.\n  //. Discards the first inner value which does not satisfy the predicate, and\n  //. all subsequent inner values.\n  //.\n  //. ```javascript\n  //. > S.takeWhile(S.odd, [3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7]\n  //.\n  //. > S.takeWhile(S.even, [3, 3, 3, 7, 6, 3, 5, 4])\n  //. []\n  //. ```\n  S.takeWhile =\n  def('takeWhile',\n      {f: [Z.Foldable, Z.Alternative]},\n      [$.Predicate(a), f(a), f(a)],\n      Z.takeWhile);\n\n  //# dropWhile :: (Foldable f, Alternative f) => (a -> Boolean) -> f a -> f a\n  //.\n  //. Retains the first inner value which does not satisfy the predicate, and\n  //. all subsequent inner values.\n  //.\n  //. ```javascript\n  //. > S.dropWhile(S.odd, [3, 3, 3, 7, 6, 3, 5, 4])\n  //. [6, 3, 5, 4]\n  //.\n  //. > S.dropWhile(S.even, [3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7, 6, 3, 5, 4]\n  //. ```\n  S.dropWhile =\n  def('dropWhile',\n      {f: [Z.Foldable, Z.Alternative]},\n      [$.Predicate(a), f(a), f(a)],\n      Z.dropWhile);\n\n  //. ### Combinator\n\n  //# I :: a -> a\n  //.\n  //. The I combinator. Returns its argument. Equivalent to Haskell's `id`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.I('foo')\n  //. 'foo'\n  //. ```\n  function I(x) {\n    return x;\n  }\n  S.I = def('I', {}, [a, a], I);\n\n  //# K :: a -> b -> a\n  //.\n  //. The K combinator. Takes two values and returns the first. Equivalent to\n  //. Haskell's `const` function.\n  //.\n  //. ```javascript\n  //. > S.K('foo', 'bar')\n  //. 'foo'\n  //.\n  //. > S.map(S.K(42), S.range(0, 5))\n  //. [42, 42, 42, 42, 42]\n  //. ```\n  function K(x, y) {\n    return x;\n  }\n  S.K = def('K', {}, [a, b, a], K);\n\n  //# A :: (a -> b) -> a -> b\n  //.\n  //. The A combinator. Takes a function and a value, and returns the result\n  //. of applying the function to the value. Equivalent to Haskell's `($)`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.A(S.add(1), 42)\n  //. 43\n  //.\n  //. > S.map(S.A(S.__, 100), [S.add(1), Math.sqrt])\n  //. [101, 10]\n  //. ```\n  function A(f, x) {\n    return f(x);\n  }\n  S.A = def('A', {}, [Fn(a, b), a, b], A);\n\n  //# T :: a -> (a -> b) -> b\n  //.\n  //. The T ([thrush][]) combinator. Takes a value and a function, and returns\n  //. the result of applying the function to the value. Equivalent to Haskell's\n  //. `(&)` function.\n  //.\n  //. ```javascript\n  //. > S.T(42, S.add(1))\n  //. 43\n  //.\n  //. > S.map(S.T(100), [S.add(1), Math.sqrt])\n  //. [101, 10]\n  //. ```\n  function T(x, f) {\n    return f(x);\n  }\n  S.T = def('T', {}, [a, Fn(a, b), b], T);\n\n  //. ### Function\n\n  //# curry2 :: ((a, b) -> c) -> a -> b -> c\n  //.\n  //. Curries the given binary function.\n  //.\n  //. ```javascript\n  //. > S.map(S.curry2(Math.pow)(10), [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > S.map(S.curry2(Math.pow, 10), [1, 2, 3])\n  //. [10, 100, 1000]\n  //. ```\n  function curry2(f, x, y) {\n    return f(x, y);\n  }\n  S.curry2 =\n  def('curry2',\n      {},\n      [$.Function([a, b, c]), a, b, c],\n      curry2);\n\n  //# curry3 :: ((a, b, c) -> d) -> a -> b -> c -> d\n  //.\n  //. Curries the given ternary function.\n  //.\n  //. ```javascript\n  //. > global.replaceString = S.curry3((what, replacement, string) =>\n  //. .   string.replace(what, replacement)\n  //. . )\n  //. replaceString\n  //.\n  //. > replaceString('banana')('orange')('banana icecream')\n  //. 'orange icecream'\n  //.\n  //. > replaceString('banana', 'orange', 'banana icecream')\n  //. 'orange icecream'\n  //. ```\n  function curry3(f, x, y, z) {\n    return f(x, y, z);\n  }\n  S.curry3 =\n  def('curry3',\n      {},\n      [$.Function([a, b, c, d]), a, b, c, d],\n      curry3);\n\n  //# curry4 :: ((a, b, c, d) -> e) -> a -> b -> c -> d -> e\n  //.\n  //. Curries the given quaternary function.\n  //.\n  //. ```javascript\n  //. > global.createRect = S.curry4((x, y, width, height) =>\n  //. .   ({x, y, width, height})\n  //. . )\n  //. createRect\n  //.\n  //. > createRect(0)(0)(10)(10)\n  //. {x: 0, y: 0, width: 10, height: 10}\n  //.\n  //. > createRect(0, 0, 10, 10)\n  //. {x: 0, y: 0, width: 10, height: 10}\n  //. ```\n  function curry4(f, w, x, y, z) {\n    return f(w, x, y, z);\n  }\n  S.curry4 =\n  def('curry4',\n      {},\n      [$.Function([a, b, c, d, e]), a, b, c, d, e],\n      curry4);\n\n  //# curry5 :: ((a, b, c, d, e) -> f) -> a -> b -> c -> d -> e -> f\n  //.\n  //. Curries the given quinary function.\n  //.\n  //. ```javascript\n  //. > global.toUrl = S.curry5((protocol, creds, hostname, port, pathname) =>\n  //. .   protocol + '//' +\n  //. .   S.maybe('', _ => _.username + ':' + _.password + '@', creds) +\n  //. .   hostname +\n  //. .   S.maybe('', S.concat(':'), port) +\n  //. .   pathname\n  //. . )\n  //. toUrl\n  //.\n  //. > toUrl('https:')(S.Nothing)('example.com')(S.Just('443'))('/foo/bar')\n  //. 'https://example.com:443/foo/bar'\n  //.\n  //. > toUrl('https:', S.Nothing, 'example.com', S.Just('443'), '/foo/bar')\n  //. 'https://example.com:443/foo/bar'\n  //. ```\n  function curry5(f, v, w, x, y, z) {\n    return f(v, w, x, y, z);\n  }\n  S.curry5 =\n  def('curry5',\n      {},\n      [$.Function([a, b, c, d, e, r]), a, b, c, d, e, r],\n      curry5);\n\n  //# flip :: (a -> b -> c) -> b -> a -> c\n  //.\n  //. Takes a curried binary function and two values, and returns the\n  //. result of applying the function to the values in reverse order.\n  //.\n  //. This is the C combinator from combinatory logic.\n  //.\n  //. ```javascript\n  //. > S.flip(S.concat, 'foo', 'bar')\n  //. 'barfoo'\n  //. ```\n  function flip(f, x, y) {\n    return f(y)(x);\n  }\n  S.flip = def('flip', {}, [Fn(a, Fn(b, c)), b, a, c], flip);\n\n  //. ### Composition\n\n  //# compose :: Semigroupoid s => s b c -> s a b -> s a c\n  //.\n  //. Curried version of [`Z.compose`][].\n  //.\n  //. When specialized to Function, `compose` composes two unary functions,\n  //. from right to left (this is the B combinator from combinatory logic).\n  //.\n  //. The generalized type signature indicates that `compose` is compatible\n  //. with any [Semigroupoid][].\n  //.\n  //. See also [`pipe`](#pipe).\n  //.\n  //. ```javascript\n  //. > S.compose(Math.sqrt, S.add(1))(99)\n  //. 10\n  //. ```\n  S.compose =\n  def('compose',\n      {s: [Z.Semigroupoid]},\n      [s(b, c), s(a, b), s(a, c)],\n      Z.compose);\n\n  //# pipe :: [(a -> b), (b -> c), ..., (m -> n)] -> a -> n\n  //.\n  //. Takes an array of functions assumed to be unary and a value of any type,\n  //. and returns the result of applying the sequence of transformations to\n  //. the initial value.\n  //.\n  //. In general terms, `pipe` performs left-to-right composition of an array\n  //. of functions. `pipe([f, g, h], x)` is equivalent to `h(g(f(x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipe([S.add(1), Math.sqrt, S.sub(1)], 99)\n  //. 9\n  //. ```\n  function pipe(fs, x) {\n    return Z.reduce(function(x, f) { return f(x); }, x, fs);\n  }\n  S.pipe = def('pipe', {}, [$.Array($.AnyFunction), a, b], pipe);\n\n  //# on :: (b -> b -> c) -> (a -> b) -> a -> a -> c\n  //.\n  //. Takes a binary function `f`, a unary function `g`, and two\n  //. values `x` and `y`. Returns `f(g(x))(g(y))`.\n  //.\n  //. This is the P combinator from combinatory logic.\n  //.\n  //. ```javascript\n  //. > S.on(S.concat, S.reverse, [1, 2, 3], [4, 5, 6])\n  //. [3, 2, 1, 6, 5, 4]\n  //. ```\n  function on(f, g, x, y) {\n    return f(g(x))(g(y));\n  }\n  S.on = def('on', {}, [Fn(b, Fn(b, c)), Fn(a, b), a, a, c], on);\n\n  //. ### Maybe type\n  //.\n  //. The Maybe type represents optional values: a value of type `Maybe a` is\n  //. either a Just whose value is of type `a` or Nothing (with no value).\n  //.\n  //. The Maybe type satisfies the [Ord][], [Monoid][], [Monad][],\n  //. [Alternative][], [Traversable][], and [Extend][] specifications.\n\n  //# MaybeType :: Type -> Type\n  //.\n  //. A [`UnaryType`][UnaryType] for use with [sanctuary-def][].\n  S.MaybeType = $Maybe;\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. The [type representative](#type-representatives) for the Maybe type.\n  var Maybe = S.Maybe = {prototype: _Maybe.prototype};\n\n  Maybe.prototype.constructor = Maybe;\n\n  function _Maybe(tag, value) {\n    this.isNothing = tag === 'Nothing';\n    this.isJust = tag === 'Just';\n    if (this.isJust) this.value = value;\n\n    //  Add \"fantasy-land/concat\" method conditionally so that Just('abc')\n    //  satisfies the requirements of Semigroup but Just(123) does not.\n    if (this.isNothing || Z.Semigroup.test(this.value)) {\n      this['fantasy-land/concat'] = Maybe$prototype$concat;\n    }\n\n    if (this.isNothing || Z.Setoid.test(this.value)) {\n      this['fantasy-land/equals'] = Maybe$prototype$equals;\n    }\n\n    if (this.isNothing || Z.Ord.test(this.value)) {\n      this['fantasy-land/lte'] = Maybe$prototype$lte;\n    }\n  }\n\n  //# Nothing :: Maybe a\n  //.\n  //. Nothing.\n  //.\n  //. ```javascript\n  //. > S.Nothing\n  //. Nothing\n  //. ```\n  var Nothing = S.Nothing = new _Maybe('Nothing');\n\n  //# Just :: a -> Maybe a\n  //.\n  //. Takes a value of any type and returns a Just with the given value.\n  //.\n  //. ```javascript\n  //. > S.Just(42)\n  //. Just(42)\n  //. ```\n  function Just(x) {\n    return new _Maybe('Just', x);\n  }\n  S.Just = def('Just', {}, [a, $Maybe(a)], Just);\n\n  //# Maybe.@@type :: String\n  //.\n  //. Maybe type identifier, `'sanctuary/Maybe'`.\n  Maybe['@@type'] = maybeTypeIdent;\n\n  //# Maybe.fantasy-land/empty :: () -> Maybe a\n  //.\n  //. Returns Nothing.\n  //.\n  //. It is idiomatic to use [`empty`](#empty) rather than use this function\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.empty(S.Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/empty'] = function() { return Nothing; };\n\n  //# Maybe.fantasy-land/of :: a -> Maybe a\n  //.\n  //. Takes a value of any type and returns a Just with the given value.\n  //.\n  //. It is idiomatic to use [`of`](#of) rather than use this function\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.of(S.Maybe, 42)\n  //. Just(42)\n  //. ```\n  Maybe['fantasy-land/of'] = Just;\n\n  //# Maybe.fantasy-land/zero :: () -> Maybe a\n  //.\n  //. Returns Nothing.\n  //.\n  //. It is idiomatic to use [`zero`](#zero) rather than use this function\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.zero(S.Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/zero'] = function() { return Nothing; };\n\n  //# Maybe#isNothing :: Maybe a ~> Boolean\n  //.\n  //. `true` if `this` is Nothing; `false` if `this` is a Just.\n  //.\n  //. ```javascript\n  //. > S.Nothing.isNothing\n  //. true\n  //.\n  //. > S.Just(42).isNothing\n  //. false\n  //. ```\n\n  //# Maybe#isJust :: Maybe a ~> Boolean\n  //.\n  //. `true` if `this` is a Just; `false` if `this` is Nothing.\n  //.\n  //. ```javascript\n  //. > S.Just(42).isJust\n  //. true\n  //.\n  //. > S.Nothing.isJust\n  //. false\n  //. ```\n\n  //# Maybe#toString :: Maybe a ~> () -> String\n  //.\n  //. Returns the string representation of the Maybe.\n  //.\n  //. ```javascript\n  //. > S.toString(S.Nothing)\n  //. 'Nothing'\n  //.\n  //. > S.toString(S.Just([1, 2, 3]))\n  //. 'Just([1, 2, 3])'\n  //. ```\n  Maybe.prototype.toString = function() {\n    return this.isJust ? 'Just(' + Z.toString(this.value) + ')' : 'Nothing';\n  };\n\n  //# Maybe#inspect :: Maybe a ~> () -> String\n  //.\n  //. Returns the string representation of the Maybe. This method is used by\n  //. `util.inspect` and the REPL to format a Maybe for display.\n  //.\n  //. See also [`Maybe#toString`][].\n  //.\n  //. ```javascript\n  //. > S.Nothing.inspect()\n  //. 'Nothing'\n  //.\n  //. > S.Just([1, 2, 3]).inspect()\n  //. 'Just([1, 2, 3])'\n  //. ```\n  Maybe.prototype.inspect = function() { return this.toString(); };\n\n  //# Maybe#fantasy-land/equals :: Setoid a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //. Takes a value `m` of the same type and returns `true` if:\n  //.\n  //.   - `this` and `m` are both Nothing; or\n  //.\n  //.   - `this` and `m` are both Justs, and their values are equal according\n  //.     to [`Z.equals`][].\n  //.\n  //. It is idiomatic to use [`equals`](#equals) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.equals(S.Nothing, S.Nothing)\n  //. true\n  //.\n  //. > S.equals(S.Just([1, 2, 3]), S.Just([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals(S.Just([1, 2, 3]), S.Just([3, 2, 1]))\n  //. false\n  //.\n  //. > S.equals(S.Just([1, 2, 3]), S.Nothing)\n  //. false\n  //. ```\n  function Maybe$prototype$equals(other) {\n    return this.isNothing ? other.isNothing\n                          : other.isJust && Z.equals(this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/lte :: Ord a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //. Takes a value `m` of the same type and returns `true` if:\n  //.\n  //.   - `this` is Nothing; or\n  //.\n  //.   - `this` and `m` are both Justs and the value of `this` is less than\n  //.     or equal to the value of `m` according to [`Z.lte`][].\n  //.\n  //. It is idiomatic to use [`lte`](#lte) or [`lte_`](#lte_) rather than use\n  //. this method directly.\n  //.\n  //. ```javascript\n  //. > S.lte_(S.Nothing, S.Nothing)\n  //. true\n  //.\n  //. > S.lte_(S.Nothing, S.Just(0))\n  //. true\n  //.\n  //. > S.lte_(S.Just(0), S.Nothing)\n  //. false\n  //.\n  //. > S.lte_(S.Just(0), S.Just(1))\n  //. true\n  //.\n  //. > S.lte_(S.Just(1), S.Just(0))\n  //. false\n  //. ```\n  function Maybe$prototype$lte(other) {\n    return this.isNothing || other.isJust && Z.lte(this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/concat :: Semigroup a => Maybe a ~> Maybe a -> Maybe a\n  //.\n  //. Returns the result of concatenating two Maybe values of the same type.\n  //. `a` must have a [Semigroup][].\n  //.\n  //. If `this` is Nothing and the argument is Nothing, this method returns\n  //. Nothing.\n  //.\n  //. If `this` is a Just and the argument is a Just, this method returns a\n  //. Just whose value is the result of concatenating this Just's value and\n  //. the given Just's value.\n  //.\n  //. Otherwise, this method returns the Just.\n  //.\n  //. It is idiomatic to use [`concat`](#concat) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.concat(S.Nothing, S.Nothing)\n  //. Nothing\n  //.\n  //. > S.concat(S.Just([1, 2, 3]), S.Just([4, 5, 6]))\n  //. Just([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat(S.Nothing, S.Just([1, 2, 3]))\n  //. Just([1, 2, 3])\n  //.\n  //. > S.concat(S.Just([1, 2, 3]), S.Nothing)\n  //. Just([1, 2, 3])\n  //. ```\n  function Maybe$prototype$concat(other) {\n    return this.isNothing ?\n      other :\n      other.isNothing ? this : Just(Z.concat(this.value, other.value));\n  }\n\n  //# Maybe#fantasy-land/map :: Maybe a ~> (a -> b) -> Maybe b\n  //.\n  //. Takes a function and returns `this` if `this` is Nothing; otherwise\n  //. it returns a Just whose value is the result of applying the function\n  //. to this Just's value.\n  //.\n  //. It is idiomatic to use [`map`](#map) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.map(Math.sqrt, S.Nothing)\n  //. Nothing\n  //.\n  //. > S.map(Math.sqrt, S.Just(9))\n  //. Just(3)\n  //. ```\n  Maybe.prototype['fantasy-land/map'] = function(f) {\n    return this.isJust ? Just(f(this.value)) : this;\n  };\n\n  //# Maybe#fantasy-land/ap :: Maybe a ~> Maybe (a -> b) -> Maybe b\n  //.\n  //. Takes a Maybe and returns Nothing unless `this` is a Just *and* the\n  //. argument is a Just, in which case it returns a Just whose value is\n  //. the result of applying the given Just's value to this Just's value.\n  //.\n  //. It is idiomatic to use [`ap`](#ap) rather than use this method directly.\n  //.\n  //. ```javascript\n  //. > S.ap(S.Nothing, S.Nothing)\n  //. Nothing\n  //.\n  //. > S.ap(S.Nothing, S.Just(9))\n  //. Nothing\n  //.\n  //. > S.ap(S.Just(Math.sqrt), S.Nothing)\n  //. Nothing\n  //.\n  //. > S.ap(S.Just(Math.sqrt), S.Just(9))\n  //. Just(3)\n  //. ```\n  Maybe.prototype['fantasy-land/ap'] = function(other) {\n    return other.isJust ? Z.map(other.value, this) : other;\n  };\n\n  //# Maybe#fantasy-land/chain :: Maybe a ~> (a -> Maybe b) -> Maybe b\n  //.\n  //. Takes a function and returns `this` if `this` is Nothing; otherwise\n  //. it returns the result of applying the function to this Just's value.\n  //.\n  //. It is idiomatic to use [`chain`](#chain) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.chain(S.parseFloat, S.Nothing)\n  //. Nothing\n  //.\n  //. > S.chain(S.parseFloat, S.Just('xxx'))\n  //. Nothing\n  //.\n  //. > S.chain(S.parseFloat, S.Just('12.34'))\n  //. Just(12.34)\n  //. ```\n  Maybe.prototype['fantasy-land/chain'] = function(f) {\n    return this.isJust ? f(this.value) : this;\n  };\n\n  //# Maybe#fantasy-land/alt :: Maybe a ~> Maybe a -> Maybe a\n  //.\n  //. Chooses between `this` and the other Maybe provided as an argument.\n  //. Returns `this` if `this` is a Just; the other Maybe otherwise.\n  //.\n  //. It is idiomatic to use [`alt`](#alt) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.alt(S.Nothing, S.Nothing)\n  //. Nothing\n  //.\n  //. > S.alt(S.Nothing, S.Just(1))\n  //. Just(1)\n  //.\n  //. > S.alt(S.Just(2), S.Nothing)\n  //. Just(2)\n  //.\n  //. > S.alt(S.Just(3), S.Just(4))\n  //. Just(3)\n  //. ```\n  Maybe.prototype['fantasy-land/alt'] = function(other) {\n    return this.isJust ? this : other;\n  };\n\n  //# Maybe#fantasy-land/reduce :: Maybe a ~> ((b, a) -> b, b) -> b\n  //.\n  //. Takes a function and an initial value of any type, and returns:\n  //.\n  //.   - the initial value if `this` is Nothing; otherwise\n  //.\n  //.   - the result of applying the function to the initial value and this\n  //.     Just's value.\n  //.\n  //. It is idiomatic to use [`reduce`](#reduce) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.reduce(S.curry2(Math.pow), 10, S.Nothing)\n  //. 10\n  //.\n  //. > S.reduce(S.curry2(Math.pow), 10, S.Just(3))\n  //. 1000\n  //. ```\n  Maybe.prototype['fantasy-land/reduce'] = function(f, x) {\n    return this.isJust ? f(x, this.value) : x;\n  };\n\n  //# Maybe#fantasy-land/traverse :: Applicative f => Maybe a ~> (TypeRep f, a -> f b) -> f (Maybe b)\n  //.\n  //. Takes the type representative of some [Applicative][] and a function\n  //. which returns a value of that Applicative, and returns:\n  //.\n  //.   - the result of applying the type representative's [`of`][] function to\n  //.     `this` if `this` is Nothing; otherwise\n  //.\n  //.   - the result of mapping [`Just`](#Just) over the result of applying the\n  //.     first function to this Just's value.\n  //.\n  //. It is idiomatic to use [`traverse`](#traverse) rather than use this\n  //. method directly.\n  //.\n  //. ```javascript\n  //. > S.traverse(Array, S.words, S.Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse(Array, S.words, S.Just('foo bar baz'))\n  //. [Just('foo'), Just('bar'), Just('baz')]\n  //. ```\n  Maybe.prototype['fantasy-land/traverse'] = function(typeRep, f) {\n    return this.isJust ? Z.map(Just, f(this.value)) : Z.of(typeRep, this);\n  };\n\n  //# Maybe#fantasy-land/extend :: Maybe a ~> (Maybe a -> b) -> Maybe b\n  //.\n  //. Takes a function and returns `this` if `this` is Nothing; otherwise\n  //. it returns a Just whose value is the result of applying the function\n  //. to `this`.\n  //.\n  //. It is idiomatic to use [`extend`](#extend) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.extend(x => x.value + 1, S.Nothing)\n  //. Nothing\n  //.\n  //. > S.extend(x => x.value + 1, S.Just(42))\n  //. Just(43)\n  //. ```\n  Maybe.prototype['fantasy-land/extend'] = function(f) {\n    return this.isJust ? Just(f(this)) : this;\n  };\n\n  //# isNothing :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is Nothing; `false` if it is a Just.\n  //.\n  //. ```javascript\n  //. > S.isNothing(S.Nothing)\n  //. true\n  //.\n  //. > S.isNothing(S.Just(42))\n  //. false\n  //. ```\n  function isNothing(maybe) {\n    return maybe.isNothing;\n  }\n  S.isNothing = def('isNothing', {}, [$Maybe(a), $.Boolean], isNothing);\n\n  //# isJust :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is a Just; `false` if it is Nothing.\n  //.\n  //. ```javascript\n  //. > S.isJust(S.Just(42))\n  //. true\n  //.\n  //. > S.isJust(S.Nothing)\n  //. false\n  //. ```\n  function isJust(maybe) {\n    return maybe.isJust;\n  }\n  S.isJust = def('isJust', {}, [$Maybe(a), $.Boolean], isJust);\n\n  //# fromMaybe :: a -> Maybe a -> a\n  //.\n  //. Takes a default value and a Maybe, and returns the Maybe's value\n  //. if the Maybe is a Just; the default value otherwise.\n  //.\n  //. See also [`fromMaybe_`](#fromMaybe_) and\n  //. [`maybeToNullable`](#maybeToNullable).\n  //.\n  //. ```javascript\n  //. > S.fromMaybe(0, S.Just(42))\n  //. 42\n  //.\n  //. > S.fromMaybe(0, S.Nothing)\n  //. 0\n  //. ```\n  function fromMaybe(x, maybe) {\n    return maybe.isJust ? maybe.value : x;\n  }\n  S.fromMaybe = def('fromMaybe', {}, [a, $Maybe(a), a], fromMaybe);\n\n  //# fromMaybe_ :: (() -> a) -> Maybe a -> a\n  //.\n  //. Variant of [`fromMaybe`](#fromMaybe) which takes a thunk so the default\n  //. value is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib(n - 2) + fib(n - 1); }\n  //.\n  //. > S.fromMaybe_(() => fib(30), S.Just(1000000))\n  //. 1000000\n  //.\n  //. > S.fromMaybe_(() => fib(30), S.Nothing)\n  //. 832040\n  //. ```\n  function fromMaybe_(thunk, maybe) {\n    return maybe.isJust ? maybe.value : thunk();\n  }\n  S.fromMaybe_ = def('fromMaybe_', {}, [$.Thunk(a), $Maybe(a), a], fromMaybe_);\n\n  //# maybeToNullable :: Maybe a -> Nullable a\n  //.\n  //. Returns the given Maybe's value if the Maybe is a Just; `null` otherwise.\n  //. [Nullable][] is defined in [sanctuary-def][].\n  //.\n  //. See also [`fromMaybe`](#fromMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToNullable(S.Just(42))\n  //. 42\n  //.\n  //. > S.maybeToNullable(S.Nothing)\n  //. null\n  //. ```\n  function maybeToNullable(maybe) {\n    return maybe.isJust ? maybe.value : null;\n  }\n  S.maybeToNullable =\n  def('maybeToNullable', {}, [$Maybe(a), $.Nullable(a)], maybeToNullable);\n\n  //# toMaybe :: a? -> Maybe a\n  //.\n  //. Takes a value and returns Nothing if the value is `null` or `undefined`;\n  //. Just the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.toMaybe(null)\n  //. Nothing\n  //.\n  //. > S.toMaybe(42)\n  //. Just(42)\n  //. ```\n  function toMaybe(x) {\n    return x == null ? Nothing : Just(x);\n  }\n  S.toMaybe = def('toMaybe', {}, [a, $Maybe(a)], toMaybe);\n\n  //# maybe :: b -> (a -> b) -> Maybe a -> b\n  //.\n  //. Takes a value of any type, a function, and a Maybe. If the Maybe is\n  //. a Just, the return value is the result of applying the function to\n  //. the Just's value. Otherwise, the first argument is returned.\n  //.\n  //. See also [`maybe_`](#maybe_).\n  //.\n  //. ```javascript\n  //. > S.maybe(0, S.prop('length'), S.Just('refuge'))\n  //. 6\n  //.\n  //. > S.maybe(0, S.prop('length'), S.Nothing)\n  //. 0\n  //. ```\n  function maybe(x, f, maybe) {\n    return fromMaybe(x, Z.map(f, maybe));\n  }\n  S.maybe = def('maybe', {}, [b, Fn(a, b), $Maybe(a), b], maybe);\n\n  //# maybe_ :: (() -> b) -> (a -> b) -> Maybe a -> b\n  //.\n  //. Variant of [`maybe`](#maybe) which takes a thunk so the default value\n  //. is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib(n - 2) + fib(n - 1); }\n  //.\n  //. > S.maybe_(() => fib(30), Math.sqrt, S.Just(1000000))\n  //. 1000\n  //.\n  //. > S.maybe_(() => fib(30), Math.sqrt, S.Nothing)\n  //. 832040\n  //. ```\n  function maybe_(thunk, f, maybe) {\n    return maybe.isJust ? f(maybe.value) : thunk();\n  }\n  S.maybe_ = def('maybe_', {}, [$.Thunk(b), Fn(a, b), $Maybe(a), b], maybe_);\n\n  //# justs :: Array (Maybe a) -> Array a\n  //.\n  //. Takes an array of Maybes and returns an array containing each Just's\n  //. value. Equivalent to Haskell's `catMaybes` function.\n  //.\n  //. See also [`lefts`](#lefts) and [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.justs([S.Just('foo'), S.Nothing, S.Just('baz')])\n  //. ['foo', 'baz']\n  //. ```\n  function justs(maybes) {\n    return Z.reduce(function(xs, maybe) {\n      if (maybe.isJust) xs.push(maybe.value);\n      return xs;\n    }, [], maybes);\n  }\n  S.justs = def('justs', {}, [$.Array($Maybe(a)), $.Array(a)], justs);\n\n  //# mapMaybe :: (a -> Maybe b) -> Array a -> Array b\n  //.\n  //. Takes a function and an array, applies the function to each element of\n  //. the array, and returns an array of \"successful\" results. If the result of\n  //. applying the function to an element of the array is Nothing, the result\n  //. is discarded; if the result is a Just, the Just's value is included in\n  //. the output array.\n  //.\n  //. In general terms, `mapMaybe` filters an array while mapping over it.\n  //.\n  //. ```javascript\n  //. > S.mapMaybe(S.head, [[], [1, 2, 3], [], [4, 5, 6], []])\n  //. [1, 4]\n  //. ```\n  function mapMaybe(f, xs) {\n    return justs(Z.map(f, xs));\n  }\n  S.mapMaybe =\n  def('mapMaybe', {}, [Fn(a, $Maybe(b)), $.Array(a), $.Array(b)], mapMaybe);\n\n  //# encase :: (a -> b) -> a -> Maybe b\n  //.\n  //. Takes a unary function `f` which may throw and a value `x` of any type,\n  //. and applies `f` to `x` inside a `try` block. If an exception is caught,\n  //. the return value is Nothing; otherwise the return value is Just the\n  //. result of applying `f` to `x`.\n  //.\n  //. See also [`encaseEither`](#encaseEither).\n  //.\n  //. ```javascript\n  //. > S.encase(eval, '1 + 1')\n  //. Just(2)\n  //.\n  //. > S.encase(eval, '1 +')\n  //. Nothing\n  //. ```\n  function encase(f, x) {\n    try {\n      return Just(f(x));\n    } catch (err) {\n      return Nothing;\n    }\n  }\n  S.encase = def('encase', {}, [Fn(a, b), a, $Maybe(b)], encase);\n\n  //# encase2 :: (a -> b -> c) -> a -> b -> Maybe c\n  //.\n  //. Binary version of [`encase`](#encase).\n  function encase2(f, x, y) {\n    try {\n      return Just(f(x)(y));\n    } catch (err) {\n      return Nothing;\n    }\n  }\n  S.encase2 = def('encase2', {}, [Fn(a, Fn(b, c)), a, b, $Maybe(c)], encase2);\n\n  //# encase3 :: (a -> b -> c -> d) -> a -> b -> c -> Maybe d\n  //.\n  //. Ternary version of [`encase`](#encase).\n  function encase3(f, x, y, z) {\n    try {\n      return Just(f(x)(y)(z));\n    } catch (err) {\n      return Nothing;\n    }\n  }\n  S.encase3 =\n  def('encase3', {}, [Fn(a, Fn(b, Fn(c, d))), a, b, c, $Maybe(d)], encase3);\n\n  //# maybeToEither :: a -> Maybe b -> Either a b\n  //.\n  //. Converts a Maybe to an Either. Nothing becomes a Left (containing the\n  //. first argument); a Just becomes a Right.\n  //.\n  //. See also [`eitherToMaybe`](#eitherToMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToEither('Expecting an integer', S.parseInt(10, 'xyz'))\n  //. Left('Expecting an integer')\n  //.\n  //. > S.maybeToEither('Expecting an integer', S.parseInt(10, '42'))\n  //. Right(42)\n  //. ```\n  function maybeToEither(x, maybe) {\n    return maybe.isNothing ? Left(x) : Right(maybe.value);\n  }\n  S.maybeToEither =\n  def('maybeToEither', {}, [a, $Maybe(b), $Either(a, b)], maybeToEither);\n\n  //. ### Either type\n  //.\n  //. The Either type represents values with two possibilities: a value of type\n  //. `Either a b` is either a Left whose value is of type `a` or a Right whose\n  //. value is of type `b`.\n  //.\n  //. The Either type satisfies the [Ord][], [Semigroup][], [Monad][],\n  //. [Alt][], [Traversable][], [Extend][], and [Bifunctor][] specifications.\n\n  //# EitherType :: Type -> Type -> Type\n  //.\n  //. A [`BinaryType`][BinaryType] for use with [sanctuary-def][].\n  S.EitherType = $Either;\n\n  //# Either :: TypeRep Either\n  //.\n  //. The [type representative](#type-representatives) for the Either type.\n  var Either = S.Either = {prototype: _Either.prototype};\n\n  Either.prototype.constructor = Either;\n\n  function _Either(tag, value) {\n    this.isLeft = tag === 'Left';\n    this.isRight = tag === 'Right';\n    this.value = value;\n\n    //  Add \"fantasy-land/concat\" method conditionally so that Left('abc')\n    //  and Right('abc') satisfy the requirements of Semigroup but Left(123)\n    //  and Right(123) do not.\n    if (Z.Semigroup.test(this.value)) {\n      this['fantasy-land/concat'] = Either$prototype$concat;\n    }\n\n    if (Z.Setoid.test(this.value)) {\n      this['fantasy-land/equals'] = Either$prototype$equals;\n    }\n\n    if (Z.Ord.test(this.value)) {\n      this['fantasy-land/lte'] = Either$prototype$lte;\n    }\n  }\n\n  //# Left :: a -> Either a b\n  //.\n  //. Takes a value of any type and returns a Left with the given value.\n  //.\n  //. ```javascript\n  //. > S.Left('Cannot divide by zero')\n  //. Left('Cannot divide by zero')\n  //. ```\n  function Left(x) {\n    return new _Either('Left', x);\n  }\n  S.Left = def('Left', {}, [a, $Either(a, b)], Left);\n\n  //# Right :: b -> Either a b\n  //.\n  //. Takes a value of any type and returns a Right with the given value.\n  //.\n  //. ```javascript\n  //. > S.Right(42)\n  //. Right(42)\n  //. ```\n  function Right(x) {\n    return new _Either('Right', x);\n  }\n  S.Right = def('Right', {}, [b, $Either(a, b)], Right);\n\n  //# Either.@@type :: String\n  //.\n  //. Either type identifier, `'sanctuary/Either'`.\n  Either['@@type'] = eitherTypeIdent;\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //. Takes a value of any type and returns a Right with the given value.\n  //.\n  //. It is idiomatic to use [`of`](#of) rather than use this function\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.of(S.Either, 42)\n  //. Right(42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  //# Either#isLeft :: Either a b ~> Boolean\n  //.\n  //. `true` if `this` is a Left; `false` if `this` is a Right.\n  //.\n  //. ```javascript\n  //. > S.Left('Cannot divide by zero').isLeft\n  //. true\n  //.\n  //. > S.Right(42).isLeft\n  //. false\n  //. ```\n\n  //# Either#isRight :: Either a b ~> Boolean\n  //.\n  //. `true` if `this` is a Right; `false` if `this` is a Left.\n  //.\n  //. ```javascript\n  //. > S.Right(42).isRight\n  //. true\n  //.\n  //. > S.Left('Cannot divide by zero').isRight\n  //. false\n  //. ```\n\n  //# Either#toString :: Either a b ~> () -> String\n  //.\n  //. Returns the string representation of the Either.\n  //.\n  //. ```javascript\n  //. > S.toString(S.Left('Cannot divide by zero'))\n  //. 'Left(\"Cannot divide by zero\")'\n  //.\n  //. > S.toString(S.Right([1, 2, 3]))\n  //. 'Right([1, 2, 3])'\n  //. ```\n  Either.prototype.toString = function() {\n    return (this.isLeft ? 'Left' : 'Right') +\n           '(' + Z.toString(this.value) + ')';\n  };\n\n  //# Either#inspect :: Either a b ~> () -> String\n  //.\n  //. Returns the string representation of the Either. This method is used by\n  //. `util.inspect` and the REPL to format a Either for display.\n  //.\n  //. See also [`Either#toString`][].\n  //.\n  //. ```javascript\n  //. > S.Left('Cannot divide by zero').inspect()\n  //. 'Left(\"Cannot divide by zero\")'\n  //.\n  //. > S.Right([1, 2, 3]).inspect()\n  //. 'Right([1, 2, 3])'\n  //. ```\n  Either.prototype.inspect = function() { return this.toString(); };\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //. Takes a value `e` of the same type and returns `true` if:\n  //.\n  //.   - `this` and `e` are both Lefts or both Rights, and their values are\n  //.     equal according to [`Z.equals`][].\n  //.\n  //. It is idiomatic to use [`equals`](#equals) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.equals(S.Right([1, 2, 3]), S.Right([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals(S.Right([1, 2, 3]), S.Left([1, 2, 3]))\n  //. false\n  //. ```\n  function Either$prototype$equals(other) {\n    return this.isLeft === other.isLeft && Z.equals(this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //. Takes a value `e` of the same type and returns `true` if:\n  //.\n  //.   - `this` is a Left and `e` is a Right; or\n  //.\n  //.   - `this` and `e` are both Lefts or both Rights, and the value of `this`\n  //.     is less than or equal to the value of `e` according to [`Z.lte`][].\n  //.\n  //. It is idiomatic to use [`lte`](#lte) or [`lte_`](#lte_) rather than use\n  //. this method directly.\n  //.\n  //. ```javascript\n  //. > S.lte_(S.Left(10), S.Right(0))\n  //. true\n  //.\n  //. > S.lte_(S.Right(0), S.Left(10))\n  //. false\n  //.\n  //. > S.lte_(S.Right(0), S.Right(1))\n  //. true\n  //.\n  //. > S.lte_(S.Right(1), S.Right(0))\n  //. false\n  //. ```\n  function Either$prototype$lte(other) {\n    return this.isLeft === other.isLeft ?\n      Z.lte(this.value, other.value) :\n      this.isLeft;\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //. Returns the result of concatenating two Either values of the same type.\n  //. `a` must have a [Semigroup][], as must `b`.\n  //.\n  //. If `this` is a Left and the argument is a Left, this method returns a\n  //. Left whose value is the result of concatenating this Left's value and\n  //. the given Left's value.\n  //.\n  //. If `this` is a Right and the argument is a Right, this method returns a\n  //. Right whose value is the result of concatenating this Right's value and\n  //. the given Right's value.\n  //.\n  //. Otherwise, this method returns the Right.\n  //.\n  //. It is idiomatic to use [`concat`](#concat) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.concat(S.Left('abc'), S.Left('def'))\n  //. Left('abcdef')\n  //.\n  //. > S.concat(S.Right([1, 2, 3]), S.Right([4, 5, 6]))\n  //. Right([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat(S.Left('abc'), S.Right([1, 2, 3]))\n  //. Right([1, 2, 3])\n  //.\n  //. > S.concat(S.Right([1, 2, 3]), S.Left('abc'))\n  //. Right([1, 2, 3])\n  //. ```\n  function Either$prototype$concat(other) {\n    return this.isLeft ?\n      other.isLeft ? Left(Z.concat(this.value, other.value)) : other :\n      other.isLeft ? this : Right(Z.concat(this.value, other.value));\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //. Takes a function and returns `this` if `this` is a Left; otherwise it\n  //. returns a Right whose value is the result of applying the function to\n  //. this Right's value.\n  //.\n  //. It is idiomatic to use [`map`](#map) rather than use this method\n  //. directly.\n  //.\n  //. See also [`Either#fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > S.map(Math.sqrt, S.Left('Cannot divide by zero'))\n  //. Left('Cannot divide by zero')\n  //.\n  //. > S.map(Math.sqrt, S.Right(9))\n  //. Right(3)\n  //. ```\n  Either.prototype['fantasy-land/map'] = function(f) {\n    return this.isRight ? Right(f(this.value)) : this;\n  };\n\n  //# Either#fantasy-land/bimap :: Either a b ~> (a -> c, b -> d) -> Either c d\n  //.\n  //. Takes two functions and returns:\n  //.\n  //.   - a Left whose value is the result of applying the first function\n  //.     to this Left's value if `this` is a Left; otherwise\n  //.\n  //.   - a Right whose value is the result of applying the second function\n  //.     to this Right's value.\n  //.\n  //. Similar to [`Either#fantasy-land/map`][], but supports mapping over the\n  //. left side as well as the right side.\n  //.\n  //. It is idiomatic to use [`bimap`](#bimap) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.bimap(S.toUpper, S.add(1), S.Left('abc'))\n  //. Left('ABC')\n  //.\n  //. > S.bimap(S.toUpper, S.add(1), S.Right(42))\n  //. Right(43)\n  //. ```\n  Either.prototype['fantasy-land/bimap'] = function(f, g) {\n    return this.isLeft ? Left(f(this.value)) : Right(g(this.value));\n  };\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //. Takes an Either and returns a Left unless `this` is a Right *and* the\n  //. argument is a Right, in which case it returns a Right whose value is\n  //. the result of applying the given Right's value to this Right's value.\n  //.\n  //. It is idiomatic to use [`ap`](#ap) rather than use this method directly.\n  //.\n  //. ```javascript\n  //. > S.ap(S.Left('No such function'), S.Left('Cannot divide by zero'))\n  //. Left('No such function')\n  //.\n  //. > S.ap(S.Left('No such function'), S.Right(9))\n  //. Left('No such function')\n  //.\n  //. > S.ap(S.Right(Math.sqrt), S.Left('Cannot divide by zero'))\n  //. Left('Cannot divide by zero')\n  //.\n  //. > S.ap(S.Right(Math.sqrt), S.Right(9))\n  //. Right(3)\n  //. ```\n  Either.prototype['fantasy-land/ap'] = function(other) {\n    return other.isRight ? Z.map(other.value, this) : other;\n  };\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //. Takes a function and returns `this` if `this` is a Left; otherwise\n  //. it returns the result of applying the function to this Right's value.\n  //.\n  //. It is idiomatic to use [`chain`](#chain) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > global.sqrt = n =>\n  //. .   n < 0 ? S.Left('Cannot represent square root of negative number')\n  //. .         : S.Right(Math.sqrt(n))\n  //. sqrt\n  //.\n  //. > S.chain(sqrt, S.Left('Cannot divide by zero'))\n  //. Left('Cannot divide by zero')\n  //.\n  //. > S.chain(sqrt, S.Right(-1))\n  //. Left('Cannot represent square root of negative number')\n  //.\n  //. > S.chain(sqrt, S.Right(25))\n  //. Right(5)\n  //. ```\n  Either.prototype['fantasy-land/chain'] = function(f) {\n    return this.isRight ? f(this.value) : this;\n  };\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //. Chooses between `this` and the other Either provided as an argument.\n  //. Returns `this` if `this` is a Right; the other Either otherwise.\n  //.\n  //. It is idiomatic to use [`alt`](#alt) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.alt(S.Left('A'), S.Left('B'))\n  //. Left('B')\n  //.\n  //. > S.alt(S.Left('C'), S.Right(1))\n  //. Right(1)\n  //.\n  //. > S.alt(S.Right(2), S.Left('D'))\n  //. Right(2)\n  //.\n  //. > S.alt(S.Right(3), S.Right(4))\n  //. Right(3)\n  //. ```\n  Either.prototype['fantasy-land/alt'] = function(other) {\n    return this.isRight ? this : other;\n  };\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //. Takes a function and an initial value of any type, and returns:\n  //.\n  //.   - the initial value if `this` is a Left; otherwise\n  //.\n  //.   - the result of applying the function to the initial value and this\n  //.     Right's value.\n  //.\n  //. It is idiomatic to use [`reduce`](#reduce) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.reduce(S.curry2(Math.pow), 10, S.Left('Cannot divide by zero'))\n  //. 10\n  //.\n  //. > S.reduce(S.curry2(Math.pow), 10, S.Right(3))\n  //. 1000\n  //. ```\n  Either.prototype['fantasy-land/reduce'] = function(f, x) {\n    return this.isRight ? f(x, this.value) : x;\n  };\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //. Takes the type representative of some [Applicative][] and a function\n  //. which returns a value of that Applicative, and returns:\n  //.\n  //.   - the result of applying the type representative's [`of`][] function to\n  //.     `this` if `this` is a Left; otherwise\n  //.\n  //.   - the result of mapping [`Right`](#Right) over the result of applying\n  //.     the first function to this Right's value.\n  //.\n  //. It is idiomatic to use [`traverse`](#traverse) rather than use this\n  //. method directly.\n  //.\n  //. ```javascript\n  //. > S.traverse(Array, S.words, S.Left('Request failed'))\n  //. [Left('Request failed')]\n  //.\n  //. > S.traverse(Array, S.words, S.Right('foo bar baz'))\n  //. [Right('foo'), Right('bar'), Right('baz')]\n  //. ```\n  Either.prototype['fantasy-land/traverse'] = function(typeRep, f) {\n    return this.isRight ? Z.map(Right, f(this.value)) : Z.of(typeRep, this);\n  };\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //. Takes a function and returns `this` if `this` is a Left; otherwise it\n  //. returns a Right whose value is the result of applying the function to\n  //. `this`.\n  //.\n  //. It is idiomatic to use [`extend`](#extend) rather than use this method\n  //. directly.\n  //.\n  //. ```javascript\n  //. > S.extend(x => x.value + 1, S.Left('Cannot divide by zero'))\n  //. Left('Cannot divide by zero')\n  //.\n  //. > S.extend(x => x.value + 1, S.Right(42))\n  //. Right(43)\n  //. ```\n  Either.prototype['fantasy-land/extend'] = function(f) {\n    return this.isLeft ? this : Right(f(this));\n  };\n\n  //# isLeft :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Left; `false` if it is a Right.\n  //.\n  //. ```javascript\n  //. > S.isLeft(S.Left('Cannot divide by zero'))\n  //. true\n  //.\n  //. > S.isLeft(S.Right(42))\n  //. false\n  //. ```\n  function isLeft(either) {\n    return either.isLeft;\n  }\n  S.isLeft = def('isLeft', {}, [$Either(a, b), $.Boolean], isLeft);\n\n  //# isRight :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Right; `false` if it is a Left.\n  //.\n  //. ```javascript\n  //. > S.isRight(S.Right(42))\n  //. true\n  //.\n  //. > S.isRight(S.Left('Cannot divide by zero'))\n  //. false\n  //. ```\n  function isRight(either) {\n    return either.isRight;\n  }\n  S.isRight = def('isRight', {}, [$Either(a, b), $.Boolean], isRight);\n\n  //# fromEither :: b -> Either a b -> b\n  //.\n  //. Takes a default value and an Either, and returns the Right value\n  //. if the Either is a Right; the default value otherwise.\n  //.\n  //. ```javascript\n  //. > S.fromEither(0, S.Right(42))\n  //. 42\n  //.\n  //. > S.fromEither(0, S.Left(42))\n  //. 0\n  //. ```\n  function fromEither(x, either) {\n    return either.isRight ? either.value : x;\n  }\n  S.fromEither = def('fromEither', {}, [b, $Either(a, b), b], fromEither);\n\n  //# toEither :: a -> b? -> Either a b\n  //.\n  //. Converts an arbitrary value to an Either: a Left if the value is `null`\n  //. or `undefined`; a Right otherwise. The first argument specifies the\n  //. value of the Left in the \"failure\" case.\n  //.\n  //. ```javascript\n  //. > S.toEither('XYZ', null)\n  //. Left('XYZ')\n  //.\n  //. > S.toEither('XYZ', 'ABC')\n  //. Right('ABC')\n  //.\n  //. > S.map(S.prop('0'), S.toEither('Invalid protocol', 'ftp://example.com/'.match(/^https?:/)))\n  //. Left('Invalid protocol')\n  //.\n  //. > S.map(S.prop('0'), S.toEither('Invalid protocol', 'https://example.com/'.match(/^https?:/)))\n  //. Right('https:')\n  //. ```\n  function toEither(x, y) {\n    return y == null ? Left(x) : Right(y);\n  }\n  S.toEither = def('toEither', {}, [a, b, $Either(a, b)], toEither);\n\n  //# either :: (a -> c) -> (b -> c) -> Either a b -> c\n  //.\n  //. Takes two functions and an Either, and returns the result of\n  //. applying the first function to the Left's value, if the Either\n  //. is a Left, or the result of applying the second function to the\n  //. Right's value, if the Either is a Right.\n  //.\n  //. ```javascript\n  //. > S.either(S.toUpper, S.toString, S.Left('Cannot divide by zero'))\n  //. 'CANNOT DIVIDE BY ZERO'\n  //.\n  //. > S.either(S.toUpper, S.toString, S.Right(42))\n  //. '42'\n  //. ```\n  function either(l, r, either) {\n    return either.isLeft ? l(either.value) : r(either.value);\n  }\n  S.either = def('either', {}, [Fn(a, c), Fn(b, c), $Either(a, b), c], either);\n\n  //# lefts :: Array (Either a b) -> Array a\n  //.\n  //. Takes an array of Eithers and returns an array containing each Left's\n  //. value.\n  //.\n  //. See also [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.lefts([S.Right(20), S.Left('foo'), S.Right(10), S.Left('bar')])\n  //. ['foo', 'bar']\n  //. ```\n  function lefts(eithers) {\n    return Z.reduce(function(xs, either) {\n      if (either.isLeft) xs.push(either.value);\n      return xs;\n    }, [], eithers);\n  }\n  S.lefts = def('lefts', {}, [$.Array($Either(a, b)), $.Array(a)], lefts);\n\n  //# rights :: Array (Either a b) -> Array b\n  //.\n  //. Takes an array of Eithers and returns an array containing each Right's\n  //. value.\n  //.\n  //. See also [`lefts`](#lefts).\n  //.\n  //. ```javascript\n  //. > S.rights([S.Right(20), S.Left('foo'), S.Right(10), S.Left('bar')])\n  //. [20, 10]\n  //. ```\n  function rights(eithers) {\n    return Z.reduce(function(xs, either) {\n      if (either.isRight) xs.push(either.value);\n      return xs;\n    }, [], eithers);\n  }\n  S.rights = def('rights', {}, [$.Array($Either(a, b)), $.Array(b)], rights);\n\n  //# tagBy :: (a -> Boolean) -> a -> Either a a\n  //.\n  //. Takes a predicate and a value, and returns a Right of the value if it\n  //. satisfies the predicate; a Left of the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.tagBy(S.odd, 0)\n  //. Left(0)\n  //\n  //. > S.tagBy(S.odd, 1)\n  //. Right(1)\n  //. ```\n  function tagBy(pred, a) {\n    return pred(a) ? Right(a) : Left(a);\n  }\n  S.tagBy = def('tagBy', {}, [$.Predicate(a), a, $Either(a, a)], tagBy);\n\n  //# encaseEither :: (Error -> l) -> (a -> r) -> a -> Either l r\n  //.\n  //. Takes two unary functions, `f` and `g`, the second of which may throw,\n  //. and a value `x` of any type. Applies `g` to `x` inside a `try` block.\n  //. If an exception is caught, the return value is a Left containing the\n  //. result of applying `f` to the caught Error object; otherwise the return\n  //. value is a Right containing the result of applying `g` to `x`.\n  //.\n  //. See also [`encase`](#encase).\n  //.\n  //. ```javascript\n  //. > S.encaseEither(S.I, JSON.parse, '[\"foo\",\"bar\",\"baz\"]')\n  //. Right(['foo', 'bar', 'baz'])\n  //.\n  //. > S.encaseEither(S.I, JSON.parse, '[')\n  //. Left(new SyntaxError('Unexpected end of JSON input'))\n  //.\n  //. > S.encaseEither(S.prop('message'), JSON.parse, '[')\n  //. Left('Unexpected end of JSON input')\n  //. ```\n  function encaseEither(f, g, x) {\n    try {\n      return Right(g(x));\n    } catch (err) {\n      return Left(f(err));\n    }\n  }\n  S.encaseEither =\n  def('encaseEither',\n      {},\n      [Fn($.Error, l), Fn(a, r), a, $Either(l, r)],\n      encaseEither);\n\n  //# encaseEither2 :: (Error -> l) -> (a -> b -> r) -> a -> b -> Either l r\n  //.\n  //. Binary version of [`encaseEither`](#encaseEither).\n  function encaseEither2(f, g, x, y) {\n    try {\n      return Right(g(x)(y));\n    } catch (err) {\n      return Left(f(err));\n    }\n  }\n  S.encaseEither2 =\n  def('encaseEither2',\n      {},\n      [Fn($.Error, l), Fn(a, Fn(b, r)), a, b, $Either(l, r)],\n      encaseEither2);\n\n  //# encaseEither3 :: (Error -> l) -> (a -> b -> c -> r) -> a -> b -> c -> Either l r\n  //.\n  //. Ternary version of [`encaseEither`](#encaseEither).\n  function encaseEither3(f, g, x, y, z) {\n    try {\n      return Right(g(x)(y)(z));\n    } catch (err) {\n      return Left(f(err));\n    }\n  }\n  S.encaseEither3 =\n  def('encaseEither3',\n      {},\n      [Fn($.Error, l), Fn(a, Fn(b, Fn(c, r))), a, b, c, $Either(l, r)],\n      encaseEither3);\n\n  //# eitherToMaybe :: Either a b -> Maybe b\n  //.\n  //. Converts an Either to a Maybe. A Left becomes Nothing; a Right becomes\n  //. a Just.\n  //.\n  //. See also [`maybeToEither`](#maybeToEither).\n  //.\n  //. ```javascript\n  //. > S.eitherToMaybe(S.Left('Cannot divide by zero'))\n  //. Nothing\n  //.\n  //. > S.eitherToMaybe(S.Right(42))\n  //. Just(42)\n  //. ```\n  function eitherToMaybe(either) {\n    return either.isLeft ? Nothing : Just(either.value);\n  }\n  S.eitherToMaybe =\n  def('eitherToMaybe', {}, [$Either(a, b), $Maybe(b)], eitherToMaybe);\n\n  //. ### Logic\n\n  //# and :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"and\".\n  //.\n  //. ```javascript\n  //. > S.and(false, false)\n  //. false\n  //.\n  //. > S.and(false, true)\n  //. false\n  //.\n  //. > S.and(true, false)\n  //. false\n  //.\n  //. > S.and(true, true)\n  //. true\n  //. ```\n  function and(x, y) {\n    return x.valueOf() && y.valueOf();\n  }\n  S.and = def('and', {}, [$.Boolean, $.Boolean, $.Boolean], and);\n\n  //# or :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"or\".\n  //.\n  //. ```javascript\n  //. > S.or(false, false)\n  //. false\n  //.\n  //. > S.or(false, true)\n  //. true\n  //.\n  //. > S.or(true, false)\n  //. true\n  //.\n  //. > S.or(true, true)\n  //. true\n  //. ```\n  function or(x, y) {\n    return x.valueOf() || y.valueOf();\n  }\n  S.or = def('or', {}, [$.Boolean, $.Boolean, $.Boolean], or);\n\n  //# not :: Boolean -> Boolean\n  //.\n  //. Boolean \"not\".\n  //.\n  //. See also [`complement`](#complement).\n  //.\n  //. ```javascript\n  //. > S.not(false)\n  //. true\n  //.\n  //. > S.not(true)\n  //. false\n  //. ```\n  function not(x) {\n    return !x.valueOf();\n  }\n  S.not = def('not', {}, [$.Boolean, $.Boolean], not);\n\n  //# complement :: (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a unary predicate and a value of any type, and returns the logical\n  //. negation of applying the predicate to the value.\n  //.\n  //. See also [`not`](#not).\n  //.\n  //. ```javascript\n  //. > Number.isInteger(42)\n  //. true\n  //.\n  //. > S.complement(Number.isInteger, 42)\n  //. false\n  //. ```\n  function complement(pred, x) {\n    return !pred(x);\n  }\n  S.complement =\n  def('complement', {}, [$.Predicate(a), a, $.Boolean], complement);\n\n  //# ifElse :: (a -> Boolean) -> (a -> b) -> (a -> b) -> a -> b\n  //.\n  //. Takes a unary predicate, a unary \"if\" function, a unary \"else\"\n  //. function, and a value of any type, and returns the result of\n  //. applying the \"if\" function to the value if the value satisfies\n  //. the predicate; the result of applying the \"else\" function to the\n  //. value otherwise.\n  //.\n  //. See also [`when`](#when) and [`unless`](#unless).\n  //.\n  //. ```javascript\n  //. > S.ifElse(x => x < 0, Math.abs, Math.sqrt, -1)\n  //. 1\n  //.\n  //. > S.ifElse(x => x < 0, Math.abs, Math.sqrt, 16)\n  //. 4\n  //. ```\n  function ifElse(pred, f, g, x) {\n    return pred(x) ? f(x) : g(x);\n  }\n  S.ifElse =\n  def('ifElse', {}, [$.Predicate(a), Fn(a, b), Fn(a, b), a, b], ifElse);\n\n  //# when :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. satisfies the predicate; the value otherwise.\n  //.\n  //. See also [`unless`](#unless) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.when(x => x >= 0, Math.sqrt, 16)\n  //. 4\n  //.\n  //. > S.when(x => x >= 0, Math.sqrt, -1)\n  //. -1\n  //. ```\n  function when(pred, f, x) {\n    return ifElse(pred, f, I, x);\n  }\n  S.when = def('when', {}, [$.Predicate(a), Fn(a, a), a, a], when);\n\n  //# unless :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. does not satisfy the predicate; the value otherwise.\n  //.\n  //. See also [`when`](#when) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.unless(x => x < 0, Math.sqrt, 16)\n  //. 4\n  //.\n  //. > S.unless(x => x < 0, Math.sqrt, -1)\n  //. -1\n  //. ```\n  function unless(pred, f, x) {\n    return ifElse(pred, I, f, x);\n  }\n  S.unless = def('unless', {}, [$.Predicate(a), Fn(a, a), a, a], unless);\n\n  //# allPass :: Foldable f => f (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a structure containing zero or more predicates, and a value\n  //. of any type. Returns `true` [iff][] the value satisfies all of the\n  //. predicates. None of the subsequent predicates will be applied after\n  //. the first predicate not satisfied.\n  //.\n  //. ```javascript\n  //. > S.allPass([S.test(/q/), S.test(/u/), S.test(/i/)], 'quiessence')\n  //. true\n  //.\n  //. > S.allPass([S.test(/q/), S.test(/u/), S.test(/i/)], 'fissiparous')\n  //. false\n  //. ```\n  function allPass(preds, x) {\n    return Z.reduce(function(b, p) { return b && p(x); }, true, preds);\n  }\n  S.allPass =\n  def('allPass',\n      {f: [Z.Foldable]},\n      [f($.Predicate(a)), a, $.Boolean],\n      allPass);\n\n  //# anyPass :: Foldable f => f (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a structure containing zero or more predicates, and a value\n  //. of any type. Returns `true` [iff][] the value satisfies any of the\n  //. predicates. None of the subsequent predicates will be applied after\n  //. the first predicate satisfied.\n  //.\n  //. ```javascript\n  //. > S.anyPass([S.test(/q/), S.test(/u/), S.test(/i/)], 'incandescent')\n  //. true\n  //.\n  //. > S.anyPass([S.test(/q/), S.test(/u/), S.test(/i/)], 'empathy')\n  //. false\n  //. ```\n  function anyPass(preds, x) {\n    return Z.reduce(function(b, p) { return b || p(x); }, false, preds);\n  }\n  S.anyPass =\n  def('anyPass',\n      {f: [Z.Foldable]},\n      [f($.Predicate(a)), a, $.Boolean],\n      anyPass);\n\n  //. ### List\n  //.\n  //. The List type constructor enables type signatures to describe ad hoc\n  //. polymorphic functions which operate on either [`Array`][$.Array] or\n  //. [`String`][$.String] values.\n  //.\n  //. Mental gymnastics are required to treat arrays and strings similarly.\n  //. `[1, 2, 3]` is a list containing `1`, `2`, and `3`. `'abc'` is a list\n  //. containing `'a'`, `'b'`, and `'c'`. But what is the type of `'a'`?\n  //. `String`, since JavaScript has no Char type! Thus:\n  //.\n  //.     'abc' :: String, List String, List (List String), ...\n  //.\n  //. Every member of `String` is also a member of `List String`!\n\n  //# slice :: Integer -> Integer -> List a -> Maybe (List a)\n  //.\n  //. Returns Just a list containing the elements from the supplied list\n  //. from a beginning index (inclusive) to an end index (exclusive).\n  //. Returns Nothing unless the start interval is less than or equal to\n  //. the end interval, and the list contains both (half-open) intervals.\n  //. Accepts negative indices, which indicate an offset from the end of\n  //. the list.\n  //.\n  //. See also [`take`](#take), [`drop`](#drop), [`takeLast`](#takeLast),\n  //. and [`dropLast`](#dropLast).\n  //.\n  //. ```javascript\n  //. > S.slice(1, 3, ['a', 'b', 'c', 'd', 'e'])\n  //. Just(['b', 'c'])\n  //.\n  //. > S.slice(-3, -1, ['a', 'b', 'c', 'd', 'e'])\n  //. Just(['c', 'd'])\n  //.\n  //. > S.slice(1, 6, ['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //.\n  //. > S.slice(2, 6, 'banana')\n  //. Just('nana')\n  //. ```\n  function slice(start, end, xs) {\n    var len = xs.length;\n    var fromIdx = start < 0 ? start + len : start;\n    var toIdx = end < 0 ? end + len : end;\n\n    return Math.abs(start) <= len && Math.abs(end) <= len && fromIdx <= toIdx ?\n      Just(xs.slice(fromIdx, toIdx)) :\n      Nothing;\n  }\n  S.slice =\n  def('slice', {}, [$.Integer, $.Integer, List(a), $Maybe(List(a))], slice);\n\n  //# at :: Integer -> List a -> Maybe a\n  //.\n  //. Takes an index and a list and returns Just the element of the list at\n  //. the index if the index is within the list's bounds; Nothing otherwise.\n  //. A negative index represents an offset from the length of the list.\n  //.\n  //. ```javascript\n  //. > S.at(2, ['a', 'b', 'c', 'd', 'e'])\n  //. Just('c')\n  //.\n  //. > S.at(5, ['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //.\n  //. > S.at(-2, ['a', 'b', 'c', 'd', 'e'])\n  //. Just('d')\n  //. ```\n  function at(n, xs) {\n    var idx = n < 0 ? xs.length + n : n;\n    return idx < 0 || idx >= xs.length ? Nothing : Just(xs[idx]);\n  }\n  S.at = def('at', {}, [$.Integer, List(a), $Maybe(a)], at);\n\n  //# head :: List a -> Maybe a\n  //.\n  //. Takes a list and returns Just the first element of the list if the\n  //. list contains at least one element; Nothing if the list is empty.\n  //.\n  //. ```javascript\n  //. > S.head([1, 2, 3])\n  //. Just(1)\n  //.\n  //. > S.head([])\n  //. Nothing\n  //. ```\n  function head(xs) {\n    return at(0, xs);\n  }\n  S.head = def('head', {}, [List(a), $Maybe(a)], head);\n\n  //# last :: List a -> Maybe a\n  //.\n  //. Takes a list and returns Just the last element of the list if the\n  //. list contains at least one element; Nothing if the list is empty.\n  //.\n  //. ```javascript\n  //. > S.last([1, 2, 3])\n  //. Just(3)\n  //.\n  //. > S.last([])\n  //. Nothing\n  //. ```\n  function last(xs) {\n    return at(-1, xs);\n  }\n  S.last = def('last', {}, [List(a), $Maybe(a)], last);\n\n  //# tail :: List a -> Maybe (List a)\n  //.\n  //. Takes a list and returns Just a list containing all but the first\n  //. of the list's elements if the list contains at least one element;\n  //. Nothing if the list is empty.\n  //.\n  //. ```javascript\n  //. > S.tail([1, 2, 3])\n  //. Just([2, 3])\n  //.\n  //. > S.tail([])\n  //. Nothing\n  //. ```\n  function tail(xs) {\n    return xs.length > 0 ? Just(xs.slice(1)) : Nothing;\n  }\n  S.tail = def('tail', {}, [List(a), $Maybe(List(a))], tail);\n\n  //# init :: List a -> Maybe (List a)\n  //.\n  //. Takes a list and returns Just a list containing all but the last\n  //. of the list's elements if the list contains at least one element;\n  //. Nothing if the list is empty.\n  //.\n  //. ```javascript\n  //. > S.init([1, 2, 3])\n  //. Just([1, 2])\n  //.\n  //. > S.init([])\n  //. Nothing\n  //. ```\n  function init(xs) {\n    return xs.length > 0 ? Just(xs.slice(0, -1)) : Nothing;\n  }\n  S.init = def('init', {}, [List(a), $Maybe(List(a))], init);\n\n  //# take :: Integer -> List a -> Maybe (List a)\n  //.\n  //. Returns Just the first N elements of the given collection if N is\n  //. greater than or equal to zero and less than or equal to the length\n  //. of the collection; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.take(2, ['a', 'b', 'c', 'd', 'e'])\n  //. Just(['a', 'b'])\n  //.\n  //. > S.take(4, 'abcdefg')\n  //. Just('abcd')\n  //.\n  //. > S.take(4, ['a', 'b', 'c'])\n  //. Nothing\n  //. ```\n  function take(n, xs) {\n    return n < 0 || n > xs.length ? Nothing : Just(xs.slice(0, n));\n  }\n  S.take = def('take', {}, [$.Integer, List(a), $Maybe(List(a))], take);\n\n  //# takeLast :: Integer -> List a -> Maybe (List a)\n  //.\n  //. Returns Just the last N elements of the given collection if N is\n  //. greater than or equal to zero and less than or equal to the length\n  //. of the collection; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.takeLast(2, ['a', 'b', 'c', 'd', 'e'])\n  //. Just(['d', 'e'])\n  //.\n  //. > S.takeLast(4, 'abcdefg')\n  //. Just('defg')\n  //.\n  //. > S.takeLast(4, ['a', 'b', 'c'])\n  //. Nothing\n  //. ```\n  function takeLast(n, xs) {\n    return n < 0 || n > xs.length ? Nothing : Just(xs.slice(xs.length - n));\n  }\n  S.takeLast =\n  def('takeLast', {}, [$.Integer, List(a), $Maybe(List(a))], takeLast);\n\n  //# drop :: Integer -> List a -> Maybe (List a)\n  //.\n  //. Returns Just all but the first N elements of the given collection\n  //. if N is greater than or equal to zero and less than or equal to the\n  //. length of the collection; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.drop(2, ['a', 'b', 'c', 'd', 'e'])\n  //. Just(['c', 'd', 'e'])\n  //.\n  //. > S.drop(4, 'abcdefg')\n  //. Just('efg')\n  //.\n  //. > S.drop(4, 'abc')\n  //. Nothing\n  //. ```\n  function drop(n, xs) {\n    return n < 0 || n > xs.length ? Nothing : Just(xs.slice(n));\n  }\n  S.drop = def('drop', {}, [$.Integer, List(a), $Maybe(List(a))], drop);\n\n  //# dropLast :: Integer -> List a -> Maybe (List a)\n  //.\n  //. Returns Just all but the last N elements of the given collection\n  //. if N is greater than or equal to zero and less than or equal to the\n  //. length of the collection; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.dropLast(2, ['a', 'b', 'c', 'd', 'e'])\n  //. Just(['a', 'b', 'c'])\n  //.\n  //. > S.dropLast(4, 'abcdefg')\n  //. Just('abc')\n  //.\n  //. > S.dropLast(4, 'abc')\n  //. Nothing\n  //. ```\n  function dropLast(n, xs) {\n    return n < 0 || n > xs.length ? Nothing : Just(xs.slice(0, xs.length - n));\n  }\n  S.dropLast =\n  def('dropLast', {}, [$.Integer, List(a), $Maybe(List(a))], dropLast);\n\n  //. ### Array\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.size([])\n  //. 0\n  //.\n  //. > S.size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > S.size(Nil)\n  //. 0\n  //.\n  //. > S.size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //.\n  //. > S.size(S.Nothing)\n  //. 0\n  //.\n  //. > S.size(S.Just('quux'))\n  //. 1\n  //. ```\n  S.size = def('size', {f: [Z.Foldable]}, [f(a), $.Integer], Z.size);\n\n  //# append :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > S.append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > S.append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //.\n  //. > S.append([1], S.Nothing)\n  //. Just([1])\n  //.\n  //. > S.append([3], S.Just([1, 2]))\n  //. Just([1, 2, 3])\n  //. ```\n  S.append =\n  def('append',\n      {f: [Z.Applicative, Z.Semigroup]},\n      [a, f(a), f(a)],\n      Z.append);\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > S.prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > S.prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //.\n  //. > S.prepend([1], S.Nothing)\n  //. Just([1])\n  //.\n  //. > S.prepend([1], S.Just([2, 3]))\n  //. Just([1, 2, 3])\n  //. ```\n  S.prepend =\n  def('prepend',\n      {f: [Z.Applicative, Z.Semigroup]},\n      [a, f(a), f(a)],\n      Z.prepend);\n\n  //# joinWith :: String -> Array String -> String\n  //.\n  //. Joins the strings of the second argument separated by the first argument.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String. S.joinWith(s, S.splitOn(s, t)) = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.joinWith(':', ['foo', 'bar', 'baz'])\n  //. 'foo:bar:baz'\n  //. ```\n  function joinWith(separator, ss) {\n    return ss.join(separator);\n  }\n  S.joinWith =\n  def('joinWith', {}, [$.String, $.Array($.String), $.String], joinWith);\n\n  //# elem :: (Setoid a, Foldable f) => a -> f a -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` [iff][] the value is an\n  //. element of the structure.\n  //.\n  //. See also [`find`](#find).\n  //.\n  //. ```javascript\n  //. > S.elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > S.elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > S.elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > S.elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > S.elem(0, S.Just(0))\n  //. true\n  //.\n  //. > S.elem(0, S.Just(1))\n  //. false\n  //.\n  //. > S.elem(0, S.Nothing)\n  //. false\n  //. ```\n  S.elem =\n  def('elem', {a: [Z.Setoid], f: [Z.Foldable]}, [a, f(a), $.Boolean], Z.elem);\n\n  //# find :: Foldable f => (a -> Boolean) -> f a -> Maybe a\n  //.\n  //. Takes a predicate and a structure and returns Just the leftmost element\n  //. of the structure which satisfies the predicate; Nothing if there is no\n  //. such element.\n  //.\n  //. See also [`elem`](#elem).\n  //.\n  //. ```javascript\n  //. > S.find(n => n < 0, [1, -2, 3, -4, 5])\n  //. Just(-2)\n  //.\n  //. > S.find(n => n < 0, [1, 2, 3, 4, 5])\n  //. Nothing\n  //. ```\n  function find(pred, xs) {\n    return Z.reduce(\n      function(m, x) { return m.isJust ? m : pred(x) ? Just(x) : Nothing; },\n      Nothing,\n      xs\n    );\n  }\n  S.find =\n  def('find', {f: [Z.Foldable]}, [$.Predicate(a), f(a), $Maybe(a)], find);\n\n  //# pluck :: Functor f => String -> f a -> f b\n  //.\n  //. Combines [`map`](#map) and [`prop`](#prop). `pluck(k, xs)` is equivalent\n  //. to `map(prop(k), xs)`.\n  //.\n  //. ```javascript\n  //. > S.pluck('x', [{x: 1}, {x: 2}, {x: 3}])\n  //. [1, 2, 3]\n  //.\n  //. > S.pluck('x', S.Just({x: 1, y: 2, z: 3}))\n  //. Just(1)\n  //. ```\n  function pluck(key, xs) {\n    return Z.map(function(x) {\n      var obj = toObject(x);\n      if (key in obj) return obj[key];\n      throw new TypeError('‘pluck’ expected object to have a property named ' +\n                          '‘' + key + '’; ' + Z.toString(x) + ' does not');\n    }, xs);\n  }\n  S.pluck = def('pluck', {f: [Z.Functor]}, [$.String, f(a), f(b)], pluck);\n\n  //# unfoldr :: (b -> Maybe (Pair a b)) -> b -> Array a\n  //.\n  //. Takes a function and a seed value, and returns an array generated by\n  //. applying the function repeatedly. The array is initially empty. The\n  //. function is initially applied to the seed value. Each application\n  //. of the function should result in either:\n  //.\n  //.   - Nothing, in which case the array is returned; or\n  //.\n  //.   - Just a pair, in which case the first element is appended to\n  //.     the array and the function is applied to the second element.\n  //.\n  //. ```javascript\n  //. > S.unfoldr(n => n < 5 ? S.Just([n, n + 1]) : S.Nothing, 1)\n  //. [1, 2, 3, 4]\n  //. ```\n  function unfoldr(f, x) {\n    var result = [];\n    for (var m = f(x); m.isJust; m = f(m.value[1])) result.push(m.value[0]);\n    return result;\n  }\n  S.unfoldr =\n  def('unfoldr', {}, [Fn(b, $Maybe($.Pair(a, b))), b, $.Array(a)], unfoldr);\n\n  //# range :: Integer -> Integer -> Array Integer\n  //.\n  //. Returns an array of consecutive integers starting with the first argument\n  //. and ending with the second argument minus one. Returns `[]` if the second\n  //. argument is less than or equal to the first argument.\n  //.\n  //. ```javascript\n  //. > S.range(0, 10)\n  //. [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  //.\n  //. > S.range(-5, 0)\n  //. [-5, -4, -3, -2, -1]\n  //.\n  //. > S.range(0, -5)\n  //. []\n  //. ```\n  function range(from, to) {\n    var result = [];\n    for (var n = from; n < to; n += 1) result.push(n);\n    return result;\n  }\n  S.range =\n  def('range', {}, [$.Integer, $.Integer, $.Array($.Integer)], range);\n\n  //# groupBy :: (a -> a -> Boolean) -> Array a -> Array (Array a)\n  //.\n  //. Splits its array argument into an array of arrays of equal,\n  //. adjacent elements. Equality is determined by the function\n  //. provided as the first argument. Its behaviour can be surprising\n  //. for functions that aren't reflexive, transitive, and symmetric\n  //. (see [equivalence][] relation).\n  //.\n  //. Properties:\n  //.\n  //.   - `forall f :: a -> a -> Boolean, xs :: Array a.\n  //.      S.join(S.groupBy(f, xs)) = xs`\n  //.\n  //. ```javascript\n  //. > S.groupBy(S.equals, [1, 1, 2, 1, 1])\n  //. [[1, 1], [2], [1, 1]]\n  //.\n  //. > S.groupBy(x => y => x + y === 0, [2, -3, 3, 3, 3, 4, -4, 4])\n  //. [[2], [-3, 3, 3, 3], [4, -4], [4]]\n  //. ```\n  function groupBy(f, xs) {\n    if (xs.length === 0) return [];\n    var x0 = xs[0];         // :: a\n    var active = [x0];      // :: Array a\n    var result = [active];  // :: Array (Array a)\n    for (var idx = 1; idx < xs.length; idx += 1) {\n      var x = xs[idx];\n      if (f(x0)(x)) active.push(x); else result.push(active = [x0 = x]);\n    }\n    return result;\n  }\n  S.groupBy =\n  def('groupBy',\n      {},\n      [Fn(a, $.Predicate(a)), $.Array(a), $.Array($.Array(a))],\n      groupBy);\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > S.reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //.\n  //. > S.pipe([S.splitOn(''), S.reverse, S.joinWith('')], 'abc')\n  //. 'cba'\n  //. ```\n  S.reverse =\n  def('reverse',\n      {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n      [f(a), f(a)],\n      Z.reverse);\n\n  //# sort :: (Ord a, Applicative m, Foldable m, Monoid (m a)) => m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] for comparisons.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sort(S.sort(m)) = S.sort(m)` (idempotence)\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > S.sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > S.sort([S.Left(4), S.Right(3), S.Left(2), S.Right(1)])\n  //. [Left(2), Left(4), Right(1), Right(3)]\n  //. ```\n  S.sort =\n  def('sort',\n      {a: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n      [m(a), m(a)],\n      Z.sort);\n\n  //# sortBy :: (Ord b, Applicative m, Foldable m, Monoid (m a)) => (a -> b) -> m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] to compare the values produced by applying the given function\n  //. to each element of the structure.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sortBy(f, S.sortBy(f, m)) = S.sortBy(f, m)` (idempotence)\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > S.sortBy(S.prop('rank'), [\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 2, suit: 'hearts'},\n  //. . {rank: 5, suit: 'hearts'},\n  //. . {rank: 5, suit: 'spades'},\n  //. . {rank: 7, suit: 'spades'} ]\n  //.\n  //. > S.sortBy(S.prop('suit'), [\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 5, suit: 'hearts'},\n  //. . {rank: 2, suit: 'hearts'},\n  //. . {rank: 7, suit: 'spades'},\n  //. . {rank: 5, suit: 'spades'} ]\n  //. ```\n  S.sortBy =\n  def('sortBy',\n      {b: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n      [Fn(a, b), m(a), m(a)],\n      Z.sortBy);\n\n  //. ### Object\n\n  //# prop :: String -> a -> b\n  //.\n  //. Takes a property name and an object with known properties and returns\n  //. the value of the specified property. If for some reason the object\n  //. lacks the specified property, a type error is thrown.\n  //.\n  //. For accessing properties of uncertain objects, use [`get`](#get) instead.\n  //.\n  //. See also [`pluck`](#pluck).\n  //.\n  //. ```javascript\n  //. > S.prop('a', {a: 1, b: 2})\n  //. 1\n  //. ```\n  function prop(key, x) {\n    var obj = toObject(x);\n    if (key in obj) return obj[key];\n    throw new TypeError('‘prop’ expected object to have a property named ‘' +\n                        key + '’; ' + Z.toString(x) + ' does not');\n  }\n  S.prop = def('prop', {}, [$.String, a, b], prop);\n\n  //# props :: Array String -> a -> b\n  //.\n  //. Takes a property path (an array of property names) and an object with\n  //. known structure and returns the value at the given path. If for some\n  //. reason the path does not exist, a type error is thrown.\n  //.\n  //. For accessing property paths of uncertain objects, use [`gets`](#gets)\n  //. instead.\n  //.\n  //. ```javascript\n  //. > S.props(['a', 'b', 'c'], {a: {b: {c: 1}}})\n  //. 1\n  //. ```\n  function props(path, x) {\n    return path.reduce(function(x, key) {\n      var obj = toObject(x);\n      if (key in obj) return obj[key];\n      throw new TypeError('‘props’ expected object to have a property at ' +\n                          Z.toString(path) + '; ' +\n                          Z.toString(x) + ' does not');\n    }, x);\n  }\n  S.props = def('props', {}, [$.Array($.String), a, b], props);\n\n  //# get :: (Any -> Boolean) -> String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property name, and an object and returns Just the\n  //. value of the specified object property if it exists and the value\n  //. satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`gets`](#gets) and [`prop`](#prop).\n  //.\n  //. ```javascript\n  //. > S.get(S.is(Number), 'x', {x: 1, y: 2})\n  //. Just(1)\n  //.\n  //. > S.get(S.is(Number), 'x', {x: '1', y: '2'})\n  //. Nothing\n  //.\n  //. > S.get(S.is(Number), 'x', {})\n  //. Nothing\n  //.\n  //. > S.get($.test([], $.Array($.Number)), 'x', {x: [1, 2, 3]})\n  //. Just([1, 2, 3])\n  //.\n  //. > S.get($.test([], $.Array($.Number)), 'x', {x: [1, 2, 3, null]})\n  //. Nothing\n  //. ```\n  function get(pred, key, x) {\n    var obj = toObject(x);\n    if (key in obj) {\n      var val = obj[key];\n      if (pred(val)) return Just(val);\n    }\n    return Nothing;\n  }\n  S.get = def('get', {}, [$.Predicate($.Any), $.String, a, $Maybe(b)], get);\n\n  //# gets :: (Any -> Boolean) -> Array String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property path (an array of property names), and\n  //. an object and returns Just the value at the given path if such a path\n  //. exists and the value satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.gets(S.is(Number), ['a', 'b', 'c'], {a: {b: {c: 42}}})\n  //. Just(42)\n  //.\n  //. > S.gets(S.is(Number), ['a', 'b', 'c'], {a: {b: {c: '42'}}})\n  //. Nothing\n  //.\n  //. > S.gets(S.is(Number), ['a', 'b', 'c'], {})\n  //. Nothing\n  //. ```\n  function gets(pred, keys, x) {\n    return Z.filter(pred, Z.reduce(function(m, key) {\n      return Z.chain(function(x) {\n        var obj = toObject(x);\n        return key in obj ? Just(obj[key]) : Nothing;\n      }, m);\n    }, Just(x), keys));\n  }\n  S.gets =\n  def('gets', {}, [$.Predicate($.Any), $.Array($.String), a, $Maybe(b)], gets);\n\n  //. ### StrMap\n  //.\n  //. StrMap is an abbreviation of _string map_. A string map is an object,\n  //. such as `{foo: 1, bar: 2, baz: 3}`, whose values are all members of\n  //. the same type. Formally, a value is a member of type `StrMap a` if its\n  //. [type identifier][] is `'Object'` and the values of its enumerable own\n  //. properties are all members of type `a`.\n\n  //# singleton :: String -> a -> StrMap a\n  //.\n  //. Takes a string and a value of any type, and returns a string map with\n  //. a single entry (mapping the key to the value).\n  //.\n  //. ```javascript\n  //. > S.singleton('foo', 42)\n  //. {foo: 42}\n  //. ```\n  function singleton(key, val) {\n    var strMap = {};\n    strMap[key] = val;\n    return strMap;\n  }\n  S.singleton = def('singleton', {}, [$.String, a, $.StrMap(a)], singleton);\n\n  //# insert :: String -> a -> StrMap a -> StrMap a\n  //.\n  //. Takes a string, a value of any type, and a string map, and returns a\n  //. string map comprising all the entries of the given string map plus the\n  //. entry specified by the first two arguments (which takes precedence).\n  //.\n  //. Equivalent to Haskell's `insert` function. Similar to Clojure's `assoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.insert('c', 3, {a: 1, b: 2})\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.insert('a', 4, {a: 1, b: 2})\n  //. {a: 4, b: 2}\n  //. ```\n  function insert(key, val, strMap) {\n    return Z.concat(strMap, singleton(key, val));\n  }\n  S.insert =\n  def('insert', {}, [$.String, a, $.StrMap(a), $.StrMap(a)], insert);\n\n  //# remove :: String -> StrMap a -> StrMap a\n  //.\n  //. Takes a string and a string map, and returns a string map comprising all\n  //. the entries of the given string map except the one whose key matches the\n  //. given string (if such a key exists).\n  //.\n  //. Equivalent to Haskell's `delete` function. Similar to Clojure's `dissoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.remove('c', {a: 1, b: 2, c: 3})\n  //. {a: 1, b: 2}\n  //.\n  //. > S.remove('c', {})\n  //. {}\n  //. ```\n  function remove(key, strMap) {\n    var result = Z.concat(strMap, {});\n    delete result[key];\n    return result;\n  }\n  S.remove = def('remove', {}, [$.String, $.StrMap(a), $.StrMap(a)], remove);\n\n  //# keys :: StrMap a -> Array String\n  //.\n  //. Returns the keys of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.keys({b: 2, c: 3, a: 1}).sort()\n  //. ['a', 'b', 'c']\n  //. ```\n  S.keys = def('keys', {}, [$.StrMap(a), $.Array($.String)], Object.keys);\n\n  //# values :: StrMap a -> Array a\n  //.\n  //. Returns the values of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.values({a: 1, c: 3, b: 2}).sort()\n  //. [1, 2, 3]\n  //. ```\n  function values(strMap) {\n    return Z.map(function(k) { return strMap[k]; }, Object.keys(strMap));\n  }\n  S.values = def('values', {}, [$.StrMap(a), $.Array(a)], values);\n\n  //# pairs :: StrMap a -> Array (Pair String a)\n  //.\n  //. Returns the key–value pairs of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.pairs({b: 2, a: 1, c: 3}).sort()\n  //. [['a', 1], ['b', 2], ['c', 3]]\n  //. ```\n  function pairs(strMap) {\n    return Z.map(function(k) { return [k, strMap[k]]; }, Object.keys(strMap));\n  }\n  S.pairs =\n  def('pairs', {}, [$.StrMap(a), $.Array($.Pair($.String, a))], pairs);\n\n  //# fromPairs :: Foldable f => f (Pair String a) -> StrMap a\n  //.\n  //. Returns a string map containing the key–value pairs specified by the\n  //. given [Foldable][]. If a key appears in multiple pairs, the rightmost\n  //. pair takes precedence.\n  //.\n  //. ```javascript\n  //. > S.fromPairs([['a', 1], ['b', 2], ['c', 3]])\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.fromPairs([['x', 1], ['x', 2]])\n  //. {x: 2}\n  //. ```\n  function fromPairs(pairs) {\n    return Z.reduce(function(strMap, pair) {\n      strMap[pair[0]] = pair[1];\n      return strMap;\n    }, {}, pairs);\n  }\n  S.fromPairs =\n  def('fromPairs',\n      {f: [Z.Foldable]},\n      [f($.Pair($.String, a)), $.StrMap(a)],\n      fromPairs);\n\n  //. ### Number\n\n  //# negate :: ValidNumber -> ValidNumber\n  //.\n  //. Negates its argument.\n  //.\n  //. ```javascript\n  //. > S.negate(12.5)\n  //. -12.5\n  //.\n  //. > S.negate(-42)\n  //. 42\n  //. ```\n  function negate(n) {\n    return -n;\n  }\n  S.negate = def('negate', {}, [$.ValidNumber, $.ValidNumber], negate);\n\n  //# add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.add(1, 1)\n  //. 2\n  //. ```\n  function add(x, y) {\n    return x + y;\n  }\n  S.add =\n  def('add', {}, [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber], add);\n\n  //# sum :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.sum([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.sum([])\n  //. 0\n  //.\n  //. > S.sum(S.Just(42))\n  //. 42\n  //.\n  //. > S.sum(S.Nothing)\n  //. 0\n  //. ```\n  function sum(foldable) {\n    return Z.reduce(add, 0, foldable);\n  }\n  S.sum =\n  def('sum', {f: [Z.Foldable]}, [f($.FiniteNumber), $.FiniteNumber], sum);\n\n  //# sub :: FiniteNumber -> (FiniteNumber -> FiniteNumber)\n  //.\n  //. Takes a finite number `n` and returns the _subtract `n`_ function.\n  //.\n  //. See also [`sub_`](#sub_).\n  //.\n  //. ```javascript\n  //. > S.map(S.sub(1), [1, 2, 3])\n  //. [0, 1, 2]\n  //. ```\n  S.sub =\n  def('sub',\n      {},\n      [$.FiniteNumber, Fn($.FiniteNumber, $.FiniteNumber)],\n      flip$(sub_));\n\n  //# sub_ :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the difference between two (finite) numbers.\n  //.\n  //. See also [`sub`](#sub).\n  //.\n  //. ```javascript\n  //. > S.sub_(4, 2)\n  //. 2\n  //. ```\n  function sub_(x, y) {\n    return x - y;\n  }\n  S.sub_ =\n  def('sub_', {}, [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber], sub_);\n\n  //# mult :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mult(4, 2)\n  //. 8\n  //. ```\n  function mult(x, y) {\n    return x * y;\n  }\n  S.mult =\n  def('mult', {}, [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber], mult);\n\n  //# product :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.product([1, 2, 3, 4, 5])\n  //. 120\n  //.\n  //. > S.product([])\n  //. 1\n  //.\n  //. > S.product(S.Just(42))\n  //. 42\n  //.\n  //. > S.product(S.Nothing)\n  //. 1\n  //. ```\n  function product(foldable) {\n    return Z.reduce(mult, 1, foldable);\n  }\n  S.product =\n  def('product',\n      {f: [Z.Foldable]},\n      [f($.FiniteNumber), $.FiniteNumber],\n      product);\n\n  //# div :: NonZeroFiniteNumber -> (FiniteNumber -> FiniteNumber)\n  //.\n  //. Takes a non-zero finite number `n` and returns the _divide by `n`_\n  //. function.\n  //.\n  //. See also [`div_`](#div_).\n  //.\n  //. ```javascript\n  //. > S.map(S.div(2), [0, 1, 2, 3])\n  //. [0, 0.5, 1, 1.5]\n  //. ```\n  S.div =\n  def('div',\n      {},\n      [$.NonZeroFiniteNumber, Fn($.FiniteNumber, $.FiniteNumber)],\n      flip$(div_));\n\n  //# div_ :: FiniteNumber -> NonZeroFiniteNumber -> FiniteNumber\n  //.\n  //. Returns the result of dividing its first argument (a finite number) by\n  //. its second argument (a non-zero finite number).\n  //.\n  //. See also [`div`](#div).\n  //.\n  //. ```javascript\n  //. > S.div_(7, 2)\n  //. 3.5\n  //.\n  //. > S.map(S.div_(24), [1, 2, 3, 4])\n  //. [24, 12, 8, 6]\n  //. ```\n  function div_(x, y) {\n    return x / y;\n  }\n  S.div_ =\n  def('div_',\n      {},\n      [$.FiniteNumber, $.NonZeroFiniteNumber, $.FiniteNumber],\n      div_);\n\n  //# pow :: FiniteNumber -> (FiniteNumber -> FiniteNumber)\n  //.\n  //. Takes a finite number `n` and returns the _power of `n`_ function.\n  //.\n  //. See also [`pow_`](#pow_).\n  //.\n  //. ```javascript\n  //. > S.map(S.pow(2), [-3, -2, -1, 0, 1, 2, 3])\n  //. [9, 4, 1, 0, 1, 4, 9]\n  //.\n  //. > S.map(S.pow(0.5), [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5]\n  //. ```\n  S.pow =\n  def('pow',\n      {},\n      [$.FiniteNumber, Fn($.FiniteNumber, $.FiniteNumber)],\n      flip$(Math.pow));\n\n  //# pow_ :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Curried version of [`Math.pow`][].\n  //.\n  //. See also [`pow`](#pow).\n  //.\n  //. ```javascript\n  //. > S.map(S.pow_(10), [-3, -2, -1, 0, 1, 2, 3])\n  //. [0.001, 0.01, 0.1, 1, 10, 100, 1000]\n  //. ```\n  S.pow_ =\n  def('pow_', {}, [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber], Math.pow);\n\n  //# mean :: Foldable f => f FiniteNumber -> Maybe FiniteNumber\n  //.\n  //. Returns the mean of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mean([1, 2, 3, 4, 5])\n  //. Just(3)\n  //.\n  //. > S.mean([])\n  //. Nothing\n  //.\n  //. > S.mean(S.Just(42))\n  //. Just(42)\n  //.\n  //. > S.mean(S.Nothing)\n  //. Nothing\n  //. ```\n  function mean(foldable) {\n    var result = Z.reduce(\n      function(acc, n) {\n        acc.total += n;\n        acc.count += 1;\n        return acc;\n      },\n      {total: 0, count: 0},\n      foldable\n    );\n    return result.count > 0 ? Just(result.total / result.count) : Nothing;\n  }\n  S.mean =\n  def('mean',\n      {f: [Z.Foldable]},\n      [f($.FiniteNumber), $Maybe($.FiniteNumber)],\n      mean);\n\n  //. ### Integer\n\n  //# even :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is even; `false` if it is odd.\n  //.\n  //. ```javascript\n  //. > S.even(42)\n  //. true\n  //.\n  //. > S.even(99)\n  //. false\n  //. ```\n  function even(n) {\n    return n % 2 === 0;\n  }\n  S.even = def('even', {}, [$.Integer, $.Boolean], even);\n\n  //# odd :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is odd; `false` if it is even.\n  //.\n  //. ```javascript\n  //. > S.odd(99)\n  //. true\n  //.\n  //. > S.odd(42)\n  //. false\n  //. ```\n  function odd(n) {\n    return n % 2 !== 0;\n  }\n  S.odd = def('odd', {}, [$.Integer, $.Boolean], odd);\n\n  //. ### Parse\n\n  //# parseDate :: String -> Maybe ValidDate\n  //.\n  //. Takes a string and returns Just the date represented by the string\n  //. if it does in fact represent a date; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseDate('2011-01-19T17:40:00Z')\n  //. Just(new Date('2011-01-19T17:40:00.000Z'))\n  //.\n  //. > S.parseDate('today')\n  //. Nothing\n  //. ```\n  function parseDate(s) {\n    var date = new Date(s);\n    return isNaN(date.valueOf()) ? Nothing : Just(date);\n  }\n  S.parseDate =\n  def('parseDate', {}, [$.String, $Maybe($.ValidDate)], parseDate);\n\n  //  requiredNonCapturingGroup :: Array String -> String\n  function requiredNonCapturingGroup(xs) {\n    return '(?:' + xs.join('|') + ')';\n  }\n\n  //  optionalNonCapturingGroup :: Array String -> String\n  function optionalNonCapturingGroup(xs) {\n    return requiredNonCapturingGroup(xs) + '?';\n  }\n\n  //  validFloatRepr :: RegExp\n  var validFloatRepr = new RegExp(\n    '^' +                     // start-of-string anchor\n    '\\\\s*' +                  // any number of leading whitespace characters\n    '[+-]?' +                 // optional sign\n    requiredNonCapturingGroup([\n      'Infinity',             // \"Infinity\"\n      'NaN',                  // \"NaN\"\n      requiredNonCapturingGroup([\n        '[0-9]+',             // number\n        '[0-9]+[.][0-9]+',    // number with interior decimal point\n        '[0-9]+[.]',          // number with trailing decimal point\n        '[.][0-9]+'           // number with leading decimal point\n      ]) +\n      optionalNonCapturingGroup([\n        '[Ee]' +              // \"E\" or \"e\"\n        '[+-]?' +             // optional sign\n        '[0-9]+'              // exponent\n      ])\n    ]) +\n    '\\\\s*' +                  // any number of trailing whitespace characters\n    '$'                       // end-of-string anchor\n  );\n\n  //# parseFloat :: String -> Maybe Number\n  //.\n  //. Takes a string and returns Just the number represented by the string\n  //. if it does in fact represent a number; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseFloat('-123.45')\n  //. Just(-123.45)\n  //.\n  //. > S.parseFloat('foo.bar')\n  //. Nothing\n  //. ```\n  function parseFloat_(s) {\n    return validFloatRepr.test(s) ? Just(parseFloat(s)) : Nothing;\n  }\n  S.parseFloat =\n  def('parseFloat', {}, [$.String, $Maybe($.Number)], parseFloat_);\n\n  //  Radix :: Type\n  var Radix = $.NullaryType(\n    'sanctuary/Radix',\n    '',\n    function(x) { return $.Integer._test(x) && x >= 2 && x <= 36; }\n  );\n\n  //# parseInt :: Radix -> String -> Maybe Integer\n  //.\n  //. Takes a radix (an integer between 2 and 36 inclusive) and a string,\n  //. and returns Just the number represented by the string if it does in\n  //. fact represent a number in the base specified by the radix; Nothing\n  //. otherwise.\n  //.\n  //. This function is stricter than [`parseInt`][parseInt]: a string\n  //. is considered to represent an integer only if all its non-prefix\n  //. characters are members of the character set specified by the radix.\n  //.\n  //. ```javascript\n  //. > S.parseInt(10, '-42')\n  //. Just(-42)\n  //.\n  //. > S.parseInt(16, '0xFF')\n  //. Just(255)\n  //.\n  //. > S.parseInt(16, '0xGG')\n  //. Nothing\n  //. ```\n  function parseInt_(radix, s) {\n    var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'.slice(0, radix);\n    var pattern = new RegExp('^[' + charset + ']+$', 'i');\n\n    var t = s.replace(/^[+-]/, '');\n    if (pattern.test(radix === 16 ? t.replace(/^0x/i, '') : t)) {\n      var n = parseInt(s, radix);\n      if ($.Integer._test(n)) return Just(n);\n    }\n    return Nothing;\n  }\n  S.parseInt =\n  def('parseInt', {}, [Radix, $.String, $Maybe($.Integer)], parseInt_);\n\n  //# parseJson :: (Any -> Boolean) -> String -> Maybe a\n  //.\n  //. Takes a predicate and a string which may or may not be valid JSON, and\n  //. returns Just the result of applying `JSON.parse` to the string *if* the\n  //. result satisfies the predicate; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseJson($.test([], $.Array($.Integer)), '[')\n  //. Nothing\n  //.\n  //. > S.parseJson($.test([], $.Array($.Integer)), '[\"1\",\"2\",\"3\"]')\n  //. Nothing\n  //.\n  //. > S.parseJson($.test([], $.Array($.Integer)), '[0,1.5,3,4.5]')\n  //. Nothing\n  //.\n  //. > S.parseJson($.test([], $.Array($.Integer)), '[1,2,3]')\n  //. Just([1, 2, 3])\n  //. ```\n  function parseJson(pred, s) {\n    return Z.filter(pred, encase(JSON.parse, s));\n  }\n  S.parseJson =\n  def('parseJson', {}, [$.Predicate($.Any), $.String, $Maybe(a)], parseJson);\n\n  //. ### RegExp\n\n  //  Match :: Type\n  var Match = $.RecordType({\n    match: $.String,\n    groups: $.Array($Maybe($.String))\n  });\n\n  //  toMatch :: Array String? -> Match\n  function toMatch(ss) {\n    return {match: ss[0], groups: ss.slice(1).map(toMaybe)};\n  }\n\n  //  withRegex :: (RegExp, () -> a) -> a\n  function withRegex(pattern, thunk) {\n    var lastIndex = pattern.lastIndex;\n    var result = thunk();\n    pattern.lastIndex = lastIndex;\n    return result;\n  }\n\n  //# regex :: RegexFlags -> String -> RegExp\n  //.\n  //. Takes a [RegexFlags][] and a pattern, and returns a RegExp.\n  //.\n  //. ```javascript\n  //. > S.regex('g', ':\\\\d+:')\n  //. /:\\d+:/g\n  //. ```\n  function regex(flags, source) {\n    return new RegExp(source, flags);\n  }\n  S.regex = def('regex', {}, [$.RegexFlags, $.String, $.RegExp], regex);\n\n  //# regexEscape :: String -> String\n  //.\n  //. Takes a string which may contain regular expression metacharacters,\n  //. and returns a string with those metacharacters escaped.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String. S.test(S.regex('', S.regexEscape(s)), s) = true`\n  //.\n  //. ```javascript\n  //. > S.regexEscape('-=*{XYZ}*=-')\n  //. '\\\\-=\\\\*\\\\{XYZ\\\\}\\\\*=\\\\-'\n  //. ```\n  function regexEscape(s) {\n    return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  S.regexEscape = def('regexEscape', {}, [$.String, $.String], regexEscape);\n\n  //# test :: RegExp -> String -> Boolean\n  //.\n  //. Takes a pattern and a string, and returns `true` [iff][] the pattern\n  //. matches the string.\n  //.\n  //. ```javascript\n  //. > S.test(/^a/, 'abacus')\n  //. true\n  //.\n  //. > S.test(/^a/, 'banana')\n  //. false\n  //. ```\n  function test(pattern, s) {\n    return withRegex(pattern, function() { return pattern.test(s); });\n  }\n  S.test = def('test', {}, [$.RegExp, $.String, $.Boolean], test);\n\n  //# match :: NonGlobalRegExp -> String -> Maybe { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns Just a match record if the\n  //. pattern matches the string; Nothing otherwise.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: Pattern, s :: String.\n  //.      S.head(S.matchAll(S.regex('g', p), s)) = S.match(S.regex('', p), s)`\n  //.\n  //. See also [`matchAll`](#matchAll).\n  //.\n  //. ```javascript\n  //. > S.match(/(good)?bye/, 'goodbye')\n  //. Just({match: 'goodbye', groups: [Just('good')]})\n  //.\n  //. > S.match(/(good)?bye/, 'bye')\n  //. Just({match: 'bye', groups: [Nothing]})\n  //. ```\n  function match(pattern, s) {\n    return Z.map(toMatch, toMaybe(s.match(pattern)));\n  }\n  S.match =\n  def('match', {}, [$.NonGlobalRegExp, $.String, $Maybe(Match)], match);\n\n  //# matchAll :: GlobalRegExp -> String -> Array { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns an array of match records.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. See also [`match`](#match).\n  //.\n  //. ```javascript\n  //. > S.matchAll(/@([a-z]+)/g, 'Hello, world!')\n  //. []\n  //.\n  //. > S.matchAll(/@([a-z]+)/g, 'Hello, @foo! Hello, @bar! Hello, @baz!')\n  //. [ {match: '@foo', groups: [Just('foo')]},\n  //. . {match: '@bar', groups: [Just('bar')]},\n  //. . {match: '@baz', groups: [Just('baz')]} ]\n  //. ```\n  function matchAll(pattern, s) {\n    return withRegex(pattern, function() {\n      return unfoldr(function(_) {\n        return Z.map(function(ss) {\n          return [toMatch(ss), null];\n        }, toMaybe(pattern.exec(s)));\n      }, []);\n    });\n  }\n  S.matchAll =\n  def('matchAll', {}, [$.GlobalRegExp, $.String, $.Array(Match)], matchAll);\n\n  //. ### String\n\n  //# toUpper :: String -> String\n  //.\n  //. Returns the upper-case equivalent of its argument.\n  //.\n  //. See also [`toLower`](#toLower).\n  //.\n  //. ```javascript\n  //. > S.toUpper('ABC def 123')\n  //. 'ABC DEF 123'\n  //. ```\n  function toUpper(s) {\n    return s.toUpperCase();\n  }\n  S.toUpper = def('toUpper', {}, [$.String, $.String], toUpper);\n\n  //# toLower :: String -> String\n  //.\n  //. Returns the lower-case equivalent of its argument.\n  //.\n  //. See also [`toUpper`](#toUpper).\n  //.\n  //. ```javascript\n  //. > S.toLower('ABC def 123')\n  //. 'abc def 123'\n  //. ```\n  function toLower(s) {\n    return s.toLowerCase();\n  }\n  S.toLower = def('toLower', {}, [$.String, $.String], toLower);\n\n  //# trim :: String -> String\n  //.\n  //. Strips leading and trailing whitespace characters.\n  //.\n  //. ```javascript\n  //. > S.trim('\\t\\t foo bar \\n')\n  //. 'foo bar'\n  //. ```\n  function trim(s) {\n    return s.trim();\n  }\n  S.trim = def('trim', {}, [$.String, $.String], trim);\n\n  //# stripPrefix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given prefix (the first argument) if the string starts\n  //. with the prefix; Nothing otherwise.\n  //.\n  //. See also [`stripSuffix`](#stripSuffix).\n  //.\n  //. ```javascript\n  //. > S.stripPrefix('https://', 'https://sanctuary.js.org')\n  //. Just('sanctuary.js.org')\n  //.\n  //. > S.stripPrefix('https://', 'http://sanctuary.js.org')\n  //. Nothing\n  //. ```\n  function stripPrefix(prefix, s) {\n    var idx = prefix.length;\n    return s.slice(0, idx) === prefix ? Just(s.slice(idx)) : Nothing;\n  }\n  S.stripPrefix =\n  def('stripPrefix', {}, [$.String, $.String, $Maybe($.String)], stripPrefix);\n\n  //# stripSuffix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given suffix (the first argument) if the string ends\n  //. with the suffix; Nothing otherwise.\n  //.\n  //. See also [`stripPrefix`](#stripPrefix).\n  //.\n  //. ```javascript\n  //. > S.stripSuffix('.md', 'README.md')\n  //. Just('README')\n  //.\n  //. > S.stripSuffix('.md', 'README')\n  //. Nothing\n  //. ```\n  function stripSuffix(suffix, s) {\n    var idx = s.length - suffix.length;  // value may be negative\n    return s.slice(idx) === suffix ? Just(s.slice(0, idx)) : Nothing;\n  }\n  S.stripSuffix =\n  def('stripSuffix', {}, [$.String, $.String, $Maybe($.String)], stripSuffix);\n\n  //# words :: String -> Array String\n  //.\n  //. Takes a string and returns the array of words the string contains\n  //. (words are delimited by whitespace characters).\n  //.\n  //. See also [`unwords`](#unwords).\n  //.\n  //. ```javascript\n  //. > S.words(' foo bar baz ')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function words(s) {\n    var words = s.split(/\\s+/);\n    return words.slice(words[0] === '' ? 1 : 0,\n                       words[words.length - 1] === '' ? -1 : Infinity);\n  }\n  S.words = def('words', {}, [$.String, $.Array($.String)], words);\n\n  //# unwords :: Array String -> String\n  //.\n  //. Takes an array of words and returns the result of joining the words\n  //. with separating spaces.\n  //.\n  //. See also [`words`](#words).\n  //.\n  //. ```javascript\n  //. > S.unwords(['foo', 'bar', 'baz'])\n  //. 'foo bar baz'\n  //. ```\n  function unwords(xs) {\n    return xs.join(' ');\n  }\n  S.unwords = def('unwords', {}, [$.Array($.String), $.String], unwords);\n\n  //# lines :: String -> Array String\n  //.\n  //. Takes a string and returns the array of lines the string contains\n  //. (lines are delimited by newlines: `'\\n'` or `'\\r\\n'` or `'\\r'`).\n  //. The resulting strings do not contain newlines.\n  //.\n  //. See also [`unlines`](#unlines).\n  //.\n  //. ```javascript\n  //. > S.lines('foo\\nbar\\nbaz\\n')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function lines(s) {\n    var match = s.replace(/\\r\\n?/g, '\\n').match(/^(?=[\\s\\S]).*/gm);\n    return match == null ? [] : match;\n  }\n  S.lines = def('lines', {}, [$.String, $.Array($.String)], lines);\n\n  //# unlines :: Array String -> String\n  //.\n  //. Takes an array of lines and returns the result of joining the lines\n  //. after appending a terminating line feed (`'\\n'`) to each.\n  //.\n  //. See also [`lines`](#lines).\n  //.\n  //. ```javascript\n  //. > S.unlines(['foo', 'bar', 'baz'])\n  //. 'foo\\nbar\\nbaz\\n'\n  //. ```\n  function unlines(xs) {\n    return Z.reduce(function(s, x) { return s + x + '\\n'; }, '', xs);\n  }\n  S.unlines = def('unlines', {}, [$.Array($.String), $.String], unlines);\n\n  //# splitOn :: String -> String -> Array String\n  //.\n  //. Returns the substrings of its second argument separated by occurrences\n  //. of its first argument.\n  //.\n  //. See also [`joinWith`](#joinWith) and [`splitOnRegex`](#splitOnRegex).\n  //.\n  //. ```javascript\n  //. > S.splitOn('::', 'foo::bar::baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function splitOn(separator, s) {\n    return s.split(separator);\n  }\n  S.splitOn =\n  def('splitOn', {}, [$.String, $.String, $.Array($.String)], splitOn);\n\n  //# splitOnRegex :: GlobalRegExp -> String -> Array String\n  //.\n  //. Takes a pattern and a string, and returns the result of splitting the\n  //. string at every non-overlapping occurrence of the pattern.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith(s, S.splitOnRegex(S.regex('g', S.regexEscape(s)), t))\n  //.      = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.splitOnRegex(/[,;][ ]*/g, 'foo, bar, baz')\n  //. ['foo', 'bar', 'baz']\n  //.\n  //. > S.splitOnRegex(/[,;][ ]*/g, 'foo;bar;baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function splitOnRegex(pattern, s) {\n    return withRegex(pattern, function() {\n      var result = [];\n      var lastIndex = 0;\n      var match;\n      while ((match = pattern.exec(s)) != null) {\n        if (pattern.lastIndex === lastIndex && match[0] === '') {\n          if (pattern.lastIndex === s.length) return result;\n          pattern.lastIndex += 1;\n        } else {\n          result.push(s.slice(lastIndex, match.index));\n          lastIndex = match.index + match[0].length;\n        }\n      }\n      result.push(s.slice(lastIndex));\n      return result;\n    });\n  }\n  S.splitOnRegex =\n  def('splitOnRegex',\n      {},\n      [$.GlobalRegExp, $.String, $.Array($.String)],\n      splitOnRegex);\n\n  return S;\n\n  /* eslint-enable indent */\n\n  }\n\n  return createSanctuary({checkTypes: true, env: defaultEnv});\n\n}));\n\n//. [$.Array]:          v:sanctuary-js/sanctuary-def#Array\n//. [$.String]:         v:sanctuary-js/sanctuary-def#String\n//. [Alt]:              v:fantasyland/fantasy-land#alt\n//. [Alternative]:      v:fantasyland/fantasy-land#alternative\n//. [Applicative]:      v:fantasyland/fantasy-land#applicative\n//. [Apply]:            v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:        v:fantasyland/fantasy-land#bifunctor\n//. [BinaryType]:       v:sanctuary-js/sanctuary-def#BinaryType\n//. [Either]:           #either-type\n//. [Extend]:           v:fantasyland/fantasy-land#extend\n//. [Fantasy Land]:     v:fantasyland/fantasy-land\n//. [Foldable]:         v:fantasyland/fantasy-land#foldable\n//. [Haskell]:          https://www.haskell.org/\n//. [Maybe]:            #maybe-type\n//. [Monad]:            v:fantasyland/fantasy-land#monad\n//. [Monoid]:           v:fantasyland/fantasy-land#monoid\n//. [Nullable]:         v:sanctuary-js/sanctuary-def#Nullable\n//. [Ord]:              v:fantasyland/fantasy-land#ord\n//. [PureScript]:       http://www.purescript.org/\n//. [Ramda]:            http://ramdajs.com/\n//. [RegexFlags]:       v:sanctuary-js/sanctuary-def#RegexFlags\n//. [Semigroup]:        v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:     v:fantasyland/fantasy-land#semigroupoid\n//. [Traversable]:      v:fantasyland/fantasy-land#traversable\n//. [UnaryType]:        v:sanctuary-js/sanctuary-def#UnaryType\n//. [`Math.pow`]:       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\n//. [`Z.alt`]:          v:sanctuary-js/sanctuary-type-classes#alt\n//. [`Z.ap`]:           v:sanctuary-js/sanctuary-type-classes#ap\n//. [`Z.apFirst`]:      v:sanctuary-js/sanctuary-type-classes#apFirst\n//. [`Z.apSecond`]:     v:sanctuary-js/sanctuary-type-classes#apSecond\n//. [`Z.bimap`]:        v:sanctuary-js/sanctuary-type-classes#bimap\n//. [`Z.chain`]:        v:sanctuary-js/sanctuary-type-classes#chain\n//. [`Z.chainRec`]:     v:sanctuary-js/sanctuary-type-classes#chainRec\n//. [`Z.compose`]:      v:sanctuary-js/sanctuary-type-classes#compose\n//. [`Z.concat`]:       v:sanctuary-js/sanctuary-type-classes#concat\n//. [`Z.contramap`]:    v:sanctuary-js/sanctuary-type-classes#contramap\n//. [`Z.empty`]:        v:sanctuary-js/sanctuary-type-classes#empty\n//. [`Z.equals`]:       v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.extend`]:       v:sanctuary-js/sanctuary-type-classes#extend\n//. [`Z.extract`]:      v:sanctuary-js/sanctuary-type-classes#extract\n//. [`Z.filter`]:       v:sanctuary-js/sanctuary-type-classes#filter\n//. [`Z.filterM`]:      v:sanctuary-js/sanctuary-type-classes#filterM\n//. [`Z.gt`]:           v:sanctuary-js/sanctuary-type-classes#gt\n//. [`Z.gte`]:          v:sanctuary-js/sanctuary-type-classes#gte\n//. [`Z.id`]:           v:sanctuary-js/sanctuary-type-classes#id\n//. [`Z.invert`]:       v:sanctuary-js/sanctuary-type-classes#invert\n//. [`Z.join`]:         v:sanctuary-js/sanctuary-type-classes#join\n//. [`Z.lt`]:           v:sanctuary-js/sanctuary-type-classes#lt\n//. [`Z.lte`]:          v:sanctuary-js/sanctuary-type-classes#lte\n//. [`Z.map`]:          v:sanctuary-js/sanctuary-type-classes#map\n//. [`Z.of`]:           v:sanctuary-js/sanctuary-type-classes#of\n//. [`Z.promap`]:       v:sanctuary-js/sanctuary-type-classes#promap\n//. [`Z.sequence`]:     v:sanctuary-js/sanctuary-type-classes#sequence\n//. [`Z.toString`]:     v:sanctuary-js/sanctuary-type-classes#toString\n//. [`Z.traverse`]:     v:sanctuary-js/sanctuary-type-classes#traverse\n//. [`Z.zero`]:         v:sanctuary-js/sanctuary-type-classes#zero\n//. [`of`]:             v:fantasyland/fantasy-land#of-method\n//. [equivalence]:      https://en.wikipedia.org/wiki/Equivalence_relation\n//. [iff]:              https://en.wikipedia.org/wiki/If_and_only_if\n//. [parseInt]:         https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\n//. [sanctuary-def]:    v:sanctuary-js/sanctuary-def\n//. [stable sort]:      https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [thrush]:           https://github.com/raganwald-deprecated/homoiconic/blob/master/2008-10-30/thrush.markdown\n//. [type identifier]:  v:sanctuary-js/sanctuary-type-identifiers\n//.\n//. [`Either#fantasy-land/bimap`]:      #Either.prototype.fantasy-land/bimap\n//. [`Either#fantasy-land/map`]:        #Either.prototype.fantasy-land/map\n//. [`Either#toString`]:                #Either.prototype.toString\n//. [`Maybe#toString`]:                 #Maybe.prototype.toString\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sanctuary/index.js\n// module id = 395\n// module chunks = 0","export * from \"./Keyboard-Event\";\nexport * from \"./Keyboard-Serialize\";\nexport * from \"./Keyboard-Calm-Validator\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/keyboard/Keyboard.ts","import { Maybe, S } from '../../../external/sanctuary/Sanctuary';\nimport { InputEvent, InputEventSchedule, InputSender } from '../Input-Event';\nimport * as R from \"ramda\";\n\nexport interface KeyboardEventData {\n    status: KeyboardEventStatus,\n    key: string\n};\n\nexport enum KeyboardEventStatus {\n    PRESS = 1,\n    RELEASE = 2\n}\n\nexport const KeyboardSourceId = \"keyboard\";\n\nexport type KeyboardEventValidator = (data:KeyboardEventData) => boolean;\n\nexport interface KeyboardEventOptions {\n    validate?:(evt:KeyboardEventData) => boolean\n    schedule?:InputEventSchedule;\n}\n\nconst eventMaker = (opts?:KeyboardEventOptions) => (evt:KeyboardEvent):Maybe<InputEvent> => {\n    const data = {\n        status: evt.type === \"keyup\" ? KeyboardEventStatus.RELEASE : KeyboardEventStatus.PRESS,\n        key: evt.key\n    };\n\n    const result = (\n        (evt.defaultPrevented || (!R.isNil(opts.validate) && !opts.validate(data)))\n        ? S.Nothing\n        : S.Just({\n            sourceId: KeyboardSourceId,\n            schedule: opts.schedule,\n            data: data,\n            ts: evt.timeStamp\n        })\n    );\n\n    // Cancel the default action to avoid it being handled twice (from mozilla docs)\n    evt.preventDefault();\n\n    return result;\n}\n\nconst normalize = (opts?:KeyboardEventOptions):KeyboardEventOptions => {\n\n    if(opts === undefined) {\n        opts = {} as KeyboardEventOptions;\n    }\n\n    return opts;\n}\n\nexport const startKeyboard = (opts?:KeyboardEventOptions) => (send:InputSender) => {\n    const makeEvent = eventMaker(normalize(opts));\n\n    const sendEvent = evt => S.map(send) (makeEvent(evt));\n    \n    document.addEventListener(\"keydown\", sendEvent, true);\n    document.addEventListener(\"keyup\", sendEvent, true);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/keyboard/Keyboard-Event.ts","import { flatbuffers } from \"flatbuffers\";\nimport { Keyboard } from \"./../../../flatbuffers/KeyboardEvent_generated\";\nimport {KeyboardEventData, KeyboardEventStatus} from \"./Keyboard-Event\";\nimport { InputEvent, InputEventSchedule, InputSender } from '../Input-Event';\nimport {Serializer} from \"../../serialize/Serialize\";\n\nconst SerializeKeyboardEvent = (builder) => (evtData:KeyboardEventData): number => {\n    const keyPtr = builder.createString(evtData.key);\n    \n    //Serialize everything\n    Keyboard.Event.startEvent(builder);\n    Keyboard.Event.addStatus(builder, evtData.status);\n    Keyboard.Event.addKey(builder, keyPtr);\n    return Keyboard.Event.endEvent(builder);\n\n}\n\nconst SerializeKeyboardEventToBinary = (evtData:KeyboardEventData): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeKeyboardEvent(builder)(evtData));\n\n    return builder.asUint8Array();\n}\n\nconst ParseKeyboardEvent = (evtData:Keyboard.Event): KeyboardEventData =>\n    ({\n        status: evtData.status(),\n        key: evtData.key()\n    });\n\nconst ParseKeyboardEventFromBinary = (bytes: Uint8Array): KeyboardEventData =>\n    ParseKeyboardEvent(\n        Keyboard.Event\n            .getRootAsEvent(new flatbuffers.ByteBuffer(bytes)));\n\nexport const KeyboardEventSerializer:Serializer = {\n    serialize: SerializeKeyboardEventToBinary,\n    parse:  ParseKeyboardEventFromBinary\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/keyboard/Keyboard-Serialize.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Keyboard{\nexport class Event {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Event}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Event {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Event=} obj\n * @returns {Event}\n */\nstatic getRootAsEvent(bb:flatbuffers.ByteBuffer, obj?:Event):Event {\n  return (obj || new Event).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\nstatus():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param {flatbuffers.Encoding=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\nkey():string|null\nkey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nkey(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startEvent(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} status\n */\nstatic addStatus(builder:flatbuffers.Builder, status:number) {\n  builder.addFieldInt32(0, status, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} keyOffset\n */\nstatic addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, keyOffset, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endEvent(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishEventBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/KeyboardEvent_generated.ts","import { KeyboardEventData } from './Keyboard-Event';\n\n//if supplied will only calm those keys, otherwise it calms all\nexport const makeKeyboardCalmValidator = (keysToCalm?:Array<string>) => {\n    const evtMap = new Map<string, KeyboardEventData>();\n\n    const isEqual = data1 => data2 => {\n        return data1.status === data2.status;\n    }\n\n    return (evtData:KeyboardEventData) => {\n        const isValid = \n            (\n                (keysToCalm === undefined || keysToCalm.indexOf(evtData.key) !== -1)\n                    && evtMap.has(evtData.key)\n            )\n                ? !isEqual(evtMap.get(evtData.key)) (evtData)\n                : true\n        \n        evtMap.set(evtData.key, evtData);\n        \n        return isValid;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/keyboard/Keyboard-Calm-Validator.ts","import { Maybe, S } from '../../../external/sanctuary/Sanctuary';\nimport { InputEvent, InputEventSchedule, InputSender } from '../Input-Event';\nimport { getScreenSize } from './Screen-Utils';\nimport {Camera} from \"../../camera/Camera\";\n\nexport interface ScreenEventData extends Partial<Camera>{\n    width: number;\n    height: number;\n};\n\nexport const ScreenSourceId = \"screen\";\n\nexport interface ScreenEventOptions {\n    sendInitial?:boolean;\n    schedule?:InputEventSchedule;\n    mapCamera?:(screenSize:{width: number, height:number}) => Camera;\n}\n\nconst eventMaker = (opts:ScreenEventOptions) => (evt:Event):Maybe<InputEvent> => {\n    const screenSize = getScreenSize();\n\n    const result = (\n        (evt.defaultPrevented)\n        ? S.Nothing\n        : S.Just({\n            sourceId: ScreenSourceId,\n            schedule: opts.schedule,\n            data: opts.mapCamera === undefined\n                ?   {...screenSize}\n                :   {\n                        ...screenSize,\n                        ...opts.mapCamera(screenSize)\n                    },\n            ts: evt.timeStamp\n        })\n    );\n\n    // Cancel the default action to avoid it being handled twice (from mozilla docs)\n    evt.preventDefault();\n\n    return result;\n}\n\nconst normalize = (opts?:ScreenEventOptions):ScreenEventOptions => {\n\n    if(opts === undefined) {\n        opts = {} as ScreenEventOptions;\n    }\n\n    opts.sendInitial = (opts.sendInitial === true) ? true : false;\n\n    return opts;\n}\n\nexport const startScreen = (_opts?:ScreenEventOptions) => (send:InputSender) =>  {\n    const opts = normalize(_opts);\n    const makeEvent = eventMaker(opts);\n\n    const sendEvent = _evt => {\n        S.map(send) (makeEvent(_evt))\n    }\n\n    window.addEventListener(\"resize\", sendEvent, true);\n\n    if(opts.sendInitial) {\n        const screenSize = getScreenSize();\n        send({\n                sourceId: ScreenSourceId,\n                schedule: opts.schedule,\n                data: {\n                    width: screenSize.width,\n                    height: screenSize.height\n                }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/screen/Screen-Event.ts","import { flatbuffers } from 'flatbuffers';\n\nimport { Screen } from '../../../flatbuffers/Flatbuffers';\nimport {ScreenEventData} from \"./Screen-Event\";\nimport {Serializer} from \"../../serialize/Serialize\";\nimport {SerializeCamera, ParseCamera} from \"../../camera/Camera-Serializer\";\nimport {S} from \"../../../external/sanctuary/Sanctuary\";\n\nconst SerializeScreenEvent = (evtData:ScreenEventData) => (builder): number => {\n    const maybeCameraPtr = evtData.projection === undefined \n        ? S.Nothing\n        : S.Just(SerializeCamera (builder) ({\n            eye: evtData.eye,\n            projection: evtData.projection,\n            matrix: evtData.matrix\n        }))\n    \n    //Serialize everything\n    Screen.Event.startEvent(builder);\n    Screen.Event.addWidth(builder, evtData.width);\n    S.map(camera => Screen.Event.addCamera(builder, camera)) (maybeCameraPtr);\n    Screen.Event.addHeight(builder, evtData.height);\n    return Screen.Event.endEvent(builder);\n\n}\n\nconst SerializeScreenEventToBinary = (evtData:ScreenEventData): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeScreenEvent(evtData)(builder));\n\n    return builder.asUint8Array();\n}\n\nconst ParseScreenEvent = (evtData:Screen.Event): ScreenEventData => {\n    const data = {\n        width: evtData.width(),\n        height: evtData.height()\n    } as ScreenEventData;\n\n    const camera = evtData.camera();\n    return (camera) \n        ?   {\n                ...data,\n                ...ParseCamera(camera)\n            }\n        : data;\n}\n\nconst ParseScreenEventFromBinary = (bytes: Uint8Array): ScreenEventData =>\n    ParseScreenEvent(\n        Screen.Event\n            .getRootAsEvent(new flatbuffers.ByteBuffer(bytes)));\n\nexport const ScreenSerializer:Serializer = {\n    serialize: SerializeScreenEventToBinary,\n    parse:  ParseScreenEventFromBinary\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/screen/Screen-Serialize.ts","export * from \"./Tick-Event\";\nexport * from \"./Tick-Serializer\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/tick/Tick.ts","import { Maybe, S } from '../../../external/sanctuary/Sanctuary';\nimport { InputEvent, InputEventSchedule, InputSender } from '../Input-Event';\n\nexport interface TickEventData {\n    frameTs:number;\n    dt:number;\n};\n\nexport const TickSourceId = \"tick\";\n\nexport interface TickEventOptions {\n    schedule?:InputEventSchedule;\n}\n\nconst normalize = (opts?:TickEventOptions):TickEventOptions => {\n\n    if(opts === undefined) {\n        opts = {} as TickEventOptions;\n    }\n\n    return opts;\n}\n\nexport const startTick = (_opts?:TickEventOptions) => (send:InputSender) =>  {\n    let lastTs;\n\n    const opts = normalize(_opts);\n\n    const onTick = (frameTs) => { \n        const evtData:TickEventData = {\n            frameTs: frameTs,\n            dt: lastTs === undefined ? 0 : ((frameTs -lastTs)/1000)\n        }\n        lastTs = frameTs;\n        \n        send\n        ({\n            sourceId: TickSourceId,\n            schedule: opts.schedule,\n            data: evtData,\n            ts: performance.now()\n        })\n\n        requestAnimationFrame(onTick);\n    }\n\n    requestAnimationFrame(onTick);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/tick/Tick-Event.ts","import { flatbuffers } from 'flatbuffers';\n\nimport { Tick } from '../../../flatbuffers/Flatbuffers';\nimport {TickEventData} from \"./Tick-Event\";\nimport {Serializer} from \"../../serialize/Serialize\";\n\nconst SerializeTickEvent = (evtData:TickEventData) => (builder): number => {\n    \n    \n    //Serialize everything\n    Tick.Event.startEvent(builder);\n    Tick.Event.addFrameTs(builder, evtData.frameTs)\n    Tick.Event.addDt(builder, evtData.dt)\n    \n    return Tick.Event.endEvent(builder);\n\n}\n\nconst SerializeTickEventToBinary = (evtData:TickEventData): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeTickEvent(evtData)(builder));\n\n    return builder.asUint8Array();\n}\n\nconst ParseTickEvent = (evtData:Tick.Event): TickEventData =>\n    ({\n        frameTs: evtData.frameTs(),\n        dt: evtData.dt()\n    });\n\nconst ParseTickEventFromBinary = (bytes: Uint8Array): TickEventData =>\n    ParseTickEvent(\n        Tick.Event\n            .getRootAsEvent(new flatbuffers.ByteBuffer(bytes)));\n\nexport const TickSerializer:Serializer = {\n    serialize: SerializeTickEventToBinary,\n    parse:  ParseTickEventFromBinary\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/tick/Tick-Serializer.ts","export * from \"./Pointer-Event\";\nexport * from \"./Pointer-Serialize\";\nexport * from \"./Pointer-Calm-Validator\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/pointer/Pointer.ts","import * as R from \"ramda\";\n\nconst hasTouches = R.hasIn(\"touches\"); //we need to check the whole chain\n\nexport const isTouchEvent = (evt: MouseEvent | TouchEvent): evt is TouchEvent => hasTouches(evt);\n\nexport const getClientCoordsFromPointerEvent = (evt: MouseEvent | TouchEvent): { x: number, y: number } => \n    isTouchEvent(evt)\n        ?   evt.touches.length \n            ?   ({\n                    x: evt.touches[0].clientX,\n                    y: evt.touches[0].clientY,\n                })\n            :   ({\n                    x: NaN,\n                    y: NaN,\n                })\n        :   ({\n                x: evt.clientX,\n                y: evt.clientY\n            });\n\nexport const getPointerCoordsFromDomElement = (element) => (evt: MouseEvent | TouchEvent): { x: number, y: number } => {\n    \n    const rect = element.getBoundingClientRect();\n    const clientCoords = getClientCoordsFromPointerEvent(evt);\n\n    return {\n        x: clientCoords.x,// - rect.left,\n        y: rect.height-clientCoords.y// - rect.top\n    }\n}\n\n//found online... seems to take into account nested divs and scrolling and things\n/*\nconst getCoords = (canvas) => (evt: MouseEvent): { x: number, y: number } => {\n    let x, y, top = 0, left = 0, obj = canvas;\n    while (obj && obj.tagName !== 'BODY') {\n        top += obj.offsetTop;\n        left += obj.offsetLeft;\n        obj = obj.offsetParent;\n    }\n    left += window.pageXOffset;\n    top -= window.pageYOffset;\n    // return relative mouse position\n    return {\n        x: evt.clientX - left,\n        y: canvas.height - (evt.clientY - top)\n    }\n}\n*/\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/Input-Utils.ts","import { flatbuffers } from \"flatbuffers\";\nimport { Pointer } from \"../../../flatbuffers/PointerEvent_generated\";\nimport {PointerEventData} from \"./Pointer-Event\";\nimport {Serializer} from \"../../serialize/Serialize\";\n\nconst SerializePointerEvent =  (builder) => (evtData:PointerEventData): number => {\n    //Serialize everything\n    Pointer.Event.startEvent(builder);\n    Pointer.Event.addStatus(builder, evtData.status);\n    if(evtData.x !== undefined) {\n        Pointer.Event.addX(builder, evtData.x);\n    } \n    \n    if(evtData.y !== undefined) {\n        Pointer.Event.addY(builder, evtData.y);\n    }\n\n    Pointer.Event.addHasX(builder, evtData.x !== undefined);\n    Pointer.Event.addHasY(builder, evtData.y !== undefined);\n  \n    return Pointer.Event.endEvent(builder);\n\n}\n\nconst SerializePointerEventToBinary = (evtData:PointerEventData): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializePointerEvent(builder)(evtData));\n\n    return builder.asUint8Array();\n}\n\nconst ParsePointerEvent = (evtData:Pointer.Event): PointerEventData => {\n    const ret:any = {\n        status: evtData.status()\n    }\n\n    if(evtData.hasX()) {\n        ret.x = evtData.x();\n    }\n\n    if(evtData.hasY()) {\n        ret.y = evtData.y();\n    }\n\n    return ret;\n}\n\nconst ParsePointerEventFromBinary = (bytes: Uint8Array): PointerEventData =>\n    ParsePointerEvent(\n        Pointer.Event\n            .getRootAsEvent(new flatbuffers.ByteBuffer(bytes)));\n\nexport const PointerEventSerializer:Serializer = {\n    serialize: SerializePointerEventToBinary,\n    parse:  ParsePointerEventFromBinary\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/pointer/Pointer-Serialize.ts","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @constructor\n */\nexport namespace Pointer{\nexport class Event {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer;\n\n  /**\n   * @type {number}\n   */\n  bb_pos:number = 0;\n/**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Event}\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Event {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Event=} obj\n * @returns {Event}\n */\nstatic getRootAsEvent(bb:flatbuffers.ByteBuffer, obj?:Event):Event {\n  return (obj || new Event).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns {number}\n */\nstatus():number {\n  var offset = this.bb.__offset(this.bb_pos, 4);\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns {number}\n */\nx():number {\n  var offset = this.bb.__offset(this.bb_pos, 6);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {number}\n */\ny():number {\n  var offset = this.bb.__offset(this.bb_pos, 8);\n  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @returns {boolean}\n */\nhasX():boolean {\n  var offset = this.bb.__offset(this.bb_pos, 10);\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @returns {boolean}\n */\nhasY():boolean {\n  var offset = this.bb.__offset(this.bb_pos, 12);\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n */\nstatic startEvent(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} status\n */\nstatic addStatus(builder:flatbuffers.Builder, status:number) {\n  builder.addFieldInt32(0, status, 0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} x\n */\nstatic addX(builder:flatbuffers.Builder, x:number) {\n  builder.addFieldFloat64(1, x, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {number} y\n */\nstatic addY(builder:flatbuffers.Builder, y:number) {\n  builder.addFieldFloat64(2, y, 0.0);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {boolean} hasX\n */\nstatic addHasX(builder:flatbuffers.Builder, hasX:boolean) {\n  builder.addFieldInt8(3, +hasX, +false);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {boolean} hasY\n */\nstatic addHasY(builder:flatbuffers.Builder, hasY:boolean) {\n  builder.addFieldInt8(4, +hasY, +false);\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\nstatic endEvent(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\n/**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} offset\n */\nstatic finishEventBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n};\n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/flatbuffers/PointerEvent_generated.ts","import {PointerEventData} from './Pointer-Event';\n\nexport const makePointerCalmValidator = () => {\n    let lastValidPointer:PointerEventData;\n\n    const isEqual = data1 => data2 => {\n        return data1.status === data2.status \n            && data1.x === data2.x\n            && data1.y === data2.y;\n    }\n\n    return (evtData:PointerEventData) => {\n        const isValid = \n            lastValidPointer !== undefined\n                ? !isEqual(lastValidPointer) (evtData)\n                : true\n\n        lastValidPointer = evtData;\n        \n        return isValid;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/pointer/Pointer-Calm-Validator.ts","export * from \"./TickPointer-Event\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/tick-pointer/TickPointer.ts","import { Maybe, S } from '../../../external/sanctuary/Sanctuary';\nimport { InputEvent, InputEventSchedule, InputSender } from '../Input-Event';\nimport { PointerEventData, PointerEventOptions, getTriggersFromOptions, normalizePointerOptions, pointerEventDataMaker } from '../pointer/Pointer-Event';\nimport { TickEventData } from '../tick/Tick-Event';\n\n/*\n    Basically a combo of pointer and tick\n    It only sends on ticks where there is a valid pointer event\n\n    Intended for throttling move on browsers that don't inherently consolidate\n*/\n\nexport type TickPointerEventData = TickEventData & PointerEventData;\n\nexport const TickPointerSourceId = \"tickPointer\";\n\n\nexport const startTickPointer = (_opts?:PointerEventOptions) => (send:InputSender) =>  {\n    let lastTs;\n    let lastPointerEvent:MouseEvent = null;\n\n    const opts = normalizePointerOptions(_opts);\n\n    const makePointerData = pointerEventDataMaker(opts);\n\n    const onTick = (frameTs) => {\n        if(lastPointerEvent !== null) {\n            S.map(pointerEventData => {\n                const evtData:TickPointerEventData = {\n                    ...pointerEventData,\n                    frameTs: frameTs,\n                    dt: lastTs === undefined ? 0 : ((frameTs -lastTs)/1000)\n                }\n                \n                lastTs = frameTs;\n                \n                send\n                ({\n                    sourceId: TickPointerSourceId,\n                    schedule: opts.schedule,\n                    data: evtData,\n                    ts: performance.now()\n                })\n            })\n            (makePointerData(lastPointerEvent))\n\n            lastPointerEvent = null;\n        }\n        \n\n        requestAnimationFrame(onTick);\n    }\n\n    requestAnimationFrame(onTick);\n\n    getTriggersFromOptions(opts).forEach(trigger => {\n        opts.domElement.addEventListener(trigger, (evt:MouseEvent) => {\n            if(!evt.defaultPrevented) {\n                lastPointerEvent = evt;\n            }\n            \n            evt.preventDefault();\n        }, false);\n    });\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/input/tick-pointer/TickPointer-Event.ts","import * as R from \"ramda\";\nimport {S, Either, Maybe} from \"../../external/sanctuary/Sanctuary\";\n\nexport const LOADER_TYPE_XHR = \"xhr\";\n\nexport enum LoaderXhrResponseType {\n    BLOB = \"blob\",\n    ARRAYBUFFER = \"arraybuffer\",\n    DOCUMENT = \"document\",\n    JSON = \"json\",\n    TEXT = \"text\",\n}\n\nexport enum LoaderXhrRequestMethod {\n    GET = \"GET\",\n    POST = \"POST\",\n    PUT = \"PUT\",\n    DELETE = \"DELETE\"\n}\n\nexport enum LoaderXhrRequestType {\n    PLAIN = \"plain\",\n    FORM = \"form\",\n    MULTIPART = \"multipart\"\n}\n\nexport interface LoaderXhrRequest {\n    url:string;\n    args:any;\n    logError:boolean;\n    method:LoaderXhrRequestMethod;\n    requestType:LoaderXhrRequestType;\n    responseType:LoaderXhrResponseType;\n    headers?:Array<[string, string]>;\n    __loaderType:string\n}\n\nexport interface LoaderXhrResponse {\n    data:any;\n    statusCode:number;\n    success:boolean;\n    __loaderType:string\n}\n\n\nexport type LoaderXhrCallback = (resp:Either<LoaderXhrResponse>) => void;\n\n//Nothing means it's loading, Left/Right means error/success\nexport type LoaderXhrStatus = Maybe<LoaderXhrResponse> | Either<LoaderXhrResponse>;\n\nconst fillDefaults = (req:Partial<LoaderXhrRequest>):LoaderXhrRequest => {\n    return {\n        url: R.isNil(req.url) ? \"\" : req.url,\n        args: R.isNil(req.args) ? null : req.args,\n        logError: R.isNil(req.logError) ? true : req.logError,\n        method: R.isNil(req.method) ? LoaderXhrRequestMethod.GET : req.method,\n        requestType: R.isNil(req.requestType) ? LoaderXhrRequestType.PLAIN : req.requestType,\n        responseType: R.isNil(req.responseType) ? LoaderXhrResponseType.ARRAYBUFFER : req.responseType,\n        __loaderType: LOADER_TYPE_XHR\n    }\n}\n\nconst requestsEqual = (r1:LoaderXhrRequest) => (r2:LoaderXhrRequest):boolean => {\n    const r1Nil = R.isNil(r1);\n    const r2Nil = R.isNil(r2);\n\n    if(r1Nil && r2Nil) {\n        return true;\n    }\n    if(r1Nil !== r2Nil) {\n        return false;\n    }\n\n    return (\n        r1.url === r2.url \n        && r1.method === r2.method \n        && r1.requestType === r2.requestType \n        && r1.responseType === r2.responseType\n    );\n}\n\n//the loader class is expected to be polled (e.g. on tick) - it does not broadcast events\n//loadXhr returns a new loader with a Promise\nexport class LoaderXhr {\n    private currentRequest:LoaderXhrRequest;\n    private _status:Either<LoaderXhrResponse>;\n    private xhr:XMLHttpRequest = null;\n    public __loaderType = LOADER_TYPE_XHR;\n    \n    constructor(_req?:Partial<LoaderXhrRequest>, _callback?:LoaderXhrCallback) {\n        if(_req !== undefined) {\n            this.load(_req, _callback);\n        }\n    }\n\n    public load(_req:Partial<LoaderXhrRequest>, _callback?:LoaderXhrCallback):LoaderXhrStatus {\n        const req = fillDefaults(_req);\n\n        if(!requestsEqual(this.currentRequest) (req)) {\n            this.close();\n        }\n\n        this.currentRequest = req;\n\n        if(!R.isNil(this._status)) { \n            //if we got it, return it\n            return this._status;\n        }\n\n        if(R.isNil(req) || this.xhr !== null) {\n            //if request is null, just treat it as \"always loading\"\n            //if the xhr is not null here - it means its still loading from a previous request\n            return S.Nothing;\n        }\n\n        //otherwise, it's a valid new request\n\n        const xhr = new XMLHttpRequest();\n        this.xhr = xhr;\n\n        xhr.onreadystatechange = () => {\n            \n            if (xhr.readyState === xhr.DONE) {\n                if(!xhr.status) {\n                    return; //was aborted... this.xhr should actually be null\n                }\n\n                const response:Partial<LoaderXhrResponse> = {\n                    __loaderType: LOADER_TYPE_XHR\n                };\n\n                response.data = req.responseType === LoaderXhrResponseType.TEXT ? xhr.responseText : xhr.response;\n                response.statusCode = xhr.status;\n                \n                if(response.statusCode !== 200) {\n                    if(req.logError) {\n                        console.error(response);\n                    }\n                    this._status = S.Left(response);\n                } else {\n                    this._status = S.Right(response);\n                }\n\n                if(!R.isNil(_callback)) {\n                    _callback(this._status);\n                }\n            }\n        }\n\n        xhr.open(req.method, req.url);\n        xhr.responseType = req.responseType;\n\n        if(_req.headers !== undefined) {\n            _req.headers.forEach(([key, val]) => {\n                xhr.setRequestHeader(key, val);\n            });\n\n            //if we have an inherent jwt - mix it in here?\n        };\n        \n        if (_req.requestType === LoaderXhrRequestType.FORM && _req.args !== null) {\n            let requestData = '';\n\n            for (var key in req.args) {\n\n                if (_req.args.hasOwnProperty(key)) {\n                    if (requestData !== '') {\n                        requestData += '&'\n                    }\n                    requestData += key + \"=\" + encodeURIComponent(_req.args[key])\n                }\n            }\n\n            if (requestData !== '') {\n                xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n                //Not actually allowed by spec, so commenting out.. browser will calculate automatically\n                //xhr.setRequestHeader(\"Content-length\", requestData.length);\n                xhr.send(requestData);\n            } else {\n                xhr.send();\n            }\n\n        } else if(_req.requestType === LoaderXhrRequestType.MULTIPART && _req.args !== null) {\n            xhr.send(_req.args);\n        } else {\n            xhr.send();\n        }\n        \n        return this.status;\n    }\n\n    public get status():LoaderXhrStatus {\n        return R.isNil(this._status)\n            ? S.Nothing\n            : this._status\n    }\n    \n    public close() {\n        if(!R.isNil(this.xhr)) {\n            this.xhr.onreadystatechange = null;\n            this.xhr.abort();\n        }\n\n        this.xhr = null;\n        this._status = null;\n    }\n}\n\nexport const loadXhrPromise = (req:Partial<LoaderXhrRequest>):Promise<Either<LoaderXhrResponse>> =>\n    new Promise<Either<LoaderXhrResponse>>(resolve => new LoaderXhr(req, resolve));\n\nexport const loadXhrFactory = (req:Partial<LoaderXhrRequest>, callback?:LoaderXhrCallback):LoaderXhr => new LoaderXhr(req, callback)\n\nexport const isLoaderXhr = (arg:any): arg is LoaderXhr => \n    arg.__loaderType === LOADER_TYPE_XHR;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/loaders/Loaders-Xhr.ts","import {LoaderImage, LoaderImageStatus, LoaderImageRequest, LoaderImageResponse} from \"./Loaders-Image\";\nimport {createSimpleTextureFromTarget, WebGlTextureOptions} from \"../webgl/WebGl-Textures\";\nimport * as R from \"ramda\";\nimport {S, Maybe, Either} from \"../../external/sanctuary/Sanctuary\";\n\nexport type LoaderTextureRequest = LoaderImageRequest & WebGlTextureOptions\n\nexport interface LoaderTextureResponse extends LoaderImageResponse {\n    texture: WebGLTexture;\n}\n\nexport const LOADER_TYPE_TEXTURE = \"texture\";\n\nexport type LoaderTextureStatus = Maybe<LoaderTextureResponse> | Either<LoaderTextureResponse>;\n\nexport type LoaderTextureCallback = (resp:Either<LoaderTextureResponse>) => void;\n\n//use loadTexture for promise-version, this one is meant to be callback/polled\nexport class LoaderTexture {\n    private _status:Either<LoaderTextureResponse>;\n    public __loaderType = LOADER_TYPE_TEXTURE;\n    \n    constructor(_req:Partial<LoaderTextureRequest>, callbackAfterLoad?:LoaderTextureCallback) {\n        const req = Object.assign({}, _req, {__loaderType: LOADER_TYPE_TEXTURE})\n\n        const ldr = new LoaderImage(req, imgResp => {\n\n            this._status = imgResp.isLeft\n                ? S.Left({ //TODO: change this to map or chain, convert to Right first then to left\n                        __loaderType: LOADER_TYPE_TEXTURE,\n                        errorEvt: imgResp.value.errorEvt\n                    })\n                : S.map(imgResp => ({\n                        img: imgResp.img,\n                        texture: createSimpleTextureFromTarget (req as LoaderTextureRequest) (imgResp.img),\n                        __loaderType: LOADER_TYPE_TEXTURE\n                    })) \n                    (imgResp)\n\n            if(callbackAfterLoad !== undefined) {\n                callbackAfterLoad(this._status);\n            }\n        })\n    }\n\n    public get status():LoaderTextureStatus {\n        return R.isNil(this._status)\n            ? S.Nothing\n            : this._status\n    }\n}\n\n\nexport const loadTexturePromise = (req:Partial<LoaderTextureRequest>):Promise<Either<LoaderTextureResponse>> =>\n    new Promise<Either<LoaderTextureResponse>>(resolve => new LoaderTexture(req, resolve));\n\nexport const loadTextureFactory = (req:Partial<LoaderTextureRequest>, callback?:LoaderTextureCallback):LoaderTexture => new LoaderTexture(req, callback)\n\nexport const isLoaderTexture = (arg:any): arg is LoaderTexture => \n    arg.__loaderType === LOADER_TYPE_TEXTURE;\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/loaders/Loaders-Texture.ts","export const isPowerOf2 = (value:number):boolean =>\n    (value & (value - 1)) == 0;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/math/PowerOfTwo.ts","export * from \"./Number-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/number/Number.ts","export const roundToMultiple = (m:number) => (n:number) =>\n    Math.ceil(n/m)*m;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/number/Number-Utils.ts","export * from \"./Functional-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/functional/Functional.ts","import {S, Maybe} from \"../../external/sanctuary/Sanctuary\";\nimport * as R from \"ramda\";\n\n//setPropsFromRamdaLens :: (String -> Lens) -> Object -> StrMap\n//https://repl.it/NcuK/2\nexport const setPropsFromRamdaLens = fn => obj => delta =>\n  Object\n    .keys(delta)\n    .reduce(\n      (acc, key) => \n        R.set (fn(key)) (delta[key]) (acc)\n      , obj);\n\n//reduce an object to only be the ramda-style lens they contain - https://repl.it/N1p3/2\nexport const reduceToRamdaLens = lens => obj =>\n  Object\n    .keys(obj)\n    .reduce((acc, key) => \n      {\n        R.when(\n          v => R.not(R.isNil(v)),\n          v => acc[key] = R.merge(v) (reduceToRamdaLens (lens) (v))\n        ) (R.view (lens) (obj[key]))\n        return acc;\n      }, {});\n\n//map keys of an object - via https://github.com/ramda/ramda/wiki/Cookbook#map-keys-of-an-object\n//mapKeys :: (String -> String) -> Object -> Object\nexport const mapObjKeys = fn => obj =>\n  R.fromPairs(R.map(R.adjust(fn, 0), R.toPairs(obj)));\n\n//drops items from objB where each value is compared to the one with the same key in objA\nexport const omitObjCompared = fn => objA => objB =>\n  R.pick(\n    R.reject(key => fn(R.prop(key, objA), R.prop(key, objB))) (Object.keys(objB)),\n    objB\n  );\n  \n\n//Maps keys in an object to a lookup table\n//Drops items that are not found\nexport const mapObjKeysLookup = lookup => S.pipe([\n  R.toPairs,\n  S.mapMaybe(([k, v]) => R.has(k, lookup) ? S.Just([lookup[k], v]) : S.Nothing),\n  R.fromPairs\n]);\n\n//Filters an object by value\n\nexport const filterObjVal = fn => obj =>\n  Object.keys(obj).reduce((acc, key) => {\n    const val = obj[key];\n    if (fn(val)) {\n      acc[key] = val;\n    }\n    return acc;\n  }, {})\n\nexport const filterObjExcludeVals = vals =>\n  filterObjVal(val => vals.indexOf(val) === -1);\n\n//filter by keys\nexport const filterObjectByKeys = fn => obj => \n  Object.keys(obj)\n    .filter(key => !fn(key))\n    .reduce((ret, key) => \n      {\n        ret[key] = obj[key];\n        return ret;\n      }, {});\n\n\nexport const flap = f => x => S.map(S.T(x), f)\n\n//compare a maybe to its value based on a predicate\n//Nothing is always false\n//see https://repl.it/@DavidKomer/compareMaybe\nexport const compareMaybe = <A>(pred:((a:A) => (b:A) => boolean)) => (a:A) => (mB:Maybe<A>):boolean => \n    S.maybe (false) (pred(a)) (mB);\n\n//see if a maybe's value based on a predicate\n//Nothing is always false\nexport const equalsMaybe = <A>(a:A) => (mB:Maybe<A>):boolean => \n    compareMaybe(S.equals) (a) (mB);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/functional/Functional-Utils.ts","import {NumberArray} from \"../array/Array\";\n\nconst identity:Readonly<Array<number>> = [0,0,0,1];\n\nexport const createQuat = (vals?:NumberArray):NumberArray =>\n  Float64Array.from(vals === undefined ? identity : vals);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/quat/Quat-Create.ts","export * from \"./Ray-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/ray/Ray.ts","import {NumberArray} from \"../array/Array\";\nimport {createVec3} from \"../vector/Vector\";\nimport { vec3 } from 'gl-matrix';\n\nconst DEFAULT_DISTANCE  = 4096;\n\n\nexport const getLineFromRay = ({origin, dir, dist}:{origin?: NumberArray, dir?: NumberArray, dist?: number}):[NumberArray, NumberArray] => {\n    \n    const scaleAmt = dist === undefined ? DEFAULT_DISTANCE : dist;\n\n    const output = vec3.normalize(createVec3() as any, dir as any) as any;\n    vec3.scale(output, output, scaleAmt);\n\n    const p2 = vec3.add(output,origin as any,output) as any;\n\n    return [origin, p2];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/ray/Ray-Utils.ts","export interface Serializer {\n    serialize: (props:any) => Uint8Array;\n    parse: (bytes:Uint8Array) => any;\n}\nexport type Serializers = Map<string,Serializer>;\n\nexport const createSerializerMap = () => new Map<string, Serializer>();\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/serialize/Serialize.ts","export * from \"./State-Serialize\";\nexport * from \"./State-Logger\";\nexport * from \"./State-Elements\";\nexport * from \"./State-Tree-Mapper\";\nexport * from \"./State-Accessors\";\nexport * from \"./State-Transform\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State.ts","import { flatbuffers } from 'flatbuffers';\nimport * as L from 'partial.lenses';\nimport * as R from 'ramda';\n\nimport { S } from '../../external/sanctuary/Sanctuary';\nimport { State } from '../../flatbuffers/Flatbuffers';\nimport { parseInputEvent, serializeInputEvent } from '../input/Input-Serialize';\nimport { ParseTransform, SerializeTransform } from '../transform/Transform';\nimport { Serializers, Serializer } from '../serialize/Serialize';\nimport { StateElement } from './State-Elements';\nimport {lTransform} from \"./State-Transform\";\nimport {CHILDREN, PROPS} from \"./State-Accessors\";\nimport {createElement} from \"./State-Elements\";\n\nconst loggerForMissingSerializers = {};\n\nexport const serializeAppStateToBinary = (logMissingSerializers:boolean) => (propSerializers:Serializers) => (elTree:StateElement):Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n\n    const _constructNode = lens => {\n        const el:StateElement = L.get(lens) (elTree);\n\n    \n        const tLens = L.compose([lens, lTransform]);\n        \n        const elPropsLens = L.compose([lens, PROPS]);\n\n        const typePtr = builder.createString(el.type);\n\n        const hasSerializer = propSerializers.has(el.type);\n\n        if(!hasSerializer && logMissingSerializers) {\n            if(!loggerForMissingSerializers.hasOwnProperty(el.type)) {\n                loggerForMissingSerializers[el.type] = true;\n                console.log(`No serializer for ${el.type}`);\n            }\n            \n        }\n\n            /*\n        if(L.isDefined(rLens) (elTree) && !R.isNil (L.get(rLens) (elTree))) {\n            console.log(L.get(rLens) (elTree))   \n        }\n        */\n\n        const transformPtr = L.isDefined(tLens) (elTree) && !R.isNil (L.get(tLens) (elTree))\n            ? S.Just(SerializeTransform(builder) (L.get(tLens) (elTree)))\n            : S.Nothing;\n\n        const propsPtr = \n            hasSerializer && L.isDefined(elPropsLens) (elTree) && !R.isNil (L.get(elPropsLens) (elTree))\n                ? S.Just(State.Element.createPropsVector(builder, propSerializers.get(el.type).serialize (L.get(elPropsLens) (elTree))))\n                : S.Nothing;\n\n        const childrenPtrs = \n            R.isNil(el.children)\n                ? S.Nothing\n                : S.Just\n                    (\n                        el.isChildText\n                        ?   [builder.createString(el.children[0])]\n                        :   Array.isArray(el.children)\n                                ? el.children\n                                    .map((child, i) => L.compose([lens, CHILDREN, i]))\n                                    .map(_constructNode)\n                                :   [_constructNode(L.compose([lens, CHILDREN]))]\n                    )\n       \n        return {\n            type: typePtr,\n            props: propsPtr,\n            children: childrenPtrs,\n            transform: transformPtr,\n            isChildText: el.isChildText\n        }\n    }\n\n    const _writeNode = nodeData  => asText => {\n        if(asText) {\n            State.Element.startElement(builder);\n            State.Element.addText(builder, nodeData);\n            return State.Element.endElement(builder);\n        }\n\n        const { type, props, children, transform,isChildText} = nodeData;\n\n        const childrenPtr =\n            S.map\n                (cPtrs => \n                    State.Element.createChildrenVector(builder, cPtrs.map(c => _writeNode(c) (isChildText))))\n                (children);\n\n        State.Element.startElement(builder);\n        State.Element.addChildIsText(builder, isChildText);\n        State.Element.addTypeId(builder, type);\n\n        S.map\n            (p => State.Element.addProps(builder, p))\n            (props)\n        S.map\n            (c => State.Element.addChildren(builder, c))\n            (childrenPtr)\n        S.map\n            (t => State.Element.addTransform(builder, t))\n            (transform)\n            \n        return State.Element.endElement(builder);\n    }\n\n    _writeNode(_constructNode(L.identity)) (false);\n    return builder.asUint8Array();\n\n}\n\nexport const parseStateFromBinary = (serializers:Serializers) => (bytes:Uint8Array):StateElement => {\n    const parseElement = (data:State.Element) => {\n        \n        const mapChildren = () => {\n            let acc = [];\n            for(let i = 0; i < data.childrenLength(); i++) {\n                acc[i] = parseElement(data.children(i));\n            }\n            return acc;\n        }\n       \n        const dataType = data.typeId();\n\n        const props = data.propsLength() \n            ? serializers.has(dataType)\n                ?   serializers.get(dataType).parse (data.propsArray())\n                :   {}\n            : {};\n\n        if(!R.isNil(data.transform())) {\n            props[\"transform\"] = ParseTransform(data.transform())\n        }\n        \n        return createElement(\n            dataType, \n            props,\n            data.childrenLength()\n                    ? data.childIsText() \n                        ?   data.children(0).text()\n                        :   mapChildren()\n                    : null,\n        )   \n    }\n\n    return parseElement(State.Element.getRootAsElement(new flatbuffers.ByteBuffer(bytes)))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State-Serialize.tsx","var ary1of2 = function ary1of2(fn) {\n  return function (x0, x1) {\n    return arguments.length < 2 ? fn(x0) : fn(x0)(x1);\n  };\n};\n\nvar ary2of2 = function ary2of2(fn) {\n  return function (x0, x1) {\n    return arguments.length < 2 ? function (x1) {\n      return fn(x0, x1);\n    } : fn(x0, x1);\n  };\n};\n\nvar ary1of3 = function ary1of3(fn) {\n  return function (x0, x1, x2) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return curryN(2, fn(x0));\n      case 2:\n        return curryN(2, fn(x0))(x1);\n      default:\n        return curryN(2, fn(x0))(x1, x2);\n    }\n  };\n};\n\nvar ary2of3 = function ary2of3(fn) {\n  return function (x0, x1, x2) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return ary1of2(function (x1) {\n          return fn(x0, x1);\n        });\n      case 2:\n        return fn(x0, x1);\n      default:\n        return fn(x0, x1)(x2);\n    }\n  };\n};\n\nvar ary3of3 = function ary3of3(fn) {\n  return function (x0, x1, x2) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return ary2of2(function (x1, x2) {\n          return fn(x0, x1, x2);\n        });\n      case 2:\n        return function (x2) {\n          return fn(x0, x1, x2);\n        };\n      default:\n        return fn(x0, x1, x2);\n    }\n  };\n};\n\nvar ary1of4 = function ary1of4(fn) {\n  return function (x0, x1, x2, x3) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return curryN(3, fn(x0));\n      case 2:\n        return curryN(3, fn(x0))(x1);\n      case 3:\n        return curryN(3, fn(x0))(x1, x2);\n      default:\n        return curryN(3, fn(x0))(x1, x2, x3);\n    }\n  };\n};\n\nvar ary2of4 = function ary2of4(fn) {\n  return function (x0, x1, x2, x3) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return ary1of3(function (x1) {\n          return fn(x0, x1);\n        });\n      case 2:\n        return curryN(2, fn(x0, x1));\n      case 3:\n        return curryN(2, fn(x0, x1))(x2);\n      default:\n        return curryN(2, fn(x0, x1))(x2, x3);\n    }\n  };\n};\n\nvar ary3of4 = function ary3of4(fn) {\n  return function (x0, x1, x2, x3) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return ary2of3(function (x1, x2) {\n          return fn(x0, x1, x2);\n        });\n      case 2:\n        return ary1of2(function (x2) {\n          return fn(x0, x1, x2);\n        });\n      case 3:\n        return fn(x0, x1, x2);\n      default:\n        return fn(x0, x1, x2)(x3);\n    }\n  };\n};\n\nvar ary4of4 = function ary4of4(fn) {\n  return function (x0, x1, x2, x3) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return ary3of3(function (x1, x2, x3) {\n          return fn(x0, x1, x2, x3);\n        });\n      case 2:\n        return ary2of2(function (x2, x3) {\n          return fn(x0, x1, x2, x3);\n        });\n      case 3:\n        return function (x3) {\n          return fn(x0, x1, x2, x3);\n        };\n      default:\n        return fn(x0, x1, x2, x3);\n    }\n  };\n};\n\nvar ary0of0 = function ary0of0(fn) {\n  return fn.length === 0 ? fn : function () {\n    return fn();\n  };\n};\nvar ary1of1 = function ary1of1(fn) {\n  return fn.length === 1 ? fn : function (x) {\n    return fn(x);\n  };\n};\n\nvar C = [[ary0of0], [ary1of1, ary1of1], [void 0, ary1of2, ary2of2], [void 0, ary1of3, ary2of3, ary3of3], [void 0, ary1of4, ary2of4, ary3of4, ary4of4]];\n\nvar curryN = function curryN(n, f) {\n  return C[n][Math.min(n, f.length)](f);\n};\nvar arityN = function arityN(n, f) {\n  return C[n][n](f);\n};\nvar curry = function curry(f) {\n  return arityN(f.length, f);\n};\n\n//\n\nvar assign = Object.assign;\n\nvar toObject = function toObject(x) {\n  return assign({}, x);\n};\n\n//\n\nvar id = function id(x) {\n  return x;\n};\nvar always = function always(x) {\n  return function (_) {\n    return x;\n  };\n};\nvar applyU = function applyU(x2y, x) {\n  return x2y(x);\n};\nvar sndU = function sndU(_, y) {\n  return y;\n};\n\n//\n\nvar freeze = function freeze(x) {\n  return x && Object.freeze(x);\n};\n\nvar array0 = /*#__PURE__*/freeze([]);\nvar object0 = /*#__PURE__*/freeze({});\n\n//\n\nvar isDefined = function isDefined(x) {\n  return void 0 !== x;\n};\n\n//\n\nvar hasU = function hasU(p, x) {\n  return Object.prototype.hasOwnProperty.call(x, p);\n};\n\n//\n\nvar constructorOf = function constructorOf(x) {\n  return x === undefined || x === null ? x : (hasU(\"constructor\", x) ? Object.getPrototypeOf(x) : x).constructor;\n};\n\n//\n\nvar isFunction = function isFunction(x) {\n  return typeof x === \"function\";\n};\nvar isString = function isString(x) {\n  return typeof x === \"string\";\n};\nvar isNumber = function isNumber(x) {\n  return typeof x === \"number\";\n};\n\nvar isArray = Array.isArray;\n\nvar isObject = function isObject(x) {\n  return x ? Object === constructorOf(x) : false;\n};\n\n//\n\nfunction pipe2U(fn1, fn2) {\n  var n = fn1.length;\n  return n === 1 ? function (x) {\n    return fn2(fn1(x));\n  } : arityN(n, function () {\n    return fn2(fn1.apply(undefined, arguments));\n  });\n}\n\nvar compose2U = function compose2U(fn1, fn2) {\n  return pipe2U(fn2, fn1);\n};\n\n//\n\nfunction seq(x) {\n  for (var _len = arguments.length, fns = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    fns[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0, n = fns.length; i < n; ++i) {\n    x = fns[i](x);\n  }return x;\n}\n\nfunction seqPartial(x) {\n  for (var _len2 = arguments.length, fns = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    fns[_key2 - 1] = arguments[_key2];\n  }\n\n  for (var i = 0, n = fns.length; isDefined(x) && i < n; ++i) {\n    x = fns[i](x);\n  }return x;\n}\n\n//\n\nvar identicalU = function identicalU(a, b) {\n  return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;\n};\n\n//\n\nfunction whereEqU(t, o) {\n  for (var k in t) {\n    var bk = o[k];\n    if (!isDefined(bk) && !hasU(k, o) || !acyclicEqualsU(t[k], bk)) return false;\n  }\n  return true;\n}\n\n//\n\nfunction hasKeysOfU(t, o) {\n  for (var k in t) {\n    if (!hasU(k, o)) return false;\n  }return true;\n}\n\n//\n\nvar acyclicEqualsObject = function acyclicEqualsObject(a, b) {\n  return whereEqU(a, b) && hasKeysOfU(b, a);\n};\n\nfunction acyclicEqualsArray(a, b) {\n  var n = a.length;\n  if (n !== b.length) return false;\n  for (var i = 0; i < n; ++i) {\n    if (!acyclicEqualsU(a[i], b[i])) return false;\n  }return true;\n}\n\nfunction acyclicEqualsU(a, b) {\n  if (identicalU(a, b)) return true;\n  if (!a || !b) return false;\n  var c = constructorOf(a);\n  if (c !== constructorOf(b)) return false;\n  switch (c) {\n    case Array:\n      return acyclicEqualsArray(a, b);\n    case Object:\n      return acyclicEqualsObject(a, b);\n    default:\n      return isFunction(a.equals) && a.equals(b);\n  }\n}\n\n//\n\nfunction unzipObjIntoU(o, ks, vs) {\n  for (var k in o) {\n    if (ks) ks.push(k);\n    if (vs) vs.push(o[k]);\n  }\n}\n\nfunction keys(o) {\n  if (o instanceof Object) {\n    if (Object === constructorOf(o)) {\n      var ks = [];\n      unzipObjIntoU(o, ks, 0);\n      return ks;\n    } else {\n      return Object.keys(o);\n    }\n  }\n}\n\nfunction values(o) {\n  if (o instanceof Object) {\n    if (Object === constructorOf(o)) {\n      var vs = [];\n      unzipObjIntoU(o, 0, vs);\n      return vs;\n    } else {\n      var xs = Object.keys(o),\n          n = xs.length;\n      for (var i = 0; i < n; ++i) {\n        xs[i] = o[xs[i]];\n      }return xs;\n    }\n  }\n}\n\n//\n\nfunction assocPartialU(k, v, o) {\n  var r = {};\n  if (o instanceof Object) {\n    if (Object !== constructorOf(o)) o = toObject(o);\n    for (var l in o) {\n      if (l !== k) {\n        r[l] = o[l];\n      } else {\n        r[k] = v;\n        k = void 0;\n      }\n    }\n  }\n  if (isDefined(k)) r[k] = v;\n  return r;\n}\n\nfunction dissocPartialU(k, o) {\n  var r = void 0;\n  if (o instanceof Object) {\n    if (Object !== constructorOf(o)) o = toObject(o);\n    for (var l in o) {\n      if (l !== k) {\n        if (!r) r = {};\n        r[l] = o[l];\n      } else {\n        k = void 0;\n      }\n    }\n  }\n  return r;\n}\n\n//\n\nfunction inherit(Derived, Base, protos, statics) {\n  var proto = Derived.prototype = Object.create(Base.prototype);\n  proto.constructor = Derived;\n  assign(proto, protos);\n  assign(Derived, statics);\n  return Derived;\n}\n\nexport { curryN, arityN, curry, assign, toObject, id, always, applyU, sndU, freeze, array0, object0, isDefined, hasU, constructorOf, isFunction, isString, isNumber, isArray, isObject, pipe2U, compose2U, seq, seqPartial, identicalU, whereEqU, hasKeysOfU, acyclicEqualsObject, acyclicEqualsU, unzipObjIntoU, keys, values, assocPartialU, dissocPartialU, inherit };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/infestines/dist/infestines.es.js\n// module id = 426\n// module chunks = 0","import { flatbuffers } from \"flatbuffers\";\nimport { Transform as TransformData} from \"../../flatbuffers/Flatbuffers\";\n\nimport {SerializeMatrix4, ParseMatrix4} from \"../matrix/Matrix\"\nimport {SerializeVector4, ParseVector4} from \"../vector/Vector\";\nimport {Transform} from \"./Transform-Utils\";\nimport {S} from \"../../external/sanctuary/Sanctuary\";\n\nexport const SerializeTransform = (builder)=>(props: Transform): number => {\n    const localSpacePtr = SerializeMatrix4 (builder) (props.localSpace);\n\n    const maybeWorldSpacePtr = props.worldSpace \n        ? S.Just(SerializeMatrix4 (builder) (props.worldSpace))\n        : S.Nothing;\n    const maybeParentWorldSpacePtr = props.parentWorldSpace\n        ? S.Just(SerializeMatrix4 (builder) (props.parentWorldSpace))\n        : S.Nothing;\n\n    \n    //Serialize everything\n    TransformData.Props.startProps(builder);\n    TransformData.Props.addPosX(builder, props.posX);\n    TransformData.Props.addPosY(builder, props.posY);\n    TransformData.Props.addPosZ(builder, props.posZ);\n    TransformData.Props.addOriginX(builder, props.originX);\n    TransformData.Props.addOriginY(builder, props.originY);\n    TransformData.Props.addOriginZ(builder, props.originZ);\n    TransformData.Props.addScaleX(builder, props.scaleX);\n    TransformData.Props.addScaleY(builder, props.scaleY);\n    TransformData.Props.addScaleZ(builder, props.scaleZ);\n    TransformData.Props.addRotX(builder, props.rotX);\n    TransformData.Props.addRotY(builder, props.rotY);\n    TransformData.Props.addRotZ(builder, props.rotZ);\n    TransformData.Props.addRotW(builder, props.rotW);\n    TransformData.Props.addLocalSpace(builder, localSpacePtr);\n\n    S.map(worldSpace => TransformData.Props.addWorldSpace(builder, worldSpace)) (maybeWorldSpacePtr);\n    S.map(parentWorldSpace => TransformData.Props.addParentWorldSpace(builder, parentWorldSpace)) (maybeParentWorldSpacePtr);\n    return TransformData.Props.endProps(builder);\n\n}\n\nexport const SerializeTransformToBinary = (props: Transform): Uint8Array => {\n    const builder = new flatbuffers.Builder(1024);\n    builder.finish(SerializeTransform(builder)(props));\n\n    return builder.asUint8Array();\n}\n\nexport const ParseTransform = (props:TransformData.Props): Transform => {\n    \n    \n    const t = {\n        posX: props.posX(),\n        posY: props.posY(),\n        posZ: props.posZ(),\n        originX: props.originX(),\n        originY: props.originY(),\n        originZ: props.originZ(),\n        scaleX: props.scaleX(),\n        scaleY: props.scaleY(),\n        scaleZ: props.scaleZ(),\n        rotX: props.rotX(),\n        rotY: props.rotY(),\n        rotZ: props.rotZ(),\n        rotW: props.rotW(),\n        localSpace: ParseMatrix4(props.localSpace()),\n    } as Transform;\n\n    const worldSpace = props.worldSpace();\n    const parentWorldSpace = props.parentWorldSpace();\n    if(worldSpace !== null) {\n        t.worldSpace = ParseMatrix4(props.worldSpace());\n    }\n    if(parentWorldSpace !== null) {\n        t.parentWorldSpace = ParseMatrix4(props.parentWorldSpace());\n    }\n    return t;\n}\n\nexport const ParseTransformFromBinary = (bytes: Uint8Array): Transform =>\n    ParseTransform(\n        TransformData.Props\n            .getRootAsProps(new flatbuffers.ByteBuffer(bytes)));\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/transform/Transform-Serialize.ts","\nimport { mat4, vec3 } from 'gl-matrix';\nimport * as L from 'partial.lenses';\nimport * as R from 'ramda';\n\nimport { S } from '../../external/sanctuary/Sanctuary';\nimport {createMat4} from \"../matrix/Matrix\";\nimport {createQuat} from \"../quat/Quat\";\nimport {createVec3} from \"../vector/Vector\";\n\nimport {NumberArray} from \"../array/Array\";\nimport { matrixMultiply } from '../matrix/Matrix';\nimport {screenEventToWorldPoint, PointerScreenEventData} from \"../input/Input\";\n\nexport interface Transform {\n    posX: number;\n    posY: number;\n    posZ: number;\n    originX: number;\n    originY: number;\n    originZ: number;\n    scaleX: number;\n    scaleY: number;\n    scaleZ: number;\n    rotX: number;\n    rotY: number;\n    rotZ: number;\n    rotW: number;\n    localSpace: NumberArray;\n    worldSpace?: NumberArray;\n    parentWorldSpace?: NumberArray;\n}\n\nexport const getTransformPosition = (t:Transform): NumberArray =>\n  createVec3([t.posX, t.posY, t.posZ]);\n\nexport const getTransformOrigin = (t:Transform): NumberArray =>\n  createVec3([t.originX, t.originY, t.originZ]);\n\nexport const getTransformScale = (t:Transform): NumberArray =>\n  createVec3([t.scaleX, t.scaleY, t.scaleZ]);\n\nexport const getTransformRotation = (t:Transform): NumberArray =>\n  createQuat([t.rotX, t.rotY, t.rotZ, t.rotW]);\n\nexport const setTransformPosition = (v:NumberArray) => (t:Transform): Transform =>\n  Object.assign({}, t, {\n    posX: v[0],\n    posY: v[1],\n    posZ: v[2]\n  });\n\nexport const setTransformOrigin = (v:NumberArray) => (t:Transform): Transform =>\n  Object.assign({}, t, {\n    originX: v[0],\n    originY: v[1],\n    originZ: v[2]\n  });\n\nexport const setTransformScale = (v:NumberArray) => (t:Transform): Transform =>\n  Object.assign({}, t, {\n    scaleX: v[0],\n    scaleY: v[1],\n    scaleZ: v[2]\n  });\n\nexport const setTransformRotation = (v:NumberArray) => (t:Transform): Transform =>\n  Object.assign({}, t, {\n    rotX: v[0],\n    rotY: v[1],\n    rotZ: v[2],\n    rotW: v[3]\n  });\n\nexport const getTransformCenter = (t:Transform):NumberArray => \n  vec3.add(createVec3() as any, getTransformOrigin(t) as any, getTransformPosition(t) as any);\n\nexport const getVectorFromTransformCenters = (t1:Transform) => (t2:Transform) => \n  vec3.sub(createVec3() as any, getTransformCenter(t1) as any, getTransformCenter(t2) as any);\n\nexport const transformVectorSpace = (v: NumberArray) => (space:NumberArray): NumberArray =>\n  vec3.transformMat4(createVec3() as any, v as any, space as any) as NumberArray;\n\nexport const transformVectorInvertedSpace = (v: NumberArray) => (space:NumberArray): NumberArray =>\n  vec3.transformMat4(createVec3() as any, v as any, mat4.invert(createMat4() as any, space as any)) as any;\n\n\nexport const getTransformWorldPosition = (t:Transform):NumberArray =>\n  transformVectorSpace (getTransformPosition(t)) (t.parentWorldSpace);\n\nexport const moveTransform = (evt: PointerScreenEventData) => (offset: NumberArray) => (t:Transform): Transform => {\n    const pointerWorldPoint = screenEventToWorldPoint(evt)(evt);\n    const offsetWorldPoint = vec3.add(createVec3() as any, pointerWorldPoint as any, offset as any);\n    const localPoint = transformVectorInvertedSpace(offsetWorldPoint)(t.parentWorldSpace);\n    return createWorldTransform({\n          ...t,\n          posX: localPoint[0],\n          posY: localPoint[1]\n    })\n}\n\nexport const createLocalSpaceImpure = (target:NumberArray) => (t: Transform): NumberArray => {\n  \n  return mat4.fromRotationTranslationScaleOrigin(target as any,\n    getTransformRotation(t) as any,\n    getTransformPosition(t) as any,\n    getTransformScale(t) as any,\n    getTransformOrigin(t) as any) as any;\n}\n  \nexport const createLocalSpace =  (t: Transform): NumberArray =>\n    createLocalSpaceImpure (createMat4()) (t);\n\nconst _identityProps:Readonly<any> = {\n    posX: 0,\n    posY: 0,\n    posZ: 0,\n    originX: 0,\n    originY: 0,\n    originZ: 0,\n    scaleX: 1,\n    scaleY: 1,\n    scaleZ: 1,\n    rotX: 0,\n    rotY: 0,\n    rotZ: 0,\n    rotW: 1,\n};\n\nexport const createLocalTransform = (_t?: Partial<Transform>): Transform => {\n  if(_t === undefined) {\n    return Object.assign({localSpace: createMat4()}, _identityProps) as Transform;\n  }\n\n  const t = Object.assign({}, _identityProps, _t) as Transform;\n  t.localSpace = createLocalSpace(t);\n  return t;\n}\n\nexport const createWorldTransform = (_t?: Partial<Transform>): Transform => {\n  const t = createLocalTransform(_t);\n\n  if(!t.parentWorldSpace) {\n    t.parentWorldSpace = createMat4();\n  }\n  t.worldSpace = matrixMultiply(t.parentWorldSpace) (t.localSpace);\n  return t;\n}\n\n  \nexport const zeroPoint:Readonly<NumberArray> = [0.0, 0.0, 0.0];\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/transform/Transform-Utils.ts","import * as L from 'partial.lenses';\nimport * as R from 'ramda';\n\nimport { StateElementLens, StateElement } from './State-Elements';\nimport { CHILDREN } from './State-Accessors';\n\nexport const logState = (elTree:StateElement) => {\n    const buildup = [];\n\n    const _log = (lens:StateElementLens) => {\n        \n        const el:StateElement = L.get(lens) (elTree);\n        \n        const refPath = lens.filter(l => l !== \"children\");\n\n        buildup.push(`${el.type} ${JSON.stringify(refPath)}`);\n        \n        if(!R.isNil(el.children)) {\n            if(Array.isArray(el.children)) {\n                for(let i = 0; i < el.children.length; i++) {\n                    _log (lens.concat([CHILDREN, i]))\n                }\n            } else {\n                _log (lens.concat([CHILDREN]))\n            }\n        }\n    }\n\n    _log ([]);\n\n    console.log(buildup);\n    \n    return elTree;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State-Logger.ts","import * as L from 'partial.lenses';\nimport * as R from 'ramda';\n\nimport { StateElement } from './State-Elements';\n\nexport type ElementMapper = (el:StateElement) => StateElement;\nexport type PropsMapper = (el:StateElement) => any;\nexport type ElementCaller = (el:StateElement) => void;\nexport type ElementCallerWithPath = ([el, cPath]:[StateElement, Array<number>]) => void;\n\nexport const stateElementForEach = (fn:ElementCaller) => (elTree:StateElement):void => {\n    const _callElements = (el:StateElement) => {\n\n        fn(el);\n\n        if(el.children !== null) {\n            if(Array.isArray(el.children)) {\n                el.children.map(_callElements);\n            } else {\n                _callElements(el.children);\n            }\n        }\n    }\n\n    _callElements(elTree);\n}\n\nexport const stateElementForEachWithPath = (fn:ElementCallerWithPath) => (elTree:StateElement):void => {\n    const _callElements = ([el, cPath]:[StateElement, Array<number>]) => {\n\n        fn([el, cPath]);\n\n        if(el.children !== null) {\n            if(Array.isArray(el.children)) {\n                el.children.map((el, index) => _callElements([el, cPath.concat(index)]));\n            } else {\n                _callElements([el.children, cPath.concat([0])]);\n            }\n        }\n    }\n\n    _callElements([elTree, []]);\n}\n\nexport const stateElementMap = (mapFn:ElementMapper) => (elTree:StateElement):StateElement => {\n    \n    const _mapElementTree = (el:StateElement) => {\n        const children = \n            R.isNil(el.children)\n                ? null\n                : Array.isArray(el.children)\n                    ? el.children.map(_mapElementTree)\n                    : _mapElementTree(el.children);\n\n        return L.set(\"children\") (children) (mapFn(el))\n    }\n\n    return _mapElementTree (elTree)\n}\n\n\nexport const stateElementPropsMap = (mapFn:PropsMapper) => (elTree:StateElement):StateElement => {\n    \n    const _mapPropsTree = (el:StateElement) => {\n        const children = \n            R.isNil(el.children)\n                ? null\n                : Array.isArray(el.children)\n                    ? el.children.map(_mapPropsTree)\n                    : _mapPropsTree(el.children);\n\n        return L.isDefined(\"type\") (el)\n            ?   L.set(\"props\") ( el.props === null ? null : mapFn(el)) \n                    (L.set(\"children\") (children) (el))\n            :   el;\n    }\n\n    return _mapPropsTree (elTree)\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/state/State-Tree-Mapper.ts","export * from \"./String-Utils\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/string/String.ts","export * from \"./Renderer-WebGl\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/renderer/Renderer.ts","export interface WebGlFramebufferPicker {\n    bind: () => void;\n    unbind: () => void;\n    readPixel: ({ x, y }: { x: number, y: number }) => Uint8Array;\n    dispose: () => void;\n    clear: (number) => void;\n}\n\nexport const makeFramebufferPicker = (gl: WebGLRenderingContext) => ({width,height}:{width:number,height:number}): WebGlFramebufferPicker => {\n    //setup a texture to store colors\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n    //setup a renderbuffer to store depth info\n    const renderBuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\n\n    //setup a framebuffer for offscreen rendering\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\n\n    //unbind everything\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    //exported utils\n    const bind = () => gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    const unbind = () => gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    const readPixel = ({ x, y }: { x: number, y: number }): Uint8Array => {\n        const readout = new Uint8Array(4);\n        bind();\n        gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, readout);\n        unbind();\n\n        return readout;\n    }\n    const clear = (bits) => {\n        bind();\n        gl.clear(bits);\n        unbind();\n    }\n\n    const dispose = () => {\n        unbind();\n        gl.deleteFramebuffer(frameBuffer);\n        gl.deleteRenderbuffer(renderBuffer);\n        gl.deleteTexture(texture);\n        \n    }\n\n    return {\n        bind: bind,\n        unbind: unbind,\n        readPixel: readPixel,\n        dispose: dispose,\n        clear: clear\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/webgl/WebGl-FrameBuffer-Picker.ts","//taken from https://raw.githubusercontent.com/mattdesl/gl-constants/master/1.0/index.js\n//would be good to properly check against https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport enum WebGlConstants {\n    ACTIVE_ATTRIBUTES= 35721,\n    ACTIVE_ATTRIBUTE_MAX_LENGTH= 35722,\n    ACTIVE_TEXTURE= 34016,\n    ACTIVE_UNIFORMS= 35718,\n    ACTIVE_UNIFORM_MAX_LENGTH= 35719,\n    ALIASED_LINE_WIDTH_RANGE= 33902,\n    ALIASED_POINT_SIZE_RANGE= 33901,\n    ALPHA= 6406,\n    ALPHA_BITS= 3413,\n    ALWAYS= 519,\n    ARRAY_BUFFER= 34962,\n    ARRAY_BUFFER_BINDING= 34964,\n    ATTACHED_SHADERS= 35717,\n    BACK= 1029,\n    BLEND= 3042,\n    BLEND_COLOR= 32773,\n    BLEND_DST_ALPHA= 32970,\n    BLEND_DST_RGB= 32968,\n    BLEND_EQUATION= 32777,\n    BLEND_EQUATION_ALPHA= 34877,\n    BLEND_EQUATION_RGB= 32777,\n    BLEND_SRC_ALPHA= 32971,\n    BLEND_SRC_RGB= 32969,\n    BLUE_BITS= 3412,\n    BOOL= 35670,\n    BOOL_VEC2= 35671,\n    BOOL_VEC3= 35672,\n    BOOL_VEC4= 35673,\n    BROWSER_DEFAULT_WEBGL= 37444,\n    BUFFER_SIZE= 34660,\n    BUFFER_USAGE= 34661,\n    BYTE= 5120,\n    CCW= 2305,\n    CLAMP_TO_EDGE= 33071,\n    COLOR_ATTACHMENT0= 36064,\n    COLOR_BUFFER_BIT= 16384,\n    COLOR_CLEAR_VALUE= 3106,\n    COLOR_WRITEMASK= 3107,\n    COMPILE_STATUS= 35713,\n    COMPRESSED_TEXTURE_FORMATS= 34467,\n    CONSTANT_ALPHA= 32771,\n    CONSTANT_COLOR= 32769,\n    CONTEXT_LOST_WEBGL= 37442,\n    CULL_FACE= 2884,\n    CULL_FACE_MODE= 2885,\n    CURRENT_PROGRAM= 35725,\n    CURRENT_VERTEX_ATTRIB= 34342,\n    CW= 2304,\n    DECR= 7683,\n    DECR_WRAP= 34056,\n    DELETE_STATUS= 35712,\n    DEPTH_ATTACHMENT= 36096,\n    DEPTH_BITS= 3414,\n    DEPTH_BUFFER_BIT= 256,\n    DEPTH_CLEAR_VALUE= 2931,\n    DEPTH_COMPONENT= 6402,\n    DEPTH_COMPONENT16= 33189,\n    DEPTH_FUNC= 2932,\n    DEPTH_RANGE= 2928,\n    DEPTH_STENCIL= 34041,\n    DEPTH_STENCIL_ATTACHMENT= 33306,\n    DEPTH_TEST= 2929,\n    DEPTH_WRITEMASK= 2930,\n    DITHER= 3024,\n    DONT_CARE= 4352,\n    DST_ALPHA= 772,\n    DST_COLOR= 774,\n    DYNAMIC_DRAW= 35048,\n    ELEMENT_ARRAY_BUFFER= 34963,\n    ELEMENT_ARRAY_BUFFER_BINDING= 34965,\n    EQUAL= 514,\n    FASTEST= 4353,\n    FLOAT= 5126,\n    FLOAT_MAT2= 35674,\n    FLOAT_MAT3= 35675,\n    FLOAT_MAT4= 35676,\n    FLOAT_VEC2= 35664,\n    FLOAT_VEC3= 35665,\n    FLOAT_VEC4= 35666,\n    FRAGMENT_SHADER= 35632,\n    FRAMEBUFFER= 36160,\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME= 36049,\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE= 36048,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE= 36051,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL= 36050,\n    FRAMEBUFFER_BINDING= 36006,\n    FRAMEBUFFER_COMPLETE= 36053,\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT= 36054,\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS= 36057,\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT= 36055,\n    FRAMEBUFFER_UNSUPPORTED= 36061,\n    FRONT= 1028,\n    FRONT_AND_BACK= 1032,\n    FRONT_FACE= 2886,\n    FUNC_ADD= 32774,\n    FUNC_REVERSE_SUBTRACT= 32779,\n    FUNC_SUBTRACT= 32778,\n    GENERATE_MIPMAP_HINT= 33170,\n    GEQUAL= 518,\n    GREATER= 516,\n    GREEN_BITS= 3411,\n    HIGH_FLOAT= 36338,\n    HIGH_INT= 36341,\n    INCR= 7682,\n    INCR_WRAP= 34055,\n    INFO_LOG_LENGTH= 35716,\n    INT= 5124,\n    INT_VEC2= 35667,\n    INT_VEC3= 35668,\n    INT_VEC4= 35669,\n    INVALID_ENUM= 1280,\n    INVALID_FRAMEBUFFER_OPERATION= 1286,\n    INVALID_OPERATION= 1282,\n    INVALID_VALUE= 1281,\n    INVERT= 5386,\n    KEEP= 7680,\n    LEQUAL= 515,\n    LESS= 513,\n    LINEAR= 9729,\n    LINEAR_MIPMAP_LINEAR= 9987,\n    LINEAR_MIPMAP_NEAREST= 9985,\n    LINES= 1,\n    LINE_LOOP= 2,\n    LINE_STRIP= 3,\n    LINE_WIDTH= 2849,\n    LINK_STATUS= 35714,\n    LOW_FLOAT= 36336,\n    LOW_INT= 36339,\n    LUMINANCE= 6409,\n    LUMINANCE_ALPHA= 6410,\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS= 35661,\n    MAX_CUBE_MAP_TEXTURE_SIZE= 34076,\n    MAX_FRAGMENT_UNIFORM_VECTORS= 36349,\n    MAX_RENDERBUFFER_SIZE= 34024,\n    MAX_TEXTURE_IMAGE_UNITS= 34930,\n    MAX_TEXTURE_SIZE= 3379,\n    MAX_VARYING_VECTORS= 36348,\n    MAX_VERTEX_ATTRIBS= 34921,\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS= 35660,\n    MAX_VERTEX_UNIFORM_VECTORS= 36347,\n    MAX_VIEWPORT_DIMS= 3386,\n    MEDIUM_FLOAT= 36337,\n    MEDIUM_INT= 36340,\n    MIRRORED_REPEAT= 33648,\n    NEAREST= 9728,\n    NEAREST_MIPMAP_LINEAR= 9986,\n    NEAREST_MIPMAP_NEAREST= 9984,\n    NEVER= 512,\n    NICEST= 4354,\n    NONE= 0,\n    NOTEQUAL= 517,\n    NO_ERROR= 0,\n    NUM_COMPRESSED_TEXTURE_FORMATS= 34466,\n    ONE= 1,\n    ONE_MINUS_CONSTANT_ALPHA= 32772,\n    ONE_MINUS_CONSTANT_COLOR= 32770,\n    ONE_MINUS_DST_ALPHA= 773,\n    ONE_MINUS_DST_COLOR= 775,\n    ONE_MINUS_SRC_ALPHA= 771,\n    ONE_MINUS_SRC_COLOR= 769,\n    OUT_OF_MEMORY= 1285,\n    PACK_ALIGNMENT= 3333,\n    POINTS= 0,\n    POLYGON_OFFSET_FACTOR= 32824,\n    POLYGON_OFFSET_FILL= 32823,\n    POLYGON_OFFSET_UNITS= 10752,\n    RED_BITS= 3410,\n    RENDERBUFFER= 36161,\n    RENDERBUFFER_ALPHA_SIZE= 36179,\n    RENDERBUFFER_BINDING= 36007,\n    RENDERBUFFER_BLUE_SIZE= 36178,\n    RENDERBUFFER_DEPTH_SIZE= 36180,\n    RENDERBUFFER_GREEN_SIZE= 36177,\n    RENDERBUFFER_HEIGHT= 36163,\n    RENDERBUFFER_INTERNAL_FORMAT= 36164,\n    RENDERBUFFER_RED_SIZE= 36176,\n    RENDERBUFFER_STENCIL_SIZE= 36181,\n    RENDERBUFFER_WIDTH= 36162,\n    RENDERER= 7937,\n    REPEAT= 10497,\n    REPLACE= 7681,\n    RGB= 6407,\n    RGB5_A1= 32855,\n    RGB565= 36194,\n    RGBA= 6408,\n    RGBA4= 32854,\n    SAMPLER_2D= 35678,\n    SAMPLER_CUBE= 35680,\n    SAMPLES= 32937,\n    SAMPLE_ALPHA_TO_COVERAGE= 32926,\n    SAMPLE_BUFFERS= 32936,\n    SAMPLE_COVERAGE= 32928,\n    SAMPLE_COVERAGE_INVERT= 32939,\n    SAMPLE_COVERAGE_VALUE= 32938,\n    SCISSOR_BOX= 3088,\n    SCISSOR_TEST= 3089,\n    SHADER_COMPILER= 36346,\n    SHADER_SOURCE_LENGTH= 35720,\n    SHADER_TYPE= 35663,\n    SHADING_LANGUAGE_VERSION= 35724,\n    SHORT= 5122,\n    SRC_ALPHA= 770,\n    SRC_ALPHA_SATURATE= 776,\n    SRC_COLOR= 768,\n    STATIC_DRAW= 35044,\n    STENCIL_ATTACHMENT= 36128,\n    STENCIL_BACK_FAIL= 34817,\n    STENCIL_BACK_FUNC= 34816,\n    STENCIL_BACK_PASS_DEPTH_FAIL= 34818,\n    STENCIL_BACK_PASS_DEPTH_PASS= 34819,\n    STENCIL_BACK_REF= 36003,\n    STENCIL_BACK_VALUE_MASK= 36004,\n    STENCIL_BACK_WRITEMASK= 36005,\n    STENCIL_BITS= 3415,\n    STENCIL_BUFFER_BIT= 1024,\n    STENCIL_CLEAR_VALUE= 2961,\n    STENCIL_FAIL= 2964,\n    STENCIL_FUNC= 2962,\n    STENCIL_INDEX= 6401,\n    STENCIL_INDEX8= 36168,\n    STENCIL_PASS_DEPTH_FAIL= 2965,\n    STENCIL_PASS_DEPTH_PASS= 2966,\n    STENCIL_REF= 2967,\n    STENCIL_TEST= 2960,\n    STENCIL_VALUE_MASK= 2963,\n    STENCIL_WRITEMASK= 2968,\n    STREAM_DRAW= 35040,\n    SUBPIXEL_BITS= 3408,\n    TEXTURE= 5890,\n    TEXTURE0= 33984,\n    TEXTURE1= 33985,\n    TEXTURE2= 33986,\n    TEXTURE3= 33987,\n    TEXTURE4= 33988,\n    TEXTURE5= 33989,\n    TEXTURE6= 33990,\n    TEXTURE7= 33991,\n    TEXTURE8= 33992,\n    TEXTURE9= 33993,\n    TEXTURE10= 33994,\n    TEXTURE11= 33995,\n    TEXTURE12= 33996,\n    TEXTURE13= 33997,\n    TEXTURE14= 33998,\n    TEXTURE15= 33999,\n    TEXTURE16= 34000,\n    TEXTURE17= 34001,\n    TEXTURE18= 34002,\n    TEXTURE19= 34003,\n    TEXTURE20= 34004,\n    TEXTURE21= 34005,\n    TEXTURE22= 34006,\n    TEXTURE23= 34007,\n    TEXTURE24= 34008,\n    TEXTURE25= 34009,\n    TEXTURE26= 34010,\n    TEXTURE27= 34011,\n    TEXTURE28= 34012,\n    TEXTURE29= 34013,\n    TEXTURE30= 34014,\n    TEXTURE31= 34015,\n    TEXTURE_2D= 3553,\n    TEXTURE_BINDING_2D= 32873,\n    TEXTURE_BINDING_CUBE_MAP= 34068,\n    TEXTURE_CUBE_MAP= 34067,\n    TEXTURE_CUBE_MAP_NEGATIVE_X= 34070,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y= 34072,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z= 34074,\n    TEXTURE_CUBE_MAP_POSITIVE_X= 34069,\n    TEXTURE_CUBE_MAP_POSITIVE_Y= 34071,\n    TEXTURE_CUBE_MAP_POSITIVE_Z= 34073,\n    TEXTURE_MAG_FILTER= 10240,\n    TEXTURE_MIN_FILTER= 10241,\n    TEXTURE_WRAP_S= 10242,\n    TEXTURE_WRAP_T= 10243,\n    TRIANGLES= 4,\n    TRIANGLE_FAN= 6,\n    TRIANGLE_STRIP= 5,\n    UNPACK_ALIGNMENT= 3317,\n    UNPACK_COLORSPACE_CONVERSION_WEBGL= 37443,\n    UNPACK_FLIP_Y_WEBGL= 37440,\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL= 37441,\n    UNSIGNED_BYTE= 5121,\n    UNSIGNED_INT= 5125,\n    UNSIGNED_SHORT= 5123,\n    UNSIGNED_SHORT_4_4_4_4= 32819,\n    UNSIGNED_SHORT_5_5_5_1= 32820,\n    UNSIGNED_SHORT_5_6_5= 33635,\n    VALIDATE_STATUS= 35715,\n    VENDOR= 7936,\n    VERSION= 7938,\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING= 34975,\n    VERTEX_ATTRIB_ARRAY_ENABLED= 34338,\n    VERTEX_ATTRIB_ARRAY_NORMALIZED= 34922,\n    VERTEX_ATTRIB_ARRAY_POINTER= 34373,\n    VERTEX_ATTRIB_ARRAY_SIZE= 34339,\n    VERTEX_ATTRIB_ARRAY_STRIDE= 34340,\n    VERTEX_ATTRIB_ARRAY_TYPE= 34341,\n    VERTEX_SHADER= 35633,\n    VIEWPORT= 2978,\n    ZERO= 0\n  }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/webgl/WebGl-Constants.ts","\nexport type VertexData = ArrayBuffer | ArrayBufferLike | ArrayBufferView;\n\nexport interface WebGlBufferSwitcher {\n    nextId: () => string;\n    assignBuffer: (id:string) => (data:WebGlBufferData) => WebGLBuffer;\n    switchBuffer: (bufferId:string) => WebGLBuffer;\n    activateBuffer: (id:string) => (opts: WebGlBufferActivateOptions) => WebGLBuffer;\n}\n\nexport interface WebGlBufferActivateOptions {\n    index:GLuint;\n    size:GLint;\n    type:GLenum;\n    normalized?:GLboolean;\n    stride?:GLsizei;\n    offset?:GLintptr;\n}\n\nexport interface WebGlBufferData {\n    target: GLenum,\n    usagePattern: GLenum,\n    data: VertexData,\n}\n\ninterface BufferInfo extends WebGlBufferData{\n    buffer: WebGLBuffer\n};\n\n\nexport const createWebGlBufferSwitcher = (gl:WebGLRenderingContext):WebGlBufferSwitcher => {\n    let customIdCount = 0;\n    let currentId;\n\n    const infoMap = new Map<string, BufferInfo>();\n\n    const assignBuffer = (id:string) => (bData:WebGlBufferData):WebGLBuffer => {\n        let info:Partial<BufferInfo>;\n\n        if(infoMap.has(id)) {\n            info = infoMap.get(id);\n        } else {\n            info = {\n                buffer: gl.createBuffer()\n            }\n        }\n\n        info.data = bData.data;\n        info.target = bData.target;\n        info.usagePattern = bData.usagePattern;\n\n        infoMap.set(id, info as BufferInfo);\n\n        gl.bindBuffer(info.target, info.buffer);\n        gl.bufferData(info.target, info.data, info.usagePattern);\n\n        return info.buffer;\n    }\n    \n    const switchBuffer = (id:string):WebGLBuffer => {\n        const info = infoMap.get(id);\n\n        if(currentId !== id) {\n            gl.bindBuffer(info.target, info.buffer);\n        }\n        \n        return info.buffer;\n    }\n\n    const activateBuffer = (id:string) => (opts:WebGlBufferActivateOptions):WebGLBuffer => {\n        const buffer = switchBuffer(id);\n\n        gl.vertexAttribPointer( opts.index, \n                                opts.size, \n                                opts.type, \n                                opts.normalized === undefined ? false : opts.normalized,\n                                opts.stride === undefined ? 0 : opts.stride,\n                                opts.offset === undefined ? 0 : opts.offset);\n\n        gl.enableVertexAttribArray(opts.index);\n\n        return buffer;\n    }\n\n    return {\n        nextId: () => (++customIdCount).toString(),\n\n        assignBuffer: assignBuffer,\n     \n        switchBuffer: switchBuffer,\n\n        activateBuffer: activateBuffer\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/webgl/WebGl-DataBuffers.ts","import {S,Maybe, Either} from \"../../external/sanctuary/Sanctuary\";\n\n\nexport interface WebGlShaderSwitcher {\n    createShader: (id:string) => (source:WebGlShaderSource)=> WebGlProgramInfo;\n    getUniformLocation: (id:string) => (uName:string) => WebGLUniformLocation;\n    getAttributeLocation: (id:string) => (aName:string) => number;\n    switchShaderProgram: (id:string) => WebGLProgram;\n}\n\nexport interface WebGlProgramInfo {\n    id: string;\n    program:WebGLProgram;\n    uniformLocations: Map<string, WebGLUniformLocation>;\n    attributeLocations: Map<string, number>;\n}\n\nexport interface WebGlShaderSource {\n    vertex:string;\n    fragment:string;\n}\n\n\nexport const CompileShader = (gl: WebGLRenderingContext) => (source:WebGlShaderSource): WebGLProgram => {\n    \n    const loadSource = (gl: WebGLRenderingContext) => (shaderType: number) => (sourceText: string): Either<WebGLShader | Error> => {\n        const shader = gl.createShader(shaderType);\n        gl.shaderSource(shader, sourceText);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            const errorMessage = 'An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            return S.Left(new Error(errorMessage));\n        }\n\n        return S.Right(shader);\n    }\n\n    const loadShader = (shaderType: number) => (sourceText: string) => (shaderProgram:WebGLProgram) => S.chain(\n        shader => {\n            gl.attachShader(shaderProgram,shader); \n            return S.Right(shaderProgram);\n        },\n        loadSource(gl)(shaderType)(sourceText)\n    );\n\n    \n    const linkShader = (shaderProgram:WebGLProgram) => {\n        gl.linkProgram(shaderProgram)\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            const errorMessage = 'Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram);\n            gl.deleteProgram(shaderProgram);\n            return S.Left(new Error(errorMessage));\n        }\n\n        return S.Right(shaderProgram);\n    }\n\n   \n    const eitherShader:Either<WebGLProgram | Error> = S.pipe([\n        S.chain(loadShader(gl.VERTEX_SHADER) (source.vertex)),\n        S.chain(loadShader(gl.FRAGMENT_SHADER) (source.fragment)), \n        S.chain(linkShader),\n    ])(S.Right(gl.createProgram()));\n\n    if(eitherShader.isLeft) {\n        //blow things up\n        throw eitherShader.value;\n    } else {\n        return eitherShader.value;\n    }\n    \n}\n\nexport const createWebGlShaderSwitcher = (gl:WebGLRenderingContext):WebGlShaderSwitcher => {\n    let current:Partial<WebGlProgramInfo> = {};\n    \n    const programs = new Map<string, WebGlProgramInfo>();\n    \n    const switchShaderProgram = (id:string):WebGLProgram => {\n        const programInfo = programs.get(id);        \n        if(current.id !== id) {\n            current = programInfo;\n            gl.useProgram(current.program);\n        }\n        return current.program;\n    }\n\n    return {\n        createShader: (id:string) => (source:WebGlShaderSource) => {\n            const info:WebGlProgramInfo = {\n                id: id,\n                program: CompileShader (gl) (source),\n                uniformLocations: new Map<string, WebGLUniformLocation>(),\n                attributeLocations: new Map<string, number>()\n            };\n\n            programs.set(id, info);\n            return info;\n        },\n\n        switchShaderProgram: switchShaderProgram,\n\n        getUniformLocation: (id:string) => (uName:string):WebGLUniformLocation => {\n            if(current.id !== id) {\n                switchShaderProgram(id);\n            }\n            if(!current.uniformLocations.has(uName)) {\n                current.uniformLocations.set(uName, gl.getUniformLocation(current.program, uName))\n            }\n            return current.uniformLocations.get(uName);\n        },\n        getAttributeLocation: (id:string) => (aName:string):number => {\n            if(current.id !== id) {\n                switchShaderProgram(id);\n            }\n            if(!current.attributeLocations.has(aName)) {\n                current.attributeLocations.set(aName, gl.getAttribLocation(current.program, aName))\n            }\n            return current.attributeLocations.get(aName);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/webgl/WebGl-Shaders.ts","export * from \"./drag/Sodium-Drag\";\nexport * from \"./updaters/Sodium-Updaters\";\nexport * from \"./loaders/Sodium-Loaders\";\nexport * from \"./state-machines/Sodium-StateMachines\";\nexport * from \"./renderer/Sodium-Renderer\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/Sodium.ts","import {Transform, transformVectorSpace, getTransformWorldPosition, getTransformPosition, transformVectorInvertedSpace, createWorldTransform} from \"../../transform/Transform\";\nimport {NumberArray} from \"../../array/Array\";\nimport {sodiumStagedUpdater} from \"../updaters/Sodium-StagedUpdate\";\nimport {Stream, Cell} from \"sodiumjs\";\nimport {PointerScreenEventData, PointerWorldEventData} from \"../../input/Input\";\nimport {screenEventToWorldPoint} from \"../../input/screen/Screen\";\nimport {vec3} from \"gl-matrix\";\nimport {createVec3} from \"../../vector/Vector-Create\";\n\n//Currently tested and built for 2D\n//TODO: make it work in 3D ;)\n\nexport interface DragOptions {\n    sPointerStart:Stream<PointerScreenEventData>;\n    sPointerMove: Stream<PointerScreenEventData>;\n    sCommit:Stream<any>;\n    sEnd:Stream<any>;\n    getPixelId: ({x,y}:{x: number, y: number}) => number;\n}\n\ntype PointerDragInitEvent = PointerScreenEventData & {pixelId:number};\n\nexport const sodiumDragCreator = (opts:DragOptions) => sodiumStagedUpdater({\n    sInit: opts.sPointerStart.map(evtData => \n        Object.assign({}, evtData, { pixelId: opts.getPixelId(evtData) })\n    ),\n    mapInit: (_evtData: PointerDragInitEvent ) => (transform: Transform): NumberArray => {\n        //console.log(\"init\");\n        const pointerWorldPoint = screenEventToWorldPoint(_evtData) (_evtData);\n        const worldPosition = getTransformWorldPosition(transform);\n\n        const diff = vec3.subtract(createVec3() as any, worldPosition as any, pointerWorldPoint as any);\n\n        return [diff[0], diff[1], 0];\n    },\n\n    sUpdate: opts.sPointerMove,\n    mapUpdate: (_evtData: PointerScreenEventData) => ([target, initData]:[Transform, NumberArray]):PointerScreenEventData => {\n        //console.log(\"update\");\n        return {..._evtData}\n    },\n\n    sCommit: opts.sCommit,\n    mapCommit: (_evtData: any) => ([target,initData,_updateData]:[Transform, NumberArray, PointerScreenEventData]):Transform => {\n        //console.log(\"commit\");\n\n        //on commit, do the heavy lifting - this is once per frame and only when there's a valid update\n        const pointerWorldPoint = screenEventToWorldPoint(_updateData) (_updateData);\n        const offsetWorldPoint =\n            vec3.add(createVec3() as any, pointerWorldPoint as any, initData as any);\n\n        const localPoint = transformVectorInvertedSpace(offsetWorldPoint)(target.parentWorldSpace);\n\n        return createWorldTransform({\n            posX: localPoint[0],\n            posY: localPoint[1]\n        })\n    },\n\n    sEnd: opts.sEnd,\n});\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/drag/Sodium-Drag.ts","export * from \"./Sodium-StagedUpdate\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/updaters/Sodium-Updaters.ts","//Sodium wrappers around loaders/*\n\n//Returning new Sinks seemed to break things across library boundries - so these expect\n//The sinks to be pre-created\n\nimport {\n    loadXhrFactory, LoaderXhr, LoaderXhrRequest, LoaderXhrResponse, LOADER_TYPE_XHR,\n    loadImageFactory, LoaderImage, LoaderImageRequest, LoaderImageResponse, LOADER_TYPE_IMAGE,\n    loadTextureFactory, LoaderTexture, LoaderTextureRequest, LoaderTextureResponse, LOADER_TYPE_TEXTURE,\n    LoaderResponseAny,\n    LoaderRequestAny,\n    LoaderCallbackAny,\n    LoaderAny,\n    isLoaderXhr\n} from \"../../loaders/Loaders\";\n\nimport { Stream, StreamSink, Cell } from 'sodiumjs';\nimport { Maybe, S, Either } from '../../../external/sanctuary/Sanctuary';\n\n/*\n\nEach sodium loader is considered 1:1 to a Loader instance\n\nIf you need different loaders (e.g. not disposing the previous)\nYou must create new SodiumLoaders per instance\n*/\n\nexport interface SodiumMaybeLoader {\n    request:Cell<Maybe<LoaderRequestAny>> | Stream<Maybe<LoaderRequestAny>>;\n    sResponse:StreamSink<Maybe<Either<LoaderResponseAny>>>;\n    mCancel:Maybe<Stream<any>>;\n}\n\nexport interface SodiumLoader {\n    request:Cell<LoaderRequestAny> | Stream<LoaderRequestAny>;\n    sResponse:StreamSink<Maybe<Either<LoaderResponseAny>>>;\n    mCancel:Maybe<Stream<any>>;\n}\n\nconst loaderToMaybe = (ldr:SodiumLoader):SodiumMaybeLoader => ({\n    request: (ldr.request as any).map(S.Just) as Cell<Maybe<LoaderRequestAny>> | Stream<Maybe<LoaderRequestAny>>,\n    sResponse: ldr.sResponse,\n    mCancel: ldr.mCancel,\n});\n\nconst closeLoader = S.map((ldr:LoaderAny) => {\n    if(isLoaderXhr(ldr)) {\n        ldr.close();\n    }\n})\n\n//It isn't optimized to deal with pending loaders, only completed ones\n//In other words, a new load triggered while a pending load is active, will issue a new request and overrite the cache when finished\n//Also - FRP must be created in the calling app, so it requires as a parameter\nconst _createSodiumMaybeLoaderImpureCache = \n    (loadFactory:(req:LoaderRequestAny, callback:LoaderCallbackAny) => LoaderAny) => \n    (cache:Map<LoaderRequestAny, Either<LoaderResponseAny>>) => \n    (sodiumLoader:SodiumMaybeLoader):SodiumMaybeLoader => {\n        let mLdr:Maybe<LoaderAny> = S.Nothing;\n\n        const doClose = () => {\n            closeLoader(mLdr);\n            mLdr = S.Nothing;\n        }\n        sodiumLoader.request.listen(mReq => {\n            doClose();\n\n            //listen->send must push to the next callstack\n            setTimeout(() => S.maybe_\n                (() => sodiumLoader.sResponse.send(S.Nothing))\n                (req => {\n                    if(cache.has(req)) {\n                        sodiumLoader.sResponse.send(S.Just(cache.get(req)));\n                    } else {\n                        sodiumLoader.sResponse.send(S.Nothing);\n                        //loading inherently will be on the next stack, or at worst as a microtask\n    \n                        mLdr = S.Just(\n                            loadFactory(req, eResponse => {\n                                cache.set(req, eResponse);\n                                sodiumLoader.sResponse.send(S.Just(eResponse));\n                                doClose();\n                            })\n                        );\n                    }\n                })\n                (mReq)\n            , 0);\n        });\n\n        S.map(sCancel => {\n            sCancel.listen(() => {\n                doClose();\n            })\n        })\n        (sodiumLoader.mCancel)\n\n        return sodiumLoader;\n    }\n\nexport const createSodiumMaybeLoaderImpureCacheTexture = _createSodiumMaybeLoaderImpureCache(loadTextureFactory);\nexport const createSodiumMaybeLoaderImpureCacheImage = _createSodiumMaybeLoaderImpureCache(loadImageFactory);\nexport const createSodiumMaybeLoaderImpureCacheXhr = _createSodiumMaybeLoaderImpureCache(loadXhrFactory);\n\nconst _createSodiumLoaderImpureCache = \n    (loadFactory:(req:LoaderRequestAny, callback:LoaderCallbackAny) => LoaderAny) => \n    (cache:Map<LoaderRequestAny, Either<LoaderResponseAny>>) => \n    (sodiumLoader:SodiumLoader):SodiumLoader => {\n        _createSodiumMaybeLoaderImpureCache (loadFactory) (cache) (loaderToMaybe(sodiumLoader));\n        return sodiumLoader;\n    }\n\nexport const createSodiumLoaderImpureCacheTexture = _createSodiumLoaderImpureCache(loadTextureFactory);\nexport const createSodiumLoaderImpureCacheImage = _createSodiumLoaderImpureCache(loadImageFactory);\nexport const createSodiumLoaderImpureCacheXhr = _createSodiumLoaderImpureCache(loadXhrFactory);\n\n\nconst _createSodiumMaybeLoader = \n    (loadFactory:(req:LoaderRequestAny, callback:LoaderCallbackAny) => LoaderAny) => \n    (sodiumLoader:SodiumMaybeLoader):SodiumMaybeLoader => {\n        let mLdr:Maybe<LoaderAny> = S.Nothing;\n\n        const doClose = () => {\n            closeLoader(mLdr);\n            mLdr = S.Nothing;\n        }\n\n        sodiumLoader.request.listen(mReq => {\n            doClose();\n\n            //Sending must wait until the next stack\n            setTimeout(() => S.maybe_\n                (() => sodiumLoader.sResponse.send(S.Nothing))\n                (req => {\n                    sodiumLoader.sResponse.send(S.Nothing);\n                    //loading inherently will be on the next stack, or at worst as a microtask\n                    mLdr = S.Just(\n                        loadFactory(req, eResponse => {\n                            sodiumLoader.sResponse.send(S.Just(eResponse));\n                            doClose();\n                        })\n                    );\n                })\n                (mReq)\n            , 0);\n        });\n\n        S.map(sCancel => {\n            sCancel.listen(() => {\n                doClose();\n            })\n        })\n        (sodiumLoader.mCancel)\n\n        return sodiumLoader;\n    }\n\n\nexport const createSodiumMaybeLoaderTexture = _createSodiumMaybeLoader(loadTextureFactory);\nexport const createSodiumMaybeLoaderImage = _createSodiumMaybeLoader(loadImageFactory);\nexport const createSodiumMaybeLoaderXhr = _createSodiumMaybeLoader(loadXhrFactory);\n\nconst _createSodiumLoader = \n    (loadFactory:(req:LoaderRequestAny, callback:LoaderCallbackAny) => LoaderAny) => \n    (sodiumLoader:SodiumLoader):SodiumLoader => {\n        _createSodiumMaybeLoader(loadFactory) (loaderToMaybe(sodiumLoader));\n        return sodiumLoader;\n    }\n\nexport const createSodiumLoaderTexture = _createSodiumLoader(loadTextureFactory);\nexport const createSodiumLoaderImage = _createSodiumLoader(loadImageFactory);\nexport const createSodiumLoaderXhr = _createSodiumLoader(loadXhrFactory);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/loaders/Sodium-Loaders.ts","export * from \"./Sodium-Accum-StateMachine\";\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/state-machines/Sodium-StateMachines.ts","import {Stream, Cell, Tuple2} from \"sodiumjs\";\n\n/*\n    Usage is three steps:\n\n    1. Create an array of config objects via sodiumAccumConfig()\n    2. Create the accumulator via sodiumAccumulator()\n    3. Grab the resulting Cell<SodiumAccumState<T,any,S>> from the updater\n\n    The full state is passed to the mappers, but often that's overkill\n    The simple case of just event and state data can be passed by wrapping the mapper with sodiumAccumSimpleMapper()\n*/\n\nexport type SodiumAccumState<T,E,S> = {\n    data: S;\n    evt?: SodiumAccumEvent<T,E>; //this is the event that _caused_ the state change. Initial state will be undefined\n    prev?: SodiumAccumState<T,E,S>; //similarly, initial state will not have a previous state\n};\n\nexport type SodiumAccumMapper<T,E,S> = (eventData:E) => (state:SodiumAccumState<T,any,S>) => S;\nexport type SodiumAccumMapperSimple<E,S> = (eventData:E) => (stateData:S) => S;\n\nexport interface SodiumAccumEvent<T,E> {\n    type: T,\n    data: E\n}\n\nexport interface SodiumAccumConfig <T,E,S>{\n    type:T;\n    stream:Stream<E>;\n    mapper: SodiumAccumMapper<T,E,S>;\n}\n\nexport interface SodiumAccumConfigSimple <T,E,S>{\n    type:T;\n    stream:Stream<E>;\n    mapper: SodiumAccumMapperSimple<E,S>;\n}\n\nexport const sodiumAccumSimpleMapper = <T,E,S>(fn:SodiumAccumMapperSimple<E,S>):SodiumAccumMapper<T,E,S> =>\n    (evtData:E) => (accumState:SodiumAccumState<T, any, S>) => fn(evtData) (accumState.data);\n\n\n\nexport const sodiumAccumulate = <T,S>(configs:Array<SodiumAccumConfig<T,any,S>>) => (init:SodiumAccumState<T,any,S>):Cell<SodiumAccumState<T,any,S>> => {\n    const mappers = new Map<T, SodiumAccumMapper<T,any,S>>();\n    configs.forEach(({type, mapper}) => mappers.set(type, mapper));\n\n    return configs.reduce((streams:Stream<{data: any, type: T}>, config) => {\n        const stream = config.stream.map(evtData => ({\n            data: evtData,\n            type: config.type\n        }))\n\n        return streams === null\n            ?   stream\n            :   streams.orElse(stream)\n    }, null)\n    .accum(init, (evt, current) => \n        ({\n            data: mappers.get(evt.type) (evt.data) (current),\n            evt: evt,\n            prev: {\n                data: current.data,\n                evt: current.evt\n            }\n        })\n    )\n}\n\n\nexport const sodiumAccumulateSimple = <T,S>(configs:Array<SodiumAccumConfigSimple<T,any,S>>) => (init:SodiumAccumState<T,any,S>):Cell<SodiumAccumState<T,any,S>> => \n    sodiumAccumulate(\n        configs.map(simple => ({\n            type: simple.type,\n            stream: simple.stream,\n            mapper: sodiumAccumSimpleMapper(simple.mapper)\n        }) as SodiumAccumConfig<T,any,S>)\n    )\n    (init)\n\nexport const sodiumAccumulateSimpleState = <T,S>(configs:Array<SodiumAccumConfigSimple<T,any,S>>) => (init:SodiumAccumState<T,any,S>):Cell<S> => \n    sodiumAccumulate(\n        configs.map(simple => ({\n            type: simple.type,\n            stream: simple.stream,\n            mapper: sodiumAccumSimpleMapper(simple.mapper)\n        }) as SodiumAccumConfig<T,any,S>)\n    )\n    (init)\n    .map(state => state.data)\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/state-machines/Sodium-Accum-StateMachine.ts","export * from \"./Sodium-Renderer-Helpers\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/renderer/Sodium-Renderer.ts","import { Stream, StreamSink, Cell } from 'sodiumjs';\nimport { Maybe, S, Either } from '../../../external/sanctuary/Sanctuary';\nimport {NumberArray} from \"../../array/Array\";\nimport {WebGlElement, setWebGlElementClipSpace} from \"../../renderer/Renderer-WebGl\";\nimport {Transform} from \"../../transform/Transform\";\n\nexport const liftWebGlElementCellsClipSpace = \n    (cCamera:Cell<NumberArray>) => (elements:Array<Cell<WebGlElement>>):Cell<Array<WebGlElement>> => \n        S.sequence(Cell) (\n            elements.map((cElement:Cell<WebGlElement>) => \n                cElement.lift(cCamera, (element, cameraMatrix) => setWebGlElementClipSpace (cameraMatrix) (element))\n        )\n    );\n\nexport const liftWebGlElementsClipSpace = \n    (cCamera:Cell<NumberArray>) => (elements:Cell<Array<WebGlElement>>):Cell<Array<WebGlElement>> => \n        elements.lift(cCamera, (elements, cameraMatrix) => \n            elements.map(setWebGlElementClipSpace (cameraMatrix))\n        );\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/sodium/renderer/Sodium-Renderer-Helpers.ts","import { PriorityQueue, Set, BSTree } from 'typescript-collections';\nimport { Semigroup, concat } from 'sanctuary-type-classes';\n\nvar totalRegistrations = 0;\r\nfunction getTotalRegistrations() {\r\n    return totalRegistrations;\r\n}\r\nvar Source = /** @class */ (function () {\r\n    function Source(origin, register_) {\r\n        this.registered = false;\r\n        this.deregister_ = null;\r\n        if (origin === null)\r\n            throw new Error(\"null origin!\");\r\n        this.origin = origin;\r\n        this.register_ = register_;\r\n    }\r\n    Source.prototype.register = function (target) {\r\n        var _this = this;\r\n        if (!this.registered) {\r\n            this.registered = true;\r\n            if (this.register_ !== null)\r\n                this.deregister_ = this.register_();\r\n            else {\r\n                this.origin.increment(target);\r\n                this.deregister_ = function () { return _this.origin.decrement(target); };\r\n            }\r\n        }\r\n    };\r\n    Source.prototype.deregister = function (target) {\r\n        if (this.registered) {\r\n            this.registered = false;\r\n            if (this.deregister_ !== null)\r\n                this.deregister_();\r\n        }\r\n    };\r\n    return Source;\r\n}());\r\nvar Color;\r\n(function (Color) {\r\n    Color[Color[\"black\"] = 0] = \"black\";\r\n    Color[Color[\"gray\"] = 1] = \"gray\";\r\n    Color[Color[\"white\"] = 2] = \"white\";\r\n    Color[Color[\"purple\"] = 3] = \"purple\";\r\n})(Color || (Color = {}));\r\n\r\nvar roots = [];\r\nvar nextID = 0;\r\nvar verbose = false;\r\n\r\n\r\nvar Vertex = /** @class */ (function () {\r\n    function Vertex(name, rank, sources) {\r\n        this.targets = [];\r\n        this.childrn = [];\r\n        this.visited = false;\r\n        // --------------------------------------------------------\r\n        // Synchronous Cycle Collection algorithm presented in \"Concurrent\r\n        // Cycle Collection in Reference Counted Systems\" by David F. Bacon\r\n        // and V.T. Rajan.\r\n        this.color = Color.black;\r\n        this.buffered = false;\r\n        this.refCountAdj = 0;\r\n        this.name = name;\r\n        this.rank = rank;\r\n        this.sources = sources;\r\n        this.id = nextID++;\r\n    }\r\n    Vertex.prototype.refCount = function () { return this.targets.length; };\r\n    \r\n    Vertex.prototype.register = function (target) {\r\n        return this.increment(target);\r\n    };\r\n    Vertex.prototype.deregister = function (target) {\r\n        if (verbose)\r\n            console.log(\"deregister \" + this.descr() + \" => \" + target.descr());\r\n        this.decrement(target);\r\n        Vertex.collectCycles();\r\n    };\r\n    Vertex.prototype.incRefCount = function (target) {\r\n        var anyChanged = false;\r\n        if (this.refCount() == 0) {\r\n            for (var i = 0; i < this.sources.length; i++)\r\n                this.sources[i].register(this);\r\n        }\r\n        this.targets.push(target);\r\n        target.childrn.push(this);\r\n        if (target.ensureBiggerThan(this.rank))\r\n            anyChanged = true;\r\n        totalRegistrations++;\r\n        return anyChanged;\r\n    };\r\n    Vertex.prototype.decRefCount = function (target) {\r\n        if (verbose)\r\n            console.log(\"DEC \" + this.descr());\r\n        var matched = false;\r\n        for (var i = 0; i < target.childrn.length; i++)\r\n            if (target.childrn[i] === this) {\r\n                target.childrn.splice(i, 1);\r\n            }\r\n        for (var i = 0; i < this.targets.length; i++)\r\n            if (this.targets[i] === target) {\r\n                this.targets.splice(i, 1);\r\n                matched = true;\r\n                break;\r\n            }\r\n        if (matched) {\r\n            if (this.refCount() == 0) {\r\n                for (var i = 0; i < this.sources.length; i++)\r\n                    this.sources[i].deregister(this);\r\n            }\r\n            totalRegistrations--;\r\n        }\r\n    };\r\n    Vertex.prototype.addSource = function (src) {\r\n        this.sources.push(src);\r\n        if (this.refCount() > 0)\r\n            src.register(this);\r\n    };\r\n    Vertex.prototype.ensureBiggerThan = function (limit) {\r\n        if (this.rank > limit || this.visited)\r\n            return false;\r\n        this.visited = true;\r\n        this.rank = limit + 1;\r\n        for (var i = 0; i < this.targets.length; i++)\r\n            this.targets[i].ensureBiggerThan(this.rank);\r\n        this.visited = false;\r\n        return true;\r\n    };\r\n    Vertex.prototype.descr = function () {\r\n        var colStr = null;\r\n        switch (this.color) {\r\n            case Color.black:\r\n                colStr = \"black\";\r\n                break;\r\n            case Color.gray:\r\n                colStr = \"gray\";\r\n                break;\r\n            case Color.white:\r\n                colStr = \"white\";\r\n                break;\r\n            case Color.purple:\r\n                colStr = \"purple\";\r\n                break;\r\n        }\r\n        var str = this.id + \" \" + this.name + \" [\" + this.refCount() + \"/\" + this.refCountAdj + \"] \" + colStr + \" ->\";\r\n        var chs = this.children();\r\n        for (var i = 0; i < chs.length; i++) {\r\n            str = str + \" \" + chs[i].id;\r\n        }\r\n        return str;\r\n    };\r\n    Vertex.prototype.children = function () { return this.childrn; };\r\n    Vertex.prototype.increment = function (referrer) {\r\n        return this.incRefCount(referrer);\r\n    };\r\n    Vertex.prototype.decrement = function (referrer) {\r\n        this.decRefCount(referrer);\r\n        if (this.refCount() == 0)\r\n            this.release();\r\n        else\r\n            this.possibleRoots();\r\n    };\r\n    Vertex.prototype.release = function () {\r\n        this.color = Color.black;\r\n        if (!this.buffered)\r\n            this.free();\r\n    };\r\n    Vertex.prototype.free = function () {\r\n        while (this.targets.length > 0)\r\n            this.decRefCount(this.targets[0]);\r\n    };\r\n    Vertex.prototype.possibleRoots = function () {\r\n        if (this.color != Color.purple) {\r\n            this.color = Color.purple;\r\n            if (!this.buffered) {\r\n                this.buffered = true;\r\n                roots.push(this);\r\n            }\r\n        }\r\n    };\r\n    Vertex.collectCycles = function () {\r\n        Vertex.markRoots();\r\n        Vertex.scanRoots();\r\n        Vertex.collectRoots();\r\n    };\r\n    Vertex.markRoots = function () {\r\n        var newRoots = [];\r\n        for (var i = 0; i < roots.length; i++) {\r\n            if (verbose)\r\n                console.log(\"markRoots \" + roots[i].descr()); // ###\r\n            if (roots[i].color == Color.purple) {\r\n                roots[i].markGray();\r\n                newRoots.push(roots[i]);\r\n            }\r\n            else {\r\n                roots[i].buffered = false;\r\n                if (roots[i].color == Color.black && roots[i].refCount() == 0)\r\n                    roots[i].free();\r\n            }\r\n        }\r\n        roots = newRoots;\r\n    };\r\n    Vertex.scanRoots = function () {\r\n        for (var i = 0; i < roots.length; i++)\r\n            roots[i].scan();\r\n    };\r\n    Vertex.collectRoots = function () {\r\n        for (var i = 0; i < roots.length; i++) {\r\n            roots[i].buffered = false;\r\n            roots[i].collectWhite();\r\n        }\r\n        roots = [];\r\n    };\r\n    Vertex.prototype.markGray = function () {\r\n        if (this.color != Color.gray) {\r\n            this.color = Color.gray;\r\n            var chs = this.children();\r\n            for (var i = 0; i < chs.length; i++) {\r\n                chs[i].refCountAdj--;\r\n                if (verbose)\r\n                    console.log(\"markGray \" + this.descr());\r\n                chs[i].markGray();\r\n            }\r\n        }\r\n    };\r\n    Vertex.prototype.scan = function () {\r\n        if (verbose)\r\n            console.log(\"scan \" + this.descr());\r\n        if (this.color == Color.gray) {\r\n            if (this.refCount() + this.refCountAdj > 0)\r\n                this.scanBlack();\r\n            else {\r\n                this.color = Color.white;\r\n                if (verbose)\r\n                    console.log(\"scan WHITE \" + this.descr());\r\n                var chs = this.children();\r\n                for (var i = 0; i < chs.length; i++)\r\n                    chs[i].scan();\r\n            }\r\n        }\r\n    };\r\n    Vertex.prototype.scanBlack = function () {\r\n        this.color = Color.black;\r\n        var chs = this.children();\r\n        for (var i = 0; i < chs.length; i++) {\r\n            chs[i].refCountAdj++;\r\n            if (verbose)\r\n                console.log(\"scanBlack \" + this.descr());\r\n            if (chs[i].color != Color.black)\r\n                chs[i].scanBlack();\r\n        }\r\n    };\r\n    Vertex.prototype.collectWhite = function () {\r\n        if (this.color == Color.white && !this.buffered) {\r\n            if (verbose)\r\n                console.log(\"collectWhite \" + this.descr());\r\n            this.color = Color.black;\r\n            this.refCountAdj = 0;\r\n            var chs = this.children();\r\n            for (var i = 0; i < chs.length; i++)\r\n                chs[i].collectWhite();\r\n            this.free();\r\n        }\r\n    };\r\n    Vertex.NULL = new Vertex(\"user\", 1e12, []);\r\n    return Vertex;\r\n}());\n\nvar Lambda1 = /** @class */ (function () {\r\n    function Lambda1(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda1;\r\n}());\r\nfunction lambda1(f, deps) {\r\n    return new Lambda1(f, deps);\r\n}\r\nfunction Lambda1_deps(f) {\r\n    if (f instanceof Lambda1)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda1_toFunction(f) {\r\n    if (f instanceof Lambda1)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda2 = /** @class */ (function () {\r\n    function Lambda2(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda2;\r\n}());\r\nfunction lambda2(f, deps) {\r\n    return new Lambda2(f, deps);\r\n}\r\nfunction Lambda2_deps(f) {\r\n    if (f instanceof Lambda2)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda2_toFunction(f) {\r\n    if (f instanceof Lambda2)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda3 = /** @class */ (function () {\r\n    function Lambda3(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda3;\r\n}());\r\nfunction lambda3(f, deps) {\r\n    return new Lambda3(f, deps);\r\n}\r\nfunction Lambda3_deps(f) {\r\n    if (f instanceof Lambda3)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda3_toFunction(f) {\r\n    if (f instanceof Lambda3)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda4 = /** @class */ (function () {\r\n    function Lambda4(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda4;\r\n}());\r\nfunction lambda4(f, deps) {\r\n    return new Lambda4(f, deps);\r\n}\r\nfunction Lambda4_deps(f) {\r\n    if (f instanceof Lambda4)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda4_toFunction(f) {\r\n    if (f instanceof Lambda4)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda5 = /** @class */ (function () {\r\n    function Lambda5(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda5;\r\n}());\r\nfunction lambda5(f, deps) {\r\n    return new Lambda5(f, deps);\r\n}\r\nfunction Lambda5_deps(f) {\r\n    if (f instanceof Lambda5)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda5_toFunction(f) {\r\n    if (f instanceof Lambda5)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda6 = /** @class */ (function () {\r\n    function Lambda6(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda6;\r\n}());\r\nfunction lambda6(f, deps) {\r\n    return new Lambda6(f, deps);\r\n}\r\nfunction Lambda6_deps(f) {\r\n    if (f instanceof Lambda6)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda6_toFunction(f) {\r\n    if (f instanceof Lambda6)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nfunction toSources(deps) {\r\n    var ss = [];\r\n    for (var i = 0; i < deps.length; i++) {\r\n        var dep = deps[i];\r\n        ss.push(new Source(dep.getVertex__(), null));\r\n    }\r\n    return ss;\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar Entry = /** @class */ (function () {\r\n    function Entry(rank, action) {\r\n        this.rank = rank;\r\n        this.action = action;\r\n        this.seq = Entry.nextSeq++;\r\n    }\r\n    Entry.prototype.toString = function () {\r\n        return this.seq.toString();\r\n    };\r\n    Entry.nextSeq = 0;\r\n    return Entry;\r\n}());\r\nvar Transaction = /** @class */ (function () {\r\n    function Transaction() {\r\n        this.inCallback = 0;\r\n        this.toRegen = false;\r\n        this.prioritizedQ = new PriorityQueue(function (a, b) {\r\n            // Note: Low priority numbers are treated as \"greater\" according to this\r\n            // comparison, so that the lowest numbers are highest priority and go first.\r\n            if (a.rank.rank < b.rank.rank)\r\n                return 1;\r\n            if (a.rank.rank > b.rank.rank)\r\n                return -1;\r\n            if (a.seq < b.seq)\r\n                return 1;\r\n            if (a.seq > b.seq)\r\n                return -1;\r\n            return 0;\r\n        });\r\n        this.entries = new Set(function (a) { return a.toString(); });\r\n        this.sampleQ = [];\r\n        this.lastQ = [];\r\n        this.postQ = null;\r\n    }\r\n    Transaction.prototype.requestRegen = function () {\r\n        this.toRegen = true;\r\n    };\r\n    Transaction.prototype.prioritized = function (target, action) {\r\n        var e = new Entry(target, action);\r\n        this.prioritizedQ.enqueue(e);\r\n        this.entries.add(e);\r\n    };\r\n    Transaction.prototype.sample = function (h) {\r\n        this.sampleQ.push(h);\r\n    };\r\n    Transaction.prototype.last = function (h) {\r\n        this.lastQ.push(h);\r\n    };\r\n    /**\r\n     * Add an action to run after all last() actions.\r\n     */\r\n    Transaction.prototype.post = function (childIx, action) {\r\n        if (this.postQ == null)\r\n            this.postQ = [];\r\n        // If an entry exists already, combine the old one with the new one.\r\n        while (this.postQ.length <= childIx)\r\n            this.postQ.push(null);\r\n        var existing = this.postQ[childIx], neu = existing === null ? action\r\n            : function () {\r\n                existing();\r\n                action();\r\n            };\r\n        this.postQ[childIx] = neu;\r\n    };\r\n    // If the priority queue has entries in it when we modify any of the nodes'\r\n    // ranks, then we need to re-generate it to make sure it's up-to-date.\r\n    Transaction.prototype.checkRegen = function () {\r\n        if (this.toRegen) {\r\n            this.toRegen = false;\r\n            this.prioritizedQ.clear();\r\n            var es = this.entries.toArray();\r\n            for (var i = 0; i < es.length; i++)\r\n                this.prioritizedQ.enqueue(es[i]);\r\n        }\r\n    };\r\n    Transaction.prototype.isActive = function () {\r\n        return Transaction.currentTransaction ? true : false;\r\n    };\r\n    Transaction.prototype.close = function () {\r\n        while (true) {\r\n            while (true) {\r\n                this.checkRegen();\r\n                if (this.prioritizedQ.isEmpty())\r\n                    break;\r\n                var e = this.prioritizedQ.dequeue();\r\n                this.entries.remove(e);\r\n                e.action();\r\n            }\r\n            var sq = this.sampleQ;\r\n            this.sampleQ = [];\r\n            for (var i = 0; i < sq.length; i++)\r\n                sq[i]();\r\n            if (this.prioritizedQ.isEmpty() && this.sampleQ.length < 1)\r\n                break;\r\n        }\r\n        for (var i = 0; i < this.lastQ.length; i++)\r\n            this.lastQ[i]();\r\n        this.lastQ = [];\r\n        if (this.postQ != null) {\r\n            for (var i = 0; i < this.postQ.length; i++) {\r\n                if (this.postQ[i] != null) {\r\n                    var parent_1 = Transaction.currentTransaction;\r\n                    try {\r\n                        if (i > 0) {\r\n                            Transaction.currentTransaction = new Transaction();\r\n                            try {\r\n                                this.postQ[i]();\r\n                                Transaction.currentTransaction.close();\r\n                            }\r\n                            catch (err) {\r\n                                Transaction.currentTransaction.close();\r\n                                throw err;\r\n                            }\r\n                        }\r\n                        else {\r\n                            Transaction.currentTransaction = null;\r\n                            this.postQ[i]();\r\n                        }\r\n                        Transaction.currentTransaction = parent_1;\r\n                    }\r\n                    catch (err) {\r\n                        Transaction.currentTransaction = parent_1;\r\n                        throw err;\r\n                    }\r\n                }\r\n            }\r\n            this.postQ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Add a runnable that will be executed whenever a transaction is started.\r\n     * That runnable may start transactions itself, which will not cause the\r\n     * hooks to be run recursively.\r\n     *\r\n     * The main use case of this is the implementation of a time/alarm system.\r\n     */\r\n    Transaction.onStart = function (r) {\r\n        Transaction.onStartHooks.push(r);\r\n    };\r\n    Transaction.run = function (f) {\r\n        var transWas = Transaction.currentTransaction;\r\n        if (transWas === null) {\r\n            if (!Transaction.runningOnStartHooks) {\r\n                Transaction.runningOnStartHooks = true;\r\n                try {\r\n                    for (var i = 0; i < Transaction.onStartHooks.length; i++)\r\n                        Transaction.onStartHooks[i]();\r\n                }\r\n                finally {\r\n                    Transaction.runningOnStartHooks = false;\r\n                }\r\n            }\r\n            Transaction.currentTransaction = new Transaction();\r\n        }\r\n        try {\r\n            var a = f();\r\n            if (transWas === null) {\r\n                Transaction.currentTransaction.close();\r\n                Transaction.currentTransaction = null;\r\n            }\r\n            return a;\r\n        }\r\n        catch (err) {\r\n            if (transWas === null) {\r\n                Transaction.currentTransaction.close();\r\n                Transaction.currentTransaction = null;\r\n            }\r\n            throw err;\r\n        }\r\n    };\r\n    Transaction.currentTransaction = null;\r\n    Transaction.onStartHooks = [];\r\n    Transaction.runningOnStartHooks = false;\r\n    return Transaction;\r\n}());\n\nvar CoalesceHandler = /** @class */ (function () {\r\n    function CoalesceHandler(f, out) {\r\n        this.f = Lambda2_toFunction(f);\r\n        this.out = out;\r\n        this.out.getVertex__().sources = this.out.getVertex__().sources.concat(toSources(Lambda2_deps(f)));\r\n        this.accumValid = false;\r\n    }\r\n    CoalesceHandler.prototype.send_ = function (a) {\r\n        var _this = this;\r\n        if (this.accumValid)\r\n            this.accum = this.f(this.accum, a);\r\n        else {\r\n            Transaction.currentTransaction.prioritized(this.out.getVertex__(), function () {\r\n                _this.out.send_(_this.accum);\r\n                _this.accumValid = false;\r\n                _this.accum = null;\r\n            });\r\n            this.accum = a;\r\n            this.accumValid = true;\r\n        }\r\n    };\r\n    return CoalesceHandler;\r\n}());\n\n/**\r\n * A representation for a value that may not be available until the current\r\n * transaction is closed.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(f) {\r\n        this.f = f;\r\n    }\r\n    /**\r\n     * Get the value if available, throwing an exception if not.\r\n     * In the general case this should only be used in subsequent transactions to\r\n     * when the Lazy was obtained.\r\n     */\r\n    Lazy.prototype.get = function () {\r\n        return this.f();\r\n    };\r\n    /**\r\n     * Map the lazy value according to the specified function, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazy's value.\r\n     * @param f Function to apply to the contained value. It must be <em>referentially transparent</em>.\r\n     */\r\n    Lazy.prototype.map = function (f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f()); });\r\n    };\r\n    /**\r\n     * Lift a binary function into lazy values, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazys' values.\r\n     */\r\n    Lazy.prototype.lift = function (b, f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f(), b.f()); });\r\n    };\r\n    /**\r\n     * Lift a ternary function into lazy values, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazys' values.\r\n     */\r\n    Lazy.prototype.lift3 = function (b, c, f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f(), b.f(), c.f()); });\r\n    };\r\n    /**\r\n     * Lift a quaternary function into lazy values, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazys' values.\r\n     */\r\n    Lazy.prototype.lift4 = function (b, c, d, f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f(), b.f(), c.f(), d.f()); });\r\n    };\r\n    return Lazy;\r\n}());\n\nvar Unit = /** @class */ (function () {\r\n    function Unit() {\r\n    }\r\n    Unit.UNIT = new Unit();\r\n    return Unit;\r\n}());\n\nvar Operational = /** @class */ (function () {\r\n    function Operational() {\r\n    }\r\n    /**\r\n     * A stream that gives the updates/steps for a {@link Cell}.\r\n     * <P>\r\n     * This is an OPERATIONAL primitive, which is not part of the main Sodium\r\n     * API. It breaks the property of non-detectability of cell steps/updates.\r\n     * The rule with this primitive is that you should only use it in functions\r\n     * that do not allow the caller to detect the cell updates.\r\n     */\r\n    Operational.updates = function (c) {\r\n        /*  Don't think this is needed\r\n        const out = new StreamWithSend<A>(null);\r\n        out.setVertex__(new Vertex(\"updates\", 0, [\r\n                new Source(\r\n                    c.getStream__().getVertex__(),\r\n                    () => {\r\n                        return c.getStream__().listen_(out.getVertex__(), (a : A) => {\r\n                            out.send_(a);\r\n                        }, false);\r\n                    }\r\n                ),\r\n                new Source(\r\n                    c.getVertex__(),\r\n                    () => {\r\n                        return () => { };\r\n                    }\r\n                )\r\n            ]\r\n        ));\r\n        return out;\r\n        */\r\n        return c.getStream__();\r\n    };\r\n    /**\r\n     * A stream that is guaranteed to fire once in the transaction where value() is invoked, giving\r\n     * the current value of the cell, and thereafter behaves like {@link updates(Cell)},\r\n     * firing for each update/step of the cell's value.\r\n     * <P>\r\n     * This is an OPERATIONAL primitive, which is not part of the main Sodium\r\n     * API. It breaks the property of non-detectability of cell steps/updates.\r\n     * The rule with this primitive is that you should only use it in functions\r\n     * that do not allow the caller to detect the cell updates.\r\n     */\r\n    Operational.value = function (c) {\r\n        return Transaction.run(function () {\r\n            var sSpark = new StreamWithSend();\r\n            Transaction.currentTransaction.prioritized(sSpark.getVertex__(), function () {\r\n                sSpark.send_(Unit.UNIT);\r\n            });\r\n            var sInitial = sSpark.snapshot1(c);\r\n            return Operational.updates(c).orElse(sInitial);\r\n        });\r\n    };\r\n    /**\r\n     * Push each event onto a new transaction guaranteed to come before the next externally\r\n     * initiated transaction. Same as {@link split(Stream)} but it works on a single value.\r\n     */\r\n    Operational.defer = function (s) {\r\n        return Operational.split(s.map(function (a) {\r\n            return [a];\r\n        }));\r\n    };\r\n    /**\r\n     * Push each event in the list onto a newly created transaction guaranteed\r\n     * to come before the next externally initiated transaction. Note that the semantics\r\n     * are such that two different invocations of split() can put events into the same\r\n     * new transaction, so the resulting stream's events could be simultaneous with\r\n     * events output by split() or {@link defer(Stream)} invoked elsewhere in the code.\r\n     */\r\n    Operational.split = function (s) {\r\n        var out = new StreamWithSend(null);\r\n        out.setVertex__(new Vertex(\"split\", 0, [\r\n            new Source(s.getVertex__(), function () {\r\n                return s.listen_(out.getVertex__(), function (as) {\r\n                    var _loop_1 = function (i) {\r\n                        Transaction.currentTransaction.post(i, function () {\r\n                            Transaction.run(function () {\r\n                                out.send_(as[i]);\r\n                            });\r\n                        });\r\n                    };\r\n                    for (var i = 0; i < as.length; i++) {\r\n                        _loop_1(i);\r\n                    }\r\n                }, false);\r\n            })\r\n        ]));\r\n        return out;\r\n    };\r\n    return Operational;\r\n}());\n\nvar LazySample = /** @class */ (function () {\r\n    function LazySample(cell) {\r\n        this.hasValue = false;\r\n        this.value = null;\r\n        this.cell = cell;\r\n    }\r\n    return LazySample;\r\n}());\r\nvar ApplyState = /** @class */ (function () {\r\n    function ApplyState() {\r\n        this.f = null;\r\n        this.f_present = false;\r\n        this.a = null;\r\n        this.a_present = false;\r\n    }\r\n    return ApplyState;\r\n}());\r\nvar Cell = /** @class */ (function () {\r\n    function Cell(initValue, str) {\r\n        var _this = this;\r\n        this.value = initValue;\r\n        if (!str) {\r\n            this.str = new Stream();\r\n            this.vertex = new Vertex(\"ConstCell\", 0, []);\r\n        }\r\n        else\r\n            Transaction.run(function () { return _this.setStream(str); });\r\n    }\r\n    Cell.prototype.setStream = function (str) {\r\n        var _this = this;\r\n        this.str = str;\r\n        var me = this, src = new Source(str.getVertex__(), function () {\r\n            return str.listen_(me.vertex, function (a) {\r\n                if (me.valueUpdate == null) {\r\n                    Transaction.currentTransaction.last(function () {\r\n                        me.value = me.valueUpdate;\r\n                        me.lazyInitValue = null;\r\n                        me.valueUpdate = null;\r\n                    });\r\n                }\r\n                me.valueUpdate = a;\r\n            }, false);\r\n        });\r\n        this.vertex = new Vertex(\"Cell\", 0, [src]);\r\n        // We do a trick here of registering the source for the duration of the current\r\n        // transaction so that we are guaranteed to catch any stream events that\r\n        // occur in the same transaction.\r\n        this.vertex.register(Vertex.NULL);\r\n        Transaction.currentTransaction.last(function () {\r\n            _this.vertex.deregister(Vertex.NULL);\r\n        });\r\n    };\r\n    Cell.prototype.getVertex__ = function () {\r\n        return this.vertex;\r\n    };\r\n    Cell.prototype.getStream__ = function () {\r\n        return this.str;\r\n    };\r\n    /**\r\n     * Sample the cell's current value.\r\n     * <p>\r\n     * It should generally be avoided in favour of {@link listen(Handler)} so you don't\r\n     * miss any updates, but in many circumstances it makes sense.\r\n     * <p>\r\n     * NOTE: In the Java and other versions of Sodium, using sample() inside map(), filter() and\r\n     * merge() is encouraged. In the Javascript/Typescript version, not so much, for the\r\n     * following reason: The memory management is different in the Javascript version, and this\r\n     * requires us to track all dependencies. In order for the use of sample() inside\r\n     * a closure to be correct, the cell that was sample()d inside the closure would have to be\r\n     * declared explicitly using the helpers lambda1(), lambda2(), etc. Because this is\r\n     * something that can be got wrong, we don't encourage this kind of use of sample() in\r\n     * Javascript. Better and simpler to use snapshot().\r\n     * <p>\r\n     * NOTE: If you need to sample() a cell, you have to make sure it's \"alive\" in terms of\r\n     * memory management or it will ignore updates. To make a cell work correctly\r\n     * with sample(), you have to ensure that it's being used. One way to guarantee this is\r\n     * to register a dummy listener on the cell. It will also work to have it referenced\r\n     * by something that is ultimately being listened to.\r\n     */\r\n    Cell.prototype.sample = function () {\r\n        var _this = this;\r\n        return Transaction.run(function () { return _this.sampleNoTrans__(); });\r\n    };\r\n    Cell.prototype.sampleNoTrans__ = function () {\r\n        return this.value;\r\n    };\r\n    /**\r\n     * A variant of {@link sample()} that works with {@link CellLoop}s when they haven't been looped yet.\r\n     * It should be used in any code that's general enough that it could be passed a {@link CellLoop}.\r\n     * @see Stream#holdLazy(Lazy) Stream.holdLazy()\r\n     */\r\n    Cell.prototype.sampleLazy = function () {\r\n        var me = this;\r\n        return Transaction.run(function () { return me.sampleLazyNoTrans__(); });\r\n    };\r\n    Cell.prototype.sampleLazyNoTrans__ = function () {\r\n        var me = this, s = new LazySample(me);\r\n        Transaction.currentTransaction.sample(function () {\r\n            s.value = me.valueUpdate != null ? me.valueUpdate : me.sampleNoTrans__();\r\n            s.hasValue = true;\r\n            s.cell = null;\r\n        });\r\n        return new Lazy(function () {\r\n            if (s.hasValue)\r\n                return s.value;\r\n            else\r\n                return s.cell.sample();\r\n        });\r\n    };\r\n    /**\r\n     * Transform the cell's value according to the supplied function, so the returned Cell\r\n     * always reflects the value of the function applied to the input Cell's value.\r\n     * @param f Function to apply to convert the values. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.map = function (f) {\r\n        var c = this;\r\n        return Transaction.run(function () {\r\n            return Operational.updates(c).map(f).holdLazy(c.sampleLazy().map(Lambda1_toFunction(f)));\r\n        });\r\n    };\r\n    /**\r\n     * Lift a binary function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift = function (b, fn0) {\r\n        var fn = Lambda2_toFunction(fn0), cf = this.map(function (aa) { return function (bb) { return fn(aa, bb); }; });\r\n        return Cell.apply(cf, b, toSources(Lambda2_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a ternary function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift3 = function (b, c, fn0) {\r\n        var fn = Lambda3_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return fn(aa, bb, cc); }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(cf, b), c, toSources(Lambda3_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a quaternary function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift4 = function (b, c, d, fn0) {\r\n        var fn = Lambda4_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return function (dd) { return fn(aa, bb, cc, dd); }; }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(Cell.apply(cf, b), c), d, toSources(Lambda4_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a 5-argument function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift5 = function (b, c, d, e, fn0) {\r\n        var fn = Lambda5_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return function (dd) { return function (ee) { return fn(aa, bb, cc, dd, ee); }; }; }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(Cell.apply(Cell.apply(cf, b), c), d), e, toSources(Lambda5_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a 6-argument function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift6 = function (b, c, d, e, f, fn0) {\r\n        var fn = Lambda6_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return function (dd) { return function (ee) { return function (ff) { return fn(aa, bb, cc, dd, ee, ff); }; }; }; }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(Cell.apply(Cell.apply(Cell.apply(cf, b), c), d), e), f, toSources(Lambda6_deps(fn0)));\r\n    };\r\n    /**\r\n     * Apply a value inside a cell to a function inside a cell. This is the\r\n     * primitive for all function lifting.\r\n     */\r\n    Cell.apply = function (cf, ca, sources) {\r\n        return Transaction.run(function () {\r\n            var state = new ApplyState(), out = new StreamWithSend(), cf_value = Operational.value(cf), ca_value = Operational.value(ca), src1 = new Source(cf_value.getVertex__(), function () {\r\n                return cf_value.listen_(out.getVertex__(), function (f) {\r\n                    state.f = f;\r\n                    state.f_present = true;\r\n                    if (state.a_present)\r\n                        out.send_(state.f(state.a));\r\n                }, false);\r\n            }), src2 = new Source(ca_value.getVertex__(), function () {\r\n                return ca_value.listen_(out.getVertex__(), function (a) {\r\n                    state.a = a;\r\n                    state.a_present = true;\r\n                    if (state.f_present)\r\n                        out.send_(state.f(state.a));\r\n                }, false);\r\n            });\r\n            out.setVertex__(new Vertex(\"apply\", 0, [src1, src2].concat(sources ? sources : [])));\r\n            return out.coalesce__(function (l, r) { return r; }).holdLazy(new Lazy(function () {\r\n                return cf.sampleNoTrans__()(ca.sampleNoTrans__());\r\n            }));\r\n        });\r\n    };\r\n    /**\r\n     * Unwrap a cell inside another cell to give a time-varying cell implementation.\r\n     */\r\n    Cell.switchC = function (cca) {\r\n        return Transaction.run(function () {\r\n            var za = cca.sampleLazy().map(function (ba) { return ba.sample(); }), out = new StreamWithSend();\r\n            var last_ca = null;\r\n            var cca_value = Operational.value(cca), src = new Source(cca_value.getVertex__(), function () {\r\n                var kill2 = last_ca === null ? null :\r\n                    Operational.value(last_ca).listen_(out.getVertex__(), function (a) { return out.send_(a); }, false);\r\n                var kill1 = cca_value.listen_(out.getVertex__(), function (ca) {\r\n                    // Note: If any switch takes place during a transaction, then the\r\n                    // coalesce__() below will always cause a sample to be fetched\r\n                    // from the one we just switched to. So anything from the old input cell\r\n                    // that might have happened during this transaction will be suppressed.\r\n                    last_ca = ca;\r\n                    if (kill2 !== null)\r\n                        kill2();\r\n                    kill2 = Operational.value(ca).listen_(out.getVertex__(), function (a) { return out.send_(a); }, false);\r\n                }, false);\r\n                return function () { kill1(); kill2(); };\r\n            });\r\n            out.setVertex__(new Vertex(\"switchC\", 0, [src]));\r\n            return out.coalesce__(function (l, r) { return r; }).holdLazy(za);\r\n        });\r\n    };\r\n    /**\r\n     * Unwrap a stream inside a cell to give a time-varying stream implementation.\r\n     */\r\n    Cell.switchS = function (csa) {\r\n        return Transaction.run(function () {\r\n            var out = new StreamWithSend(), h2 = function (a) {\r\n                out.send_(a);\r\n            }, src = new Source(csa.getVertex__(), function () {\r\n                var kill2 = csa.sampleNoTrans__().listen_(out.getVertex__(), h2, false);\r\n                var kill1 = csa.getStream__().listen_(out.getVertex__(), function (sa) {\r\n                    kill2();\r\n                    kill2 = sa.listen_(out.getVertex__(), h2, true);\r\n                }, false);\r\n                return function () { kill1(); kill2(); };\r\n            });\r\n            out.setVertex__(new Vertex(\"switchS\", 0, [src]));\r\n            return out;\r\n        });\r\n    };\r\n    /**\r\n     * Listen for updates to the value of this cell. This is the observer pattern. The\r\n     * returned {@link Listener} has a {@link Listener#unlisten()} method to cause the\r\n     * listener to be removed. This is an OPERATIONAL mechanism is for interfacing between\r\n     * the world of I/O and for FRP.\r\n     * @param h The handler to execute when there's a new value.\r\n     *   You should make no assumptions about what thread you are called on, and the\r\n     *   handler should not block. You are not allowed to use {@link CellSink#send(Object)}\r\n     *   or {@link StreamSink#send(Object)} in the handler.\r\n     *   An exception will be thrown, because you are not meant to use this to create\r\n     *   your own primitives.\r\n     */\r\n    Cell.prototype.listen = function (h) {\r\n        var _this = this;\r\n        return Transaction.run(function () {\r\n            return Operational.value(_this).listen(h);\r\n        });\r\n    };\r\n    /**\r\n     * Fantasy-land Algebraic Data Type Compatability.\r\n     * Cell satisfies the Monad and Comonad Categories (and hence Functor, Apply, Applicative, and Extend as well)\r\n     * @see {@link https://github.com/fantasyland/fantasy-land} for more info\r\n     */\r\n    //of :: Applicative f => a -> f a\r\n    Cell['fantasy-land/of'] = function (a) {\r\n        return new Cell(a);\r\n    };\r\n    //map :: Functor f => f a ~> (a -> b) -> f b\r\n    Cell.prototype['fantasy-land/map'] = function (f) {\r\n        return this.map(f);\r\n    };\r\n    //ap :: Apply f => f a ~> f (a -> b) -> f b\r\n    Cell.prototype['fantasy-land/ap'] = function (cf) {\r\n        return Cell.apply(cf, this);\r\n    };\r\n    //chain :: Chain m => m a ~> (a -> m b) -> m b\r\n    Cell.prototype['fantasy-land/chain'] = function (f) {\r\n        return Cell.switchC(this.map(f));\r\n    };\r\n    //extend :: Extend w => w a ~> (w a -> b) -> w b\r\n    Cell.prototype['fantasy-land/extend'] = function (f) {\r\n        return new Cell(f(this));\r\n    };\r\n    //extract :: Comonad w => w a ~> () -> a\r\n    Cell.prototype['fantasy-land/extract'] = function () {\r\n        return this.sample();\r\n    };\r\n    return Cell;\r\n}());\n\nvar Listener = /** @class */ (function () {\r\n    function Listener(h, target) {\r\n        this.h = h;\r\n        this.target = target;\r\n    }\r\n    return Listener;\r\n}());\n\nvar LazyCell = /** @class */ (function (_super) {\r\n    __extends(LazyCell, _super);\r\n    function LazyCell(lazyInitValue, str) {\r\n        var _this = _super.call(this, null, null) || this;\r\n        Transaction.run(function () {\r\n            if (str)\r\n                _this.setStream(str);\r\n            _this.lazyInitValue = lazyInitValue;\r\n        });\r\n        return _this;\r\n    }\r\n    LazyCell.prototype.sampleNoTrans__ = function () {\r\n        if (this.value == null && this.lazyInitValue != null) {\r\n            this.value = this.lazyInitValue.get();\r\n            this.lazyInitValue = null;\r\n        }\r\n        return this.value;\r\n    };\r\n    return LazyCell;\r\n}(Cell));\n\n//import { StreamLoop } from \"./StreamLoop\";\r\nvar Stream = /** @class */ (function () {\r\n    function Stream(vertex) {\r\n        this.listeners = [];\r\n        this.firings = [];\r\n        this.vertex = vertex ? vertex : new Vertex(\"Stream\", 0, []);\r\n    }\r\n    Stream.prototype.getVertex__ = function () {\r\n        return this.vertex;\r\n    };\r\n    /**\r\n     * Transform the stream's event values according to the supplied function, so the returned\r\n     * Stream's event values reflect the value of the function applied to the input\r\n     * Stream's event values.\r\n     * @param f Function to apply to convert the values. It may construct FRP logic or use\r\n     *    {@link Cell#sample()} in which case it is equivalent to {@link Stream#snapshot(Cell)}ing the\r\n     *    cell. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.map = function (f) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda1_toFunction(f);\r\n        out.vertex = new Vertex(\"map\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a));\r\n                }, false);\r\n            })\r\n        ].concat(toSources(Lambda1_deps(f))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Transform the stream's event values into the specified constant value.\r\n     * @param b Constant value.\r\n     */\r\n    Stream.prototype.mapTo = function (b) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        out.vertex = new Vertex(\"mapTo\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(b);\r\n                }, false);\r\n            })\r\n        ]);\r\n        return out;\r\n    };\r\n    /**\r\n     * Variant of {@link Stream#merge(Stream, Lambda2)} that merges two streams and will drop an event\r\n     * in the simultaneous case.\r\n     * <p>\r\n     * In the case where two events are simultaneous (i.e. both\r\n     * within the same transaction), the event from <em>this</em> will take precedence, and\r\n     * the event from <em>s</em> will be dropped.\r\n     * If you want to specify your own combining function, use {@link Stream#merge(Stream, Lambda2)}.\r\n     * s1.orElse(s2) is equivalent to s1.merge(s2, (l, r) -&gt; l).\r\n     * <p>\r\n     * The name orElse() is used instead of merge() to make it really clear that care should\r\n     * be taken, because events can be dropped.\r\n     */\r\n    Stream.prototype.orElse = function (s) {\r\n        return this.merge(s, function (left, right) {\r\n            return left;\r\n        });\r\n    };\r\n    Stream.prototype.merge_ = function (s) {\r\n        var _this = this;\r\n        var out = new StreamWithSend();\r\n        var left = new Vertex(\"merge\", 0, []);\r\n        left.sources.push(new Source(this.vertex, function () {\r\n            return _this.listen_(left, function (a) {\r\n                out.send_(a);\r\n            }, false);\r\n        }));\r\n        out.vertex.sources = out.vertex.sources.concat([\r\n            new Source(left, function () {\r\n                left.register(out.vertex);\r\n                return function () { left.deregister(out.vertex); };\r\n            }),\r\n            new Source(s.vertex, function () {\r\n                return s.listen_(out.vertex, function (a) {\r\n                    out.send_(a);\r\n                }, false);\r\n            })\r\n        ]);\r\n        return out;\r\n    };\r\n    Stream.prototype.coalesce__ = function (f) {\r\n        var _this = this;\r\n        var out = new StreamWithSend();\r\n        var coalescer = new CoalesceHandler(f, out);\r\n        out.vertex.sources = out.vertex.sources.concat([\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    coalescer.send_(a);\r\n                }, false);\r\n            })\r\n        ]).concat(toSources(Lambda2_deps(f)));\r\n        return out;\r\n    };\r\n    /**\r\n     * Merge two streams of the same type into one, so that events on either input appear\r\n     * on the returned stream.\r\n     * <p>\r\n     * If the events are simultaneous (that is, one event from this and one from <em>s</em>\r\n     * occurring in the same transaction), combine them into one using the specified combining function\r\n     * so that the returned stream is guaranteed only ever to have one event per transaction.\r\n     * The event from <em>this</em> will appear at the left input of the combining function, and\r\n     * the event from <em>s</em> will appear at the right.\r\n     * @param f Function to combine the values. It may construct FRP logic or use\r\n     *    {@link Cell#sample()}. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.merge = function (s, f) {\r\n        var _this = this;\r\n        return Transaction.run(function () {\r\n            return _this.merge_(s).coalesce__(f);\r\n        });\r\n    };\r\n    /**\r\n     * Return a stream that only outputs events for which the predicate returns true.\r\n     */\r\n    Stream.prototype.filter = function (f) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda1_toFunction(f);\r\n        out.vertex = new Vertex(\"filter\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    if (ff(a))\r\n                        out.send_(a);\r\n                }, false);\r\n            })\r\n        ].concat(toSources(Lambda1_deps(f))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream that only outputs events that have present\r\n     * values, discarding null values.\r\n     */\r\n    Stream.prototype.filterNotNull = function () {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        out.vertex = new Vertex(\"filterNotNull\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    if (a !== null)\r\n                        out.send_(a);\r\n                }, false);\r\n            })\r\n        ]);\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream that only outputs events from the input stream\r\n     * when the specified cell's value is true.\r\n     */\r\n    Stream.prototype.gate = function (c) {\r\n        return this.snapshot(c, function (a, pred) {\r\n            return pred ? a : null;\r\n        }).filterNotNull();\r\n    };\r\n    /**\r\n     * Variant of {@link snapshot(Cell, Lambda2)} that captures the cell's value\r\n     * at the time of the event firing, ignoring the stream's value.\r\n     */\r\n    Stream.prototype.snapshot1 = function (c) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        out.vertex = new Vertex(\"snapshot1\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(c.sampleNoTrans__());\r\n                }, false);\r\n            }),\r\n            new Source(c.getVertex__(), null)\r\n        ]);\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cell at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, {@link Stream#snapshot(Cell, Lambda2)}\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot = function (b, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda2_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null)\r\n        ].concat(toSources(Lambda2_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot3 = function (b, c, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda3_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null)\r\n        ].concat(toSources(Lambda3_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot4 = function (b, c, d, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda4_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__(), d.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null),\r\n            new Source(d.getVertex__(), null)\r\n        ].concat(toSources(Lambda4_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot5 = function (b, c, d, e, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda5_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__(), d.sampleNoTrans__(), e.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null),\r\n            new Source(d.getVertex__(), null),\r\n            new Source(e.getVertex__(), null)\r\n        ].concat(toSources(Lambda5_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot6 = function (b, c, d, e, f, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda6_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__(), d.sampleNoTrans__(), e.sampleNoTrans__(), f.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null),\r\n            new Source(d.getVertex__(), null),\r\n            new Source(e.getVertex__(), null),\r\n            new Source(f.getVertex__(), null)\r\n        ].concat(toSources(Lambda6_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Create a {@link Cell} with the specified initial value, that is updated\r\n     * by this stream's event values.\r\n     * <p>\r\n     * There is an implicit delay: State updates caused by event firings don't become\r\n     * visible as the cell's current value as viewed by {@link Stream#snapshot(Cell, Lambda2)}\r\n     * until the following transaction. To put this another way,\r\n     * {@link Stream#snapshot(Cell, Lambda2)} always sees the value of a cell as it was before\r\n     * any state changes from the current transaction.\r\n     */\r\n    Stream.prototype.hold = function (initValue) {\r\n        return new Cell(initValue, this);\r\n    };\r\n    /**\r\n     * A variant of {@link hold(Object)} with an initial value captured by {@link Cell#sampleLazy()}.\r\n     */\r\n    Stream.prototype.holdLazy = function (initValue) {\r\n        return new LazyCell(initValue, this);\r\n    };\r\n    /**\r\n     * Transform an event with a generalized state loop (a Mealy machine). The function\r\n     * is passed the input and the old state and returns the new state and output value.\r\n     * @param f Function to apply to update the state. It may construct FRP logic or use\r\n     *    {@link Cell#sample()} in which case it is equivalent to {@link Stream#snapshot(Cell)}ing the\r\n     *    cell. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.collect = function (initState, f) {\r\n        return this.collectLazy(new Lazy(function () { return initState; }), f);\r\n    };\r\n    /**\r\n     * A variant of {@link collect(Object, Lambda2)} that takes an initial state returned by\r\n     * {@link Cell#sampleLazy()}.\r\n     */\r\n    Stream.prototype.collectLazy = function (initState, f) {\r\n        var ea = this;\r\n        return Transaction.run(function () {\r\n            var es = new StreamLoop(), s = es.holdLazy(initState), ebs = ea.snapshot(s, f), eb = ebs.map(function (bs) { return bs.a; }), es_out = ebs.map(function (bs) { return bs.b; });\r\n            es.loop(es_out);\r\n            return eb;\r\n        });\r\n    };\r\n    /**\r\n     * Accumulate on input event, outputting the new state each time.\r\n     * @param f Function to apply to update the state. It may construct FRP logic or use\r\n     *    {@link Cell#sample()} in which case it is equivalent to {@link Stream#snapshot(Cell)}ing the\r\n     *    cell. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.accum = function (initState, f) {\r\n        return this.accumLazy(new Lazy(function () { return initState; }), f);\r\n    };\r\n    /**\r\n     * A variant of {@link accum(Object, Lambda2)} that takes an initial state returned by\r\n     * {@link Cell#sampleLazy()}.\r\n     */\r\n    Stream.prototype.accumLazy = function (initState, f) {\r\n        var ea = this;\r\n        return Transaction.run(function () {\r\n            var es = new StreamLoop(), s = es.holdLazy(initState), es_out = ea.snapshot(s, f);\r\n            es.loop(es_out);\r\n            return es_out.holdLazy(initState);\r\n        });\r\n    };\r\n    /**\r\n     * Return a stream that outputs only one value: the next event of the\r\n     * input stream, starting from the transaction in which once() was invoked.\r\n     */\r\n    Stream.prototype.once = function () {\r\n        /*\r\n            return Transaction.run(() => {\r\n                const ev = this,\r\n                    out = new StreamWithSend<A>();\r\n                let la : () => void = null;\r\n                la = ev.listen_(out.vertex, (a : A) => {\r\n                    if (la !== null) {\r\n                        out.send_(a);\r\n                        la();\r\n                        la = null;\r\n                    }\r\n                }, false);\r\n                return out;\r\n            });\r\n            */\r\n        // We can't use the implementation above, beacuse deregistering\r\n        // listeners triggers the exception\r\n        // \"send() was invoked before listeners were registered\"\r\n        // We can revisit this another time. For now we will use the less\r\n        // efficient implementation below.\r\n        var me = this;\r\n        return Transaction.run(function () { return me.gate(me.mapTo(false).hold(true)); });\r\n    };\r\n    Stream.prototype.listen = function (h) {\r\n        var _this = this;\r\n        return Transaction.run(function () {\r\n            return _this.listen_(Vertex.NULL, h, false);\r\n        });\r\n    };\r\n    Stream.prototype.listen_ = function (target, h, suppressEarlierFirings) {\r\n        var _this = this;\r\n        if (this.vertex.register(target))\r\n            Transaction.currentTransaction.requestRegen();\r\n        var listener = new Listener(h, target);\r\n        this.listeners.push(listener);\r\n        if (!suppressEarlierFirings && this.firings.length != 0) {\r\n            var firings_1 = this.firings.slice();\r\n            Transaction.currentTransaction.prioritized(target, function () {\r\n                // Anything sent already in this transaction must be sent now so that\r\n                // there's no order dependency between send and listen.\r\n                for (var i = 0; i < firings_1.length; i++)\r\n                    h(firings_1[i]);\r\n            });\r\n        }\r\n        return function () {\r\n            var removed = false;\r\n            for (var i = 0; i < _this.listeners.length; i++) {\r\n                if (_this.listeners[i] == listener) {\r\n                    _this.listeners.splice(i, 1);\r\n                    removed = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (removed)\r\n                _this.vertex.deregister(target);\r\n        };\r\n    };\r\n    /**\r\n     * Fantasy-land Algebraic Data Type Compatability.\r\n     * Stream satisfies the Functor and Monoid Categories (and hence Semigroup)\r\n     * @see {@link https://github.com/fantasyland/fantasy-land} for more info\r\n     */\r\n    //map :: Functor f => f a ~> (a -> b) -> f b\r\n    Stream.prototype['fantasy-land/map'] = function (f) {\r\n        return this.map(f);\r\n    };\r\n    //concat :: Semigroup a => a ~> a -> a\r\n    Stream.prototype['fantasy-land/concat'] = function (a) {\r\n        return this.merge(a, function (left, right) {\r\n            return (Semigroup.test(left)) ? concat(left, right) : left;\r\n        });\r\n    };\r\n    //empty :: Monoid m => () -> m\r\n    Stream.prototype['fantasy-land/empty'] = function () {\r\n        return new Stream();\r\n    };\r\n    return Stream;\r\n}());\r\nvar StreamWithSend = /** @class */ (function (_super) {\r\n    __extends(StreamWithSend, _super);\r\n    function StreamWithSend(vertex) {\r\n        return _super.call(this, vertex) || this;\r\n    }\r\n    StreamWithSend.prototype.setVertex__ = function (vertex) {\r\n        this.vertex = vertex;\r\n    };\r\n    StreamWithSend.prototype.send_ = function (a) {\r\n        var _this = this;\r\n        // We throw this error if we send into FRP logic that has been constructed\r\n        // but nothing is listening to it yet. We need to do it this way because\r\n        // it's the only way to manage memory in a language with no finalizers.\r\n        if (this.vertex.refCount() == 0)\r\n            throw new Error(\"send() was invoked before listeners were registered\");\r\n        if (this.firings.length == 0)\r\n            Transaction.currentTransaction.last(function () {\r\n                _this.firings = [];\r\n            });\r\n        this.firings.push(a);\r\n        var listeners = this.listeners.slice();\r\n        var _loop_1 = function (i) {\r\n            var h = listeners[i].h;\r\n            Transaction.currentTransaction.prioritized(listeners[i].target, function () {\r\n                Transaction.currentTransaction.inCallback++;\r\n                try {\r\n                    h(a);\r\n                    Transaction.currentTransaction.inCallback--;\r\n                }\r\n                catch (err) {\r\n                    Transaction.currentTransaction.inCallback--;\r\n                    throw err;\r\n                }\r\n            });\r\n        };\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    return StreamWithSend;\r\n}(Stream));\r\n/**\r\n * A forward reference for a {@link Stream} equivalent to the Stream that is referenced.\r\n */\r\nvar StreamLoop = /** @class */ (function (_super) {\r\n    __extends(StreamLoop, _super);\r\n    function StreamLoop() {\r\n        var _this = _super.call(this) || this;\r\n        _this.assigned__ = false; // to do: Figure out how to hide this\r\n        _this.vertex.name = \"StreamLoop\";\r\n        if (Transaction.currentTransaction === null)\r\n            throw new Error(\"StreamLoop/CellLoop must be used within an explicit transaction\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * Resolve the loop to specify what the StreamLoop was a forward reference to. It\r\n     * must be invoked inside the same transaction as the place where the StreamLoop is used.\r\n     * This requires you to create an explicit transaction with {@link Transaction#run(Lambda0)}\r\n     * or {@link Transaction#runVoid(Runnable)}.\r\n     */\r\n    StreamLoop.prototype.loop = function (sa_out) {\r\n        var _this = this;\r\n        if (this.assigned__)\r\n            throw new Error(\"StreamLoop looped more than once\");\r\n        this.assigned__ = true;\r\n        this.vertex.addSource(new Source(sa_out.getVertex__(), function () {\r\n            return sa_out.listen_(_this.vertex, function (a) {\r\n                _this.send_(a);\r\n            }, false);\r\n        }));\r\n    };\r\n    return StreamLoop;\r\n}(StreamWithSend));\n\n/**\r\n * A stream that allows values to be pushed into it, acting as an interface between the\r\n * world of I/O and the world of FRP. Code that exports StreamSinks for read-only use\r\n * should downcast to {@link Stream}.\r\n */\r\nvar StreamSink = /** @class */ (function (_super) {\r\n    __extends(StreamSink, _super);\r\n    function StreamSink(f) {\r\n        var _this = _super.call(this) || this;\r\n        if (!f)\r\n            f = (function (l, r) {\r\n                throw new Error(\"send() called more than once per transaction, which isn't allowed. Did you want to combine the events? Then pass a combining function to your StreamSink constructor.\");\r\n            });\r\n        _this.coalescer = new CoalesceHandler(f, _this);\r\n        return _this;\r\n    }\r\n    StreamSink.prototype.send = function (a) {\r\n        var _this = this;\r\n        Transaction.run(function () {\r\n            if (Transaction.currentTransaction.inCallback > 0)\r\n                throw new Error(\"You are not allowed to use send() inside a Sodium callback\");\r\n            _this.coalescer.send_(a);\r\n        });\r\n    };\r\n    return StreamSink;\r\n}(StreamWithSend));\n\n/**\r\n * A forward reference for a {@link Cell} equivalent to the Cell that is referenced.\r\n */\r\nvar CellLoop = /** @class */ (function (_super) {\r\n    __extends(CellLoop, _super);\r\n    function CellLoop() {\r\n        return _super.call(this, null, new StreamLoop()) || this;\r\n    }\r\n    /**\r\n     * Resolve the loop to specify what the CellLoop was a forward reference to. It\r\n     * must be invoked inside the same transaction as the place where the CellLoop is used.\r\n     * This requires you to create an explicit transaction with {@link Transaction#run(Lambda0)}\r\n     * or {@link Transaction#runVoid(Runnable)}.\r\n     */\r\n    CellLoop.prototype.loop = function (a_out) {\r\n        var me = this;\r\n        Transaction.run(function () {\r\n            me.getStream__().loop(a_out.getStream__());\r\n            me.lazyInitValue = a_out.sampleLazy();\r\n        });\r\n    };\r\n    CellLoop.prototype.sampleNoTrans__ = function () {\r\n        if (!this.getStream__().assigned__)\r\n            throw new Error(\"CellLoop sampled before it was looped\");\r\n        return _super.prototype.sampleNoTrans__.call(this);\r\n    };\r\n    return CellLoop;\r\n}(LazyCell));\n\n/**\r\n * A cell that allows values to be pushed into it, acting as an interface between the\r\n * world of I/O and the world of FRP. Code that exports CellSinks for read-only use\r\n * should downcast to {@link Cell}.\r\n */\r\nvar CellSink = /** @class */ (function (_super) {\r\n    __extends(CellSink, _super);\r\n    /**\r\n     * Construct a writable cell with the specified initial value. If multiple values are\r\n     * sent in the same transaction, the specified function is used to combine them.\r\n     *\r\n     * If the function is not supplied, then an exception will be thrown in this case.\r\n     */\r\n    function CellSink(initValue, f) {\r\n        return _super.call(this, initValue, new StreamSink(f)) || this;\r\n    }\r\n    /**\r\n     * Send a value, modifying the value of the cell. send(A) may not be used inside\r\n     * handlers registered with {@link Stream#listen(Handler)} or {@link Cell#listen(Handler)}.\r\n     * An exception will be thrown, because CellSink is for interfacing I/O to FRP only.\r\n     * You are not meant to use this to define your own primitives.\r\n     * @param a Value to push into the cell.\r\n     */\r\n    CellSink.prototype.send = function (a) {\r\n        this.getStream__().send(a);\r\n    };\r\n    return CellSink;\r\n}(Cell));\n\nvar Tuple2 = /** @class */ (function () {\r\n    function Tuple2(a, b) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n    return Tuple2;\r\n}());\n\n/**\r\n * An interface for implementations of FRP timer systems.\r\n */\r\nvar TimerSystemImpl = /** @class */ (function () {\r\n    function TimerSystemImpl() {\r\n    }\r\n    return TimerSystemImpl;\r\n}());\r\nvar nextSeq = 0;\r\nvar Event = /** @class */ (function () {\r\n    function Event(t, sAlarm) {\r\n        this.t = t;\r\n        this.sAlarm = sAlarm;\r\n        this.seq = ++nextSeq;\r\n    }\r\n    return Event;\r\n}());\r\nvar TimerSystem = /** @class */ (function () {\r\n    function TimerSystem(impl) {\r\n        var _this = this;\r\n        this.eventQueue = new BSTree(function (a, b) {\r\n            if (a.t < b.t)\r\n                return -1;\r\n            if (a.t > b.t)\r\n                return 1;\r\n            if (a.seq < b.seq)\r\n                return -1;\r\n            if (a.seq > b.seq)\r\n                return 1;\r\n            return 0;\r\n        });\r\n        Transaction.run(function () {\r\n            _this.impl = impl;\r\n            _this.tMinimum = 0;\r\n            var timeSnk = new CellSink(impl.now());\r\n            _this.time = timeSnk;\r\n            // A dummy listener to time to keep it alive even when there are no other listeners.\r\n            _this.time.listen(function (t) { });\r\n            Transaction.onStart(function () {\r\n                // Ensure the time is always increasing from the FRP's point of view.\r\n                var t = _this.tMinimum = Math.max(_this.tMinimum, impl.now());\r\n                var _loop_1 = function () {\r\n                    var ev = null;\r\n                    if (!_this.eventQueue.isEmpty()) {\r\n                        var mev = _this.eventQueue.minimum();\r\n                        if (mev.t <= t) {\r\n                            ev = mev;\r\n                            // TO DO: Detect infinite loops!\r\n                        }\r\n                    }\r\n                    if (ev != null) {\r\n                        timeSnk.send(ev.t);\r\n                        Transaction.run(function () { return ev.sAlarm.send_(ev.t); });\r\n                    }\r\n                    else\r\n                        return \"break\";\r\n                };\r\n                // Pop and execute all events earlier than or equal to t (the current time).\r\n                while (true) {\r\n                    var state_1 = _loop_1();\r\n                    if (state_1 === \"break\")\r\n                        break;\r\n                }\r\n                timeSnk.send(t);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * A timer that fires at the specified time, which can be null, meaning\r\n     * that the alarm is not set.\r\n     */\r\n    TimerSystem.prototype.at = function (tAlarm) {\r\n        var _this = this;\r\n        var current = null, cancelCurrent = null, active = false, tAl = null, sampled = false;\r\n        var sAlarm = new StreamWithSend(null), updateTimer = function () {\r\n            if (cancelCurrent !== null) {\r\n                cancelCurrent();\r\n                _this.eventQueue.remove(current);\r\n            }\r\n            cancelCurrent = null;\r\n            current = null;\r\n            if (active) {\r\n                if (!sampled) {\r\n                    sampled = true;\r\n                    tAl = tAlarm.sampleNoTrans__();\r\n                }\r\n                if (tAl !== null) {\r\n                    current = new Event(tAl, sAlarm);\r\n                    _this.eventQueue.add(current);\r\n                    cancelCurrent = _this.impl.setTimer(tAl, function () {\r\n                        // Correction to ensure the clock time appears to be >= the\r\n                        // alarm time. It can be a few milliseconds early, and\r\n                        // this breaks things otherwise, because it doesn't think\r\n                        // it's time to fire the alarm yet.\r\n                        _this.tMinimum = Math.max(_this.tMinimum, tAl);\r\n                        // Open and close a transaction to trigger queued\r\n                        // events to run.\r\n                        Transaction.run(function () { });\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        sAlarm.setVertex__(new Vertex(\"at\", 0, [\r\n            new Source(tAlarm.getVertex__(), function () {\r\n                active = true;\r\n                sampled = false;\r\n                Transaction.currentTransaction.prioritized(sAlarm.getVertex__(), updateTimer);\r\n                var kill = tAlarm.getStream__().listen_(sAlarm.getVertex__(), function (oAlarm) {\r\n                    tAl = oAlarm;\r\n                    sampled = true;\r\n                    updateTimer();\r\n                }, false);\r\n                return function () {\r\n                    active = false;\r\n                    updateTimer();\r\n                    kill();\r\n                };\r\n            })\r\n        ]));\r\n        return sAlarm;\r\n    };\r\n    return TimerSystem;\r\n}());\n\n/**\r\n * A timer system implementation using seconds as the time unit.\r\n */\r\nvar SecondsTimerSystem = /** @class */ (function (_super) {\r\n    __extends(SecondsTimerSystem, _super);\r\n    function SecondsTimerSystem() {\r\n        return _super.call(this, new SecondsTimerSystemImpl()) || this;\r\n    }\r\n    return SecondsTimerSystem;\r\n}(TimerSystem));\r\nvar SecondsTimerSystemImpl = /** @class */ (function (_super) {\r\n    __extends(SecondsTimerSystemImpl, _super);\r\n    function SecondsTimerSystemImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Set a timer that will execute the specified callback at the specified time.\r\n     * @return A function that can be used to cancel the timer.\r\n     */\r\n    SecondsTimerSystemImpl.prototype.setTimer = function (t, callback) {\r\n        var timeout = setTimeout(callback, Math.max((t - this.now()) * 1000, 0));\r\n        return function () { clearTimeout(timeout); };\r\n    };\r\n    /**\r\n     * Return the current clock time.\r\n     */\r\n    SecondsTimerSystemImpl.prototype.now = function () {\r\n        return Date.now() * 0.001;\r\n    };\r\n    return SecondsTimerSystemImpl;\r\n}(TimerSystemImpl));\n\n/**\r\n * A timer system implementation using milliseconds as the time unit.\r\n */\r\nvar MillisecondsTimerSystem = /** @class */ (function (_super) {\r\n    __extends(MillisecondsTimerSystem, _super);\r\n    function MillisecondsTimerSystem() {\r\n        return _super.call(this, new MillisecondsTimerSystemImpl()) || this;\r\n    }\r\n    return MillisecondsTimerSystem;\r\n}(TimerSystem));\r\nvar MillisecondsTimerSystemImpl = /** @class */ (function (_super) {\r\n    __extends(MillisecondsTimerSystemImpl, _super);\r\n    function MillisecondsTimerSystemImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Set a timer that will execute the specified callback at the specified time.\r\n     * @return A function that can be used to cancel the timer.\r\n     */\r\n    MillisecondsTimerSystemImpl.prototype.setTimer = function (t, callback) {\r\n        var timeout = setTimeout(callback, Math.max(t - this.now(), 0));\r\n        return function () { clearTimeout(timeout); };\r\n    };\r\n    /**\r\n     * Return the current clock time.\r\n     */\r\n    MillisecondsTimerSystemImpl.prototype.now = function () {\r\n        return Date.now();\r\n    };\r\n    return MillisecondsTimerSystemImpl;\r\n}(TimerSystemImpl));\n\nvar IOAction = /** @class */ (function () {\r\n    function IOAction() {\r\n    }\r\n    /*!\r\n     * Convert a function that performs asynchronous I/O taking input A\r\n     * and returning a value of type B into an I/O action of type\r\n     * (sa : Stream<A>) => Stream<B>\r\n     */\r\n    IOAction.fromAsync = function (performIO) {\r\n        return function (sa) {\r\n            var out = new StreamWithSend(null);\r\n            out.setVertex__(new Vertex(\"map\", 0, [\r\n                new Source(sa.getVertex__(), function () {\r\n                    return sa.listen_(out.getVertex__(), function (a) {\r\n                        performIO(a, function (b) {\r\n                            Transaction.run(function () {\r\n                                out.send_(b);\r\n                            });\r\n                        });\r\n                    }, false);\r\n                })\r\n            ]));\r\n            return out;\r\n        };\r\n    };\r\n    return IOAction;\r\n}());\n\nexport { lambda1, lambda2, lambda3, lambda4, lambda5, lambda6, Stream, StreamLoop, StreamSink, Cell, CellLoop, CellSink, Transaction, Tuple2, Unit, Operational, getTotalRegistrations, Vertex, TimerSystemImpl, TimerSystem, SecondsTimerSystem, MillisecondsTimerSystem, IOAction };\n//# sourceMappingURL=sodium.esm.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sodiumjs/dist/sodium.esm.js\n// module id = 445\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\n//\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\n//\n// Orginal javascript code was by Mauricio Santos\n//\nvar _arrays = require(\"./arrays\");\nexports.arrays = _arrays;\nvar Bag_1 = require(\"./Bag\");\nexports.Bag = Bag_1.default;\nvar BSTree_1 = require(\"./BSTree\");\nexports.BSTree = BSTree_1.default;\nvar BSTreeKV_1 = require(\"./BSTreeKV\");\nexports.BSTreeKV = BSTreeKV_1.default;\nvar Dictionary_1 = require(\"./Dictionary\");\nexports.Dictionary = Dictionary_1.default;\nvar Heap_1 = require(\"./Heap\");\nexports.Heap = Heap_1.default;\nvar LinkedDictionary_1 = require(\"./LinkedDictionary\");\nexports.LinkedDictionary = LinkedDictionary_1.default;\nvar LinkedList_1 = require(\"./LinkedList\");\nexports.LinkedList = LinkedList_1.default;\nvar MultiDictionary_1 = require(\"./MultiDictionary\");\nexports.MultiDictionary = MultiDictionary_1.default;\nvar FactoryDictionary_1 = require(\"./FactoryDictionary\");\nexports.FactoryDictionary = FactoryDictionary_1.default;\nvar FactoryDictionary_2 = require(\"./FactoryDictionary\");\nexports.DefaultDictionary = FactoryDictionary_2.default;\nvar Queue_1 = require(\"./Queue\");\nexports.Queue = Queue_1.default;\nvar PriorityQueue_1 = require(\"./PriorityQueue\");\nexports.PriorityQueue = PriorityQueue_1.default;\nvar Set_1 = require(\"./Set\");\nexports.Set = Set_1.default;\nvar Stack_1 = require(\"./Stack\");\nexports.Stack = Stack_1.default;\nvar MultiRootTree_1 = require(\"./MultiRootTree\");\nexports.MultiRootTree = MultiRootTree_1.default;\nvar _util = require(\"./util\");\nexports.util = _util;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/index.js\n// module id = 446\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Dictionary_1 = require(\"./Dictionary\");\nvar Set_1 = require(\"./Set\");\nvar Bag = /** @class */ (function () {\n    /**\n     * Creates an empty bag.\n     * @class <p>A bag is a special kind of set in which members are\n     * allowed to appear more than once.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to unique strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert elements to strings. If the elements aren't strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Bag(toStrFunction) {\n        this.toStrF = toStrFunction || util.defaultToString;\n        this.dictionary = new Dictionary_1.default(this.toStrF);\n        this.nElements = 0;\n    }\n    /**\n    * Adds nCopies of the specified object to this bag.\n    * @param {Object} element element to add.\n    * @param {number=} nCopies the number of copies to add, if this argument is\n    * undefined 1 copy is added.\n    * @return {boolean} true unless element is undefined.\n    */\n    Bag.prototype.add = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            var node = {\n                value: element,\n                copies: nCopies\n            };\n            this.dictionary.setValue(element, node);\n        }\n        else {\n            this.dictionary.getValue(element).copies += nCopies;\n        }\n        this.nElements += nCopies;\n        return true;\n    };\n    /**\n    * Counts the number of copies of the specified object in this bag.\n    * @param {Object} element the object to search for..\n    * @return {number} the number of copies of the object, 0 if not found\n    */\n    Bag.prototype.count = function (element) {\n        if (!this.contains(element)) {\n            return 0;\n        }\n        else {\n            return this.dictionary.getValue(element).copies;\n        }\n    };\n    /**\n     * Returns true if this bag contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this bag contains the specified element,\n     * false otherwise.\n     */\n    Bag.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n    * Removes nCopies of the specified object to this bag.\n    * If the number of copies to remove is greater than the actual number\n    * of copies in the Bag, all copies are removed.\n    * @param {Object} element element to remove.\n    * @param {number=} nCopies the number of copies to remove, if this argument is\n    * undefined 1 copy is removed.\n    * @return {boolean} true if at least 1 element was removed.\n    */\n    Bag.prototype.remove = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            var node = this.dictionary.getValue(element);\n            if (nCopies > node.copies) {\n                this.nElements -= node.copies;\n            }\n            else {\n                this.nElements -= nCopies;\n            }\n            node.copies -= nCopies;\n            if (node.copies <= 0) {\n                this.dictionary.remove(element);\n            }\n            return true;\n        }\n    };\n    /**\n     * Returns an array containing all of the elements in this big in arbitrary order,\n     * including multiple copies.\n     * @return {Array} an array containing all of the elements in this bag.\n     */\n    Bag.prototype.toArray = function () {\n        var a = [];\n        var values = this.dictionary.values();\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var node = values_1[_i];\n            var element = node.value;\n            var copies = node.copies;\n            for (var j = 0; j < copies; j++) {\n                a.push(element);\n            }\n        }\n        return a;\n    };\n    /**\n     * Returns a set of unique elements in this bag.\n     * @return {collections.Set<T>} a set of unique elements in this bag.\n     */\n    Bag.prototype.toSet = function () {\n        var toret = new Set_1.default(this.toStrF);\n        var elements = this.dictionary.values();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var ele = elements_1[_i];\n            var value = ele.value;\n            toret.add(value);\n        }\n        return toret;\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this bag, including multiple copies.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Bag.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            var value = v.value;\n            var copies = v.copies;\n            for (var i = 0; i < copies; i++) {\n                if (callback(value) === false) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    };\n    /**\n     * Returns the number of elements in this bag.\n     * @return {number} the number of elements in this bag.\n     */\n    Bag.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this bag contains no elements.\n     * @return {boolean} true if this bag contains no elements.\n     */\n    Bag.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Removes all of the elements from this bag.\n     */\n    Bag.prototype.clear = function () {\n        this.nElements = 0;\n        this.dictionary.clear();\n    };\n    return Bag;\n}()); // End of bag\nexports.default = Bag;\n//# sourceMappingURL=Bag.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/Bag.js\n// module id = 447\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BSTreeKV_1 = require(\"./BSTreeKV\");\n/**\n * Special-case of the binary search tree in which the search key is equal to the element type.\n * This definition is suitable when the element type can not be split between what defines its order\n * and what does not (eg. primitive types as opposed to indexed records).\n *\n * The table below shows some use-case examples for both interfaces:\n *\n *           element type              |  most suitable interface\n * ------------------------------------|----------------------------\n *    number                           |  BSTree<number>\n *    string                           |  BSTree<string>\n * { order: number, data: string }     |  BSTreeKV<{order: number}, {order: number, data: string}>\n *\n * @see BSTreeKV\n */\nvar BSTree = /** @class */ (function (_super) {\n    __extends(BSTree, _super);\n    function BSTree() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BSTree;\n}(BSTreeKV_1.default));\nexports.default = BSTree;\n//# sourceMappingURL=BSTree.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/BSTree.js\n// module id = 448\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dictionary_1 = require(\"./Dictionary\");\nvar util = require(\"./util\");\n/**\n * This class is used by the LinkedDictionary Internally\n * Has to be a class, not an interface, because it needs to have\n * the 'unlink' function defined.\n */\nvar LinkedDictionaryPair = /** @class */ (function () {\n    function LinkedDictionaryPair(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    LinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return LinkedDictionaryPair;\n}());\n/**\n * The head and tail elements of the list have null key and value properties but they\n * usually link to normal nodes.\n */\nvar HeadOrTailLinkedDictionaryPair = /** @class */ (function () {\n    function HeadOrTailLinkedDictionaryPair() {\n        this.key = null;\n        this.value = null;\n    }\n    HeadOrTailLinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return HeadOrTailLinkedDictionaryPair;\n}());\nfunction isHeadOrTailLinkedDictionaryPair(p) {\n    return p.next === null;\n}\nvar LinkedDictionary = /** @class */ (function (_super) {\n    __extends(LinkedDictionary, _super);\n    function LinkedDictionary(toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.head = new HeadOrTailLinkedDictionaryPair();\n        _this.tail = new HeadOrTailLinkedDictionaryPair();\n        _this.head.next = _this.tail;\n        _this.tail.prev = _this.head;\n        return _this;\n    }\n    /**\n     * Inserts the new node to the 'tail' of the list, updating the\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\n     * to the end.\n     */\n    LinkedDictionary.prototype.appendToTail = function (entry) {\n        var lastNode = this.tail.prev;\n        lastNode.next = entry;\n        entry.prev = lastNode;\n        entry.next = this.tail;\n        this.tail.prev = entry;\n    };\n    /**\n     * Retrieves a linked dictionary from the table internally\n     */\n    LinkedDictionary.prototype.getLinkedDictionaryPair = function (key) {\n        if (util.isUndefined(key)) {\n            return undefined;\n        }\n        var k = '$' + this.toStr(key);\n        var pair = (this.table[k]);\n        return pair;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    LinkedDictionary.prototype.getValue = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * Also, if a value is present for this key, the entry is removed from the\n     * insertion ordering.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    LinkedDictionary.prototype.remove = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            _super.prototype.remove.call(this, key); // This will remove it from the table\n            pair.unlink(); // This will unlink it from the chain\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n    * Removes all mappings from this LinkedDictionary.\n    * @this {collections.LinkedDictionary}\n    */\n    LinkedDictionary.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    };\n    /**\n     * Internal function used when updating an existing KeyValue pair.\n     * It places the new value indexed by key into the table, but maintains\n     * its place in the linked ordering.\n     */\n    LinkedDictionary.prototype.replace = function (oldPair, newPair) {\n        var k = '$' + this.toStr(newPair.key);\n        // set the new Pair's links to existingPair's links\n        newPair.next = oldPair.next;\n        newPair.prev = oldPair.prev;\n        // Delete Existing Pair from the table, unlink it from chain.\n        // As a result, the nElements gets decremented by this operation\n        this.remove(oldPair.key);\n        // Link new Pair in place of where oldPair was,\n        // by pointing the old pair's neighbors to it.\n        newPair.prev.next = newPair;\n        newPair.next.prev = newPair;\n        this.table[k] = newPair;\n        // To make up for the fact that the number of elements was decremented,\n        // We need to increase it by one.\n        ++this.nElements;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * Updating of a key that already exists maintains its place in the\n     * insertion order into the map.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    LinkedDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var existingPair = this.getLinkedDictionaryPair(key);\n        var newPair = new LinkedDictionaryPair(key, value);\n        var k = '$' + this.toStr(key);\n        // If there is already an element for that key, we\n        // keep it's place in the LinkedList\n        if (!util.isUndefined(existingPair)) {\n            this.replace(existingPair, newPair);\n            return existingPair.value;\n        }\n        else {\n            this.appendToTail(newPair);\n            this.table[k] = newPair;\n            ++this.nElements;\n            return undefined;\n        }\n    };\n    /**\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\n     * by insertion order.\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.keys = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(key);\n        });\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\n     * insertion order.\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.values = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(value);\n        });\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this LinkedDictionary. It is done in the order of insertion\n    * into the LinkedDictionary\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    LinkedDictionary.prototype.forEach = function (callback) {\n        var crawlNode = this.head.next;\n        while (!isHeadOrTailLinkedDictionaryPair(crawlNode)) {\n            var ret = callback(crawlNode.key, crawlNode.value);\n            if (ret === false) {\n                return;\n            }\n            crawlNode = crawlNode.next;\n        }\n    };\n    return LinkedDictionary;\n}(Dictionary_1.default)); // End of LinkedDictionary\nexports.default = LinkedDictionary;\n// /**\n//  * Returns true if this dictionary is equal to the given dictionary.\n//  * Two dictionaries are equal if they contain the same mappings.\n//  * @param {collections.Dictionary} other the other dictionary.\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\n//  * function used to check if two values are equal.\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\n//  */\n// collections.Dictionary.prototype.equals = function(other,valuesEqualFunction) {\n// \tconst eqF = valuesEqualFunction || collections.defaultEquals;\n// \tif(!(other instanceof collections.Dictionary)){\n// \t\treturn false;\n// \t}\n// \tif(this.size() !== other.size()){\n// \t\treturn false;\n// \t}\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\n// }\n//# sourceMappingURL=LinkedDictionary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/LinkedDictionary.js\n// module id = 449\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Dictionary_1 = require(\"./Dictionary\");\nvar arrays = require(\"./arrays\");\nvar MultiDictionary = /** @class */ (function () {\n    /**\n     * Creates an empty multi dictionary.\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\n     * multiple values against each key. Setting a value into the dictionary will\n     * add the value to an array at that key. Getting a key will return an array,\n     * holding all the values set to that key.\n     * You can configure to allow duplicates in the values.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to strings must be\n     * provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n       *  return pet.name;\n       * }\n     * </pre>\n     * <p>If the values are custom objects a function to check equality between values\n     * must be provided. Example:</p>\n     *\n     * <pre>\n     * function petsAreEqualByAge(pet1,pet2) {\n       *  return pet1.age===pet2.age;\n       * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\n     * function to check if two values are equal.\n     *\n     * @param allowDuplicateValues\n     */\n    function MultiDictionary(toStrFunction, valuesEqualsFunction, allowDuplicateValues) {\n        if (allowDuplicateValues === void 0) { allowDuplicateValues = false; }\n        this.dict = new Dictionary_1.default(toStrFunction);\n        this.equalsF = valuesEqualsFunction || util.defaultEquals;\n        this.allowDuplicate = allowDuplicateValues;\n    }\n    /**\n    * Returns an array holding the values to which this dictionary maps\n    * the specified key.\n    * Returns an empty array if this dictionary contains no mappings for this key.\n    * @param {Object} key key whose associated values are to be returned.\n    * @return {Array} an array holding the values to which this dictionary maps\n    * the specified key.\n    */\n    MultiDictionary.prototype.getValue = function (key) {\n        var values = this.dict.getValue(key);\n        if (util.isUndefined(values)) {\n            return [];\n        }\n        return arrays.copy(values);\n    };\n    /**\n     * Adds the value to the array associated with the specified key, if\n     * it is not already present.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value the value to add to the array at the key\n     * @return {boolean} true if the value was not already associated with that key.\n     */\n    MultiDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return false;\n        }\n        var array = this.dict.getValue(key);\n        if (util.isUndefined(array)) {\n            this.dict.setValue(key, [value]);\n            return true;\n        }\n        if (!this.allowDuplicate) {\n            if (arrays.contains(array, value, this.equalsF)) {\n                return false;\n            }\n        }\n        array.push(value);\n        return true;\n    };\n    /**\n     * Removes the specified values from the array of values associated with the\n     * specified key. If a value isn't given, all values associated with the specified\n     * key are removed.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @param {Object=} value optional argument to specify the value to remove\n     * from the array associated with the specified key.\n     * @return {*} true if the dictionary changed, false if the key doesn't exist or\n     * if the specified value isn't associated with the specified key.\n     */\n    MultiDictionary.prototype.remove = function (key, value) {\n        if (util.isUndefined(value)) {\n            var v = this.dict.remove(key);\n            return !util.isUndefined(v);\n        }\n        var array = this.dict.getValue(key);\n        if (!util.isUndefined(array) && arrays.remove(array, value, this.equalsF)) {\n            if (array.length === 0) {\n                this.dict.remove(key);\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    MultiDictionary.prototype.keys = function () {\n        return this.dict.keys();\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    MultiDictionary.prototype.values = function () {\n        var values = this.dict.values();\n        var array = [];\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var v = values_1[_i];\n            for (var _a = 0, v_1 = v; _a < v_1.length; _a++) {\n                var w = v_1[_a];\n                array.push(w);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns true if this dictionary at least one value associatted the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary at least one value associatted\n     * the specified key.\n     */\n    MultiDictionary.prototype.containsKey = function (key) {\n        return this.dict.containsKey(key);\n    };\n    /**\n     * Removes all mappings from this dictionary.\n     */\n    MultiDictionary.prototype.clear = function () {\n        this.dict.clear();\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    MultiDictionary.prototype.size = function () {\n        return this.dict.size();\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    MultiDictionary.prototype.isEmpty = function () {\n        return this.dict.isEmpty();\n    };\n    return MultiDictionary;\n}()); // end of multi dictionary\nexports.default = MultiDictionary;\n//# sourceMappingURL=MultiDictionary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/MultiDictionary.js\n// module id = 450\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Heap_1 = require(\"./Heap\");\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * Creates an empty priority queue.\n     * @class <p>In a priority queue each element is associated with a \"priority\",\n     * elements are dequeued in highest-priority-first order (the elements with the\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\n     * If the inserted elements are custom objects a compare function must be provided,\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two element priorities. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function PriorityQueue(compareFunction) {\n        this.heap = new Heap_1.default(util.reverseCompareFunction(compareFunction));\n    }\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.add = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Retrieves and removes the highest priority element of this queue.\n     * @return {*} the the highest priority element of this queue,\n     *  or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        if (this.heap.size() !== 0) {\n            var el = this.heap.peek();\n            this.heap.removeRoot();\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the highest priority element of this queue.\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.peek = function () {\n        return this.heap.peek();\n    };\n    /**\n     * Returns true if this priority queue contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this priority queue contains the specified element,\n     * false otherwise.\n     */\n    PriorityQueue.prototype.contains = function (element) {\n        return this.heap.contains(element);\n    };\n    /**\n     * Checks if this priority queue is empty.\n     * @return {boolean} true if and only if this priority queue contains no items; false\n     * otherwise.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.heap.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this priority queue.\n     * @return {number} the number of elements in this priority queue.\n     */\n    PriorityQueue.prototype.size = function () {\n        return this.heap.size();\n    };\n    /**\n     * Removes all of the elements from this priority queue.\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.heap.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    PriorityQueue.prototype.forEach = function (callback) {\n        this.heap.forEach(callback);\n    };\n    return PriorityQueue;\n}()); // end of priority queue\nexports.default = PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/PriorityQueue.js\n// module id = 451\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList_1 = require(\"./LinkedList\");\nvar Stack = /** @class */ (function () {\n    /**\n     * Creates an empty Stack.\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\n     * element added to the stack will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Stack() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.push = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.add = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Removes the object at the top of this stack and returns that object.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.pop = function () {\n        return this.list.removeElementAtIndex(0);\n    };\n    /**\n     * Looks at the object at the top of this stack without removing it from the\n     * stack.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.peek = function () {\n        return this.list.first();\n    };\n    /**\n     * Returns the number of elements in this stack.\n     * @return {number} the number of elements in this stack.\n     */\n    Stack.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this stack contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this stack contains the specified element,\n     * false otherwise.\n     */\n    Stack.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this stack is empty.\n     * @return {boolean} true if and only if this stack contains no items; false\n     * otherwise.\n     */\n    Stack.prototype.isEmpty = function () {\n        return this.list.isEmpty();\n    };\n    /**\n     * Removes all of the elements from this stack.\n     */\n    Stack.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this stack in\n     * LIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Stack.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Stack;\n}()); // End of stack\nexports.default = Stack;\n//# sourceMappingURL=Stack.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/Stack.js\n// module id = 452\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"BEFORE\"] = 0] = \"BEFORE\";\n    Direction[Direction[\"AFTER\"] = 1] = \"AFTER\";\n    Direction[Direction[\"INSIDE_AT_END\"] = 2] = \"INSIDE_AT_END\";\n    Direction[Direction[\"INSIDE_AT_START\"] = 3] = \"INSIDE_AT_START\";\n})(Direction || (Direction = {}));\nvar MultiRootTree = /** @class */ (function () {\n    function MultiRootTree(rootIds, nodes) {\n        if (rootIds === void 0) { rootIds = []; }\n        if (nodes === void 0) { nodes = {}; }\n        this.rootIds = rootIds;\n        this.nodes = nodes;\n        this.initRootIds();\n        this.initNodes();\n    }\n    MultiRootTree.prototype.initRootIds = function () {\n        for (var _i = 0, _a = this.rootIds; _i < _a.length; _i++) {\n            var rootId = _a[_i];\n            this.createEmptyNodeIfNotExist(rootId);\n        }\n    };\n    MultiRootTree.prototype.initNodes = function () {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var _i = 0, _a = this.nodes[nodeKey]; _i < _a.length; _i++) {\n                    var nodeListItem = _a[_i];\n                    this.createEmptyNodeIfNotExist(nodeListItem);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.createEmptyNodeIfNotExist = function (nodeKey) {\n        if (!this.nodes[nodeKey]) {\n            this.nodes[nodeKey] = [];\n        }\n    };\n    MultiRootTree.prototype.getRootIds = function () {\n        var clone = this.rootIds.slice();\n        return clone;\n    };\n    MultiRootTree.prototype.getNodes = function () {\n        var clone = {};\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                clone[nodeKey] = this.nodes[nodeKey].slice();\n            }\n        }\n        return clone;\n    };\n    MultiRootTree.prototype.getObject = function () {\n        return {\n            rootIds: this.getRootIds(),\n            nodes: this.getNodes(),\n        };\n    };\n    MultiRootTree.prototype.toObject = function () {\n        return this.getObject();\n    };\n    MultiRootTree.prototype.flatten = function () {\n        var _this = this;\n        var extraPropsObject = [];\n        for (var i = 0; i < this.rootIds.length; i++) {\n            var rootId = this.rootIds[i];\n            extraPropsObject.push({\n                id: rootId,\n                level: 0,\n                hasParent: false,\n                childrenCount: 0,\n            });\n            traverse(rootId, this.nodes, extraPropsObject, 0);\n        }\n        for (var _i = 0, extraPropsObject_1 = extraPropsObject; _i < extraPropsObject_1.length; _i++) {\n            var o = extraPropsObject_1[_i];\n            o.childrenCount = countChildren(o.id);\n        }\n        return extraPropsObject;\n        function countChildren(id) {\n            if (!_this.nodes[id]) {\n                return 0;\n            }\n            else {\n                var childrenCount = _this.nodes[id].length;\n                return childrenCount;\n            }\n        }\n        function traverse(startId, nodes, returnArray, level) {\n            if (level === void 0) { level = 0; }\n            if (!startId || !nodes || !returnArray || !nodes[startId]) {\n                return;\n            }\n            level++;\n            var idsList = nodes[startId];\n            for (var i = 0; i < idsList.length; i++) {\n                var id = idsList[i];\n                returnArray.push({ id: id, level: level, hasParent: true });\n                traverse(id, nodes, returnArray, level);\n            }\n            level--;\n        }\n    };\n    MultiRootTree.prototype.moveIdBeforeId = function (moveId, beforeId) {\n        return this.moveId(moveId, beforeId, Direction.BEFORE);\n    };\n    MultiRootTree.prototype.moveIdAfterId = function (moveId, afterId) {\n        return this.moveId(moveId, afterId, Direction.AFTER);\n    };\n    MultiRootTree.prototype.moveIdIntoId = function (moveId, insideId, atStart) {\n        if (atStart === void 0) { atStart = true; }\n        if (atStart) {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_START);\n        }\n        else {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_END);\n        }\n    };\n    MultiRootTree.prototype.swapRootIdWithRootId = function (rootId, withRootId) {\n        var leftIndex = this.findRootId(rootId);\n        var rightIndex = this.findRootId(withRootId);\n        this.swapRootPositionWithRootPosition(leftIndex, rightIndex);\n    };\n    MultiRootTree.prototype.swapRootPositionWithRootPosition = function (swapRootPosition, withRootPosition) {\n        var temp = this.rootIds[withRootPosition];\n        this.rootIds[withRootPosition] = this.rootIds[swapRootPosition];\n        this.rootIds[swapRootPosition] = temp;\n    };\n    MultiRootTree.prototype.deleteId = function (id) {\n        this.rootDeleteId(id);\n        this.nodeAndSubNodesDelete(id);\n        this.nodeRefrencesDelete(id);\n    };\n    MultiRootTree.prototype.insertIdBeforeId = function (beforeId, insertId) {\n        var foundRootIdIndex = this.findRootId(beforeId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdAfterId = function (belowId, insertId) {\n        var foundRootIdIndex = this.findRootId(belowId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex + 1);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, belowId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex + 1);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdIntoId = function (insideId, insertId) {\n        this.nodeInsertAtEnd(insideId, insertId);\n        this.nodes[insertId] = [];\n    };\n    MultiRootTree.prototype.insertIdIntoRoot = function (id, position) {\n        if (position === undefined) {\n            this.rootInsertAtEnd(id);\n        }\n        else {\n            if (position < 0) {\n                var length_1 = this.rootIds.length;\n                this.rootIds.splice((position + length_1 + 1), 0, id);\n            }\n            else {\n                this.rootIds.splice(position, 0, id);\n            }\n        }\n        this.nodes[id] = this.nodes[id] || [];\n    };\n    MultiRootTree.prototype.insertIdIntoNode = function (nodeKey, id, position) {\n        this.nodes[nodeKey] = this.nodes[nodeKey] || [];\n        this.nodes[id] = this.nodes[id] || [];\n        if (position === undefined) {\n            this.nodeInsertAtEnd(nodeKey, id);\n        }\n        else {\n            if (position < 0) {\n                var length_2 = this.nodes[nodeKey].length;\n                this.nodes[nodeKey].splice((position + length_2 + 1), 0, id);\n            }\n            else {\n                this.nodes[nodeKey].splice(position, 0, id);\n            }\n        }\n    };\n    MultiRootTree.prototype.moveId = function (moveId, beforeId, direction) {\n        var sourceId = moveId;\n        var sourceRootIndex = this.findRootId(sourceId);\n        var sourceNodeKey;\n        var sourceNodeIdIndex;\n        if (this.nodes[beforeId]) {\n            sourceNodeKey = beforeId;\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                sourceNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        var targetId = beforeId;\n        var targetRootIndex = this.findRootId(targetId);\n        var targetNodeKey;\n        var targetNodeIdIndex;\n        if (this.nodes[beforeId]) {\n            targetNodeKey = beforeId;\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                targetNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        if (sourceRootIndex > -1) {\n            if (targetRootIndex > -1) {\n                // moving root to root\n                // console.log(`Moving ROOT to ROOT`);\n                // console.log(`RootIds:`);\n                // console.log(this.rootIds);\n                // console.log(`TargetIndex=${targetRootIndex}, SourceIndex=${sourceRootIndex}`);\n                // console.log(`TargetId=${targetId}, SourceId=${sourceId}`);\n                this.rootDelete(sourceRootIndex); // indexes change now\n                if (targetRootIndex > sourceRootIndex) {\n                    targetRootIndex--;\n                }\n                else {\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving root (source) ABOVE node (target)\n                // will remove one entry from roots\n                this.rootDelete(sourceRootIndex);\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (targetRootIndex > -1) {\n                // moving node (source) ABOVE root (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            // this.nodeInsertId(nodeKey, sourceId, index);\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving node (source) ABOVE node (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.swapArrayElements = function (arr, indexA, indexB) {\n        var temp = arr[indexA];\n        arr[indexA] = arr[indexB];\n        arr[indexB] = temp;\n        return arr;\n    };\n    MultiRootTree.prototype.rootDeleteId = function (id) {\n        var index = this.findRootId(id);\n        if (index > -1) {\n            this.rootDelete(index);\n        }\n    };\n    MultiRootTree.prototype.nodeAndSubNodesDelete = function (nodeKey) {\n        var toDeleteLater = [];\n        for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n            var id = this.nodes[nodeKey][i];\n            this.nodeAndSubNodesDelete(id);\n            toDeleteLater.push(nodeKey);\n        }\n        this.nodeDelete(nodeKey);\n        for (var i = 0; i < toDeleteLater.length; i++) {\n            this.nodeDelete(toDeleteLater[i]);\n        }\n    };\n    MultiRootTree.prototype.nodeRefrencesDelete = function (id) {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n                    var targetId = this.nodes[nodeKey][i];\n                    if (targetId === id) {\n                        this.nodeDeleteAtIndex(nodeKey, i);\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.nodeDelete = function (nodeKey) {\n        delete this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.findRootId = function (id) {\n        return this.rootIds.indexOf(id);\n    };\n    MultiRootTree.prototype.findNodeId = function (nodeKey, id) {\n        return this.nodes[nodeKey].indexOf(id);\n    };\n    MultiRootTree.prototype.findNode = function (nodeKey) {\n        return this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.nodeInsertAtStart = function (nodeKey, id) {\n        this.nodes[nodeKey].unshift(id);\n    };\n    MultiRootTree.prototype.nodeInsertAtEnd = function (nodeKey, id) {\n        this.nodes[nodeKey].push(id);\n    };\n    MultiRootTree.prototype.rootDelete = function (index) {\n        this.rootIds.splice(index, 1);\n    };\n    MultiRootTree.prototype.nodeDeleteAtIndex = function (nodeKey, index) {\n        this.nodes[nodeKey].splice(index, 1);\n    };\n    MultiRootTree.prototype.rootInsertAtStart = function (id) {\n        this.rootIds.unshift(id);\n    };\n    MultiRootTree.prototype.rootInsertAtEnd = function (id) {\n        this.rootIds.push(id);\n    };\n    return MultiRootTree;\n}());\nexports.default = MultiRootTree;\n//# sourceMappingURL=MultiRootTree.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typescript-collections/dist/lib/MultiRootTree.js\n// module id = 453\n// module chunks = 0","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Pair a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '8.0.1';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$toString :: Null ~> () -> String\n  function Null$prototype$toString() {\n    return 'null';\n  }\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$toString :: Undefined ~> () -> String\n  function Undefined$prototype$toString() {\n    return 'undefined';\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$toString :: Boolean ~> () -> String\n  function Boolean$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Boolean(' + toString(this.valueOf()) + ')' :\n      this.toString();\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$toString :: Number ~> () -> String\n  function Number$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Number(' + toString(this.valueOf()) + ')' :\n      1 / this === -Infinity ? '-0' : this.toString(10);\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this <= other;\n  }\n\n  //  Date$prototype$toString :: Date ~> () -> String\n  function Date$prototype$toString() {\n    var x = isNaN(this.valueOf()) ? NaN : this.toISOString();\n    return 'new Date(' + toString(x) + ')';\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$toString :: String ~> () -> String\n  function String$prototype$toString() {\n    return typeof this === 'object' ?\n      'new String(' + toString(this.valueOf()) + ')' :\n      JSON.stringify(this);\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var $todo = [x];\n    var $done = [];\n    while ($todo.length > 0) {\n      var xs = f(iterationNext, iterationDone, $todo.shift());\n      var $more = [];\n      for (var idx = 0; idx < xs.length; idx += 1) {\n        (xs[idx].done ? $done : $more).push(xs[idx].value);\n      }\n      Array.prototype.unshift.apply($todo, $more);\n    }\n    return $done;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$toString :: Array a ~> () -> String\n  function Array$prototype$toString() {\n    var reprs = this.map(toString);\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      if (!/^\\d+$/.test(k)) {\n        reprs.push(toString(k) + ': ' + toString(this[k]));\n      }\n    }\n    return '[' + reprs.join(', ') + ']';\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    this.forEach(function(x) { Array.prototype.push.apply(result, f(x)); });\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    return this.reduce(function(acc, x) { return f(acc, x); }, initial);\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$toString :: Arguments ~> String\n  function Arguments$prototype$toString() {\n    var args = Array.prototype.map.call(this, toString).join(', ');\n    return '(function () { return arguments; }(' + args + '))';\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$toString :: Error ~> () -> String\n  function Error$prototype$toString() {\n    return 'new ' + this.name + '(' + toString(this.message) + ')';\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$toString :: StrMap a ~> () -> String\n  function Object$prototype$toString() {\n    var reprs = [];\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      reprs.push(toString(k) + ': ' + toString(this[k]));\n    }\n    return '{' + reprs.join(', ') + '}';\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      prototype: {\n        toString:                   Null$prototype$toString,\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      prototype: {\n        toString:                   Undefined$prototype$toString,\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      prototype: {\n        toString:                   Boolean$prototype$toString,\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      prototype: {\n        toString:                   Number$prototype$toString,\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      prototype: {\n        toString:                   Date$prototype$toString,\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      prototype: {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      prototype: {\n        toString:                   String$prototype$toString,\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      prototype: {\n        toString:                   Array$prototype$toString,\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      prototype: {\n        toString:                   Arguments$prototype$toString,\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      prototype: {\n        toString:                   Error$prototype$toString,\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      prototype: {\n        toString:                   Object$prototype$toString,\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      prototype: {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# toString :: a -> String\n  //.\n  //. Returns a useful string representation of its argument.\n  //.\n  //. Dispatches to the argument's `toString` method if appropriate.\n  //.\n  //. Where practical, `equals(eval(toString(x)), x) = true`.\n  //.\n  //. `toString` implementations are provided for the following built-in types:\n  //. Null, Undefined, Boolean, Number, Date, String, Array, Arguments, Error,\n  //. and Object.\n  //.\n  //. ```javascript\n  //. > toString(-0)\n  //. '-0'\n  //.\n  //. > toString(['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > toString({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > toString(Cons(1, Cons(2, Cons(3, Nil))))\n  //. 'Cons(1, Cons(2, Cons(3, Nil)))'\n  //. ```\n  var toString = (function() {\n    //  $seen :: Array Any\n    var $seen = [];\n\n    function call(method, x) {\n      $seen.push(x);\n      try { return method.call(x); } finally { $seen.pop(); }\n    }\n\n    return function toString(x) {\n      if ($seen.indexOf(x) >= 0) return '<Circular>';\n\n      var xType = type(x);\n      if (xType === 'Object') {\n        var result;\n        try { result = call(x.toString, x); } catch (err) {}\n        if (result != null && result !== '[object Object]') return result;\n      }\n\n      return call(implPath([xType, 'prototype', 'toString']) || x.toString, x);\n    };\n  }());\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Pair Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Pair Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. of the given structure which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element of the given structure which satisfies the\n  //. predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first inner value which does not satisfy the predicate, and\n  //. all subsequent inner values.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first inner value which does not satisfy the predicate, and\n  //. all subsequent inner values.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(xs, x) {\n      var fx = f(x);\n      var lower = 0;\n      var upper = xs.length;\n      while (lower < upper) {\n        var idx = Math.floor((lower + upper) / 2);\n        if (lte(xs[idx].fx, fx)) lower = idx + 1; else upper = idx;\n      }\n      xs.splice(lower, 0, {x: x, fx: fx});\n      return xs;\n    }, [], foldable);\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (var idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    toString: toString,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    bimap: bimap,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sodiumjs/node_modules/sanctuary-type-classes/index.js\n// module id = 454\n// module chunks = 0","export * from \"./Worker-Loader\";\nexport * from \"./Worker-Start\";\n\n/* Example\n\n    Main thread:\n        const worker = await loadWorker();\n   \n        worker.addEventListener('message', (msg: MessageEvent) => {\n            switch(msg.data.cmd) {\n                case \"pong\":\n                    console.log(\"PONG\", msg.data.ts);\n                    break;\n            }\n        });\n\n        worker.postMessage({\n            cmd: \"ping\",\n            ts: performance.now()\n        });\n\n    Worker thread (ping/pong is builtin):\n        StartWorker();\n*/\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/worker/Worker.ts","export async function loadWorker() {\n    return new Promise<Worker>(resolve => {\n        const worker = new Worker('worker.shim.js');\n\n        const onInitial = (e: MessageEvent) => {\n            switch (e.data.cmd) {\n                case \"ready\":\n                    worker.removeEventListener('message', onInitial);\n                    resolve(worker);\n                    break;\n            }\n        }\n        //Wait for initial worker communication setup\n        worker.addEventListener('message', onInitial);\n        worker.postMessage({ cmd: 'init' });\n    });\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/worker/Worker-Loader.ts","//Loaded by worker bundle\nexport const StartWorker = () => {\n    self.addEventListener('message', (msg: MessageEvent) => {\n        switch(msg.data.cmd) {\n            case \"init\":\n                console.log(\"%cDrift - Worker Ready\", 'color: green; font-weight: bold;');\n\n                (self as any).postMessage({cmd: \"ready\"});\n                break;\n\n            case \"ping\":\n                (self as any).postMessage({\n                    cmd: \"pong\",\n                    ts: msg.data.ts,\n                });\n\n                break;\n        }\n    });\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/lib/worker/Worker-Start.ts","import {propsAtChildLensPath, InputSender} from \"../../lib/Drift\";\nimport * as L from \"partial.lenses\";\nimport { initialState } from '../state/State';\n\nconst BUTTONS:Array<[string, any]> = [\n    [\"red\", L.compose([propsAtChildLensPath([1,0,0]), \"interactive\"])],\n    [\"aqua\",  L.compose([propsAtChildLensPath([1,0,0,0]), \"interactive\"])],\n    [\"green\",  L.compose([propsAtChildLensPath([1,0,0,1]), \"interactive\"])],\n    [\"blue\",  L.compose([propsAtChildLensPath([1,0,0,1,0]), \"interactive\"])],\n    [\"yellow\",  L.compose([propsAtChildLensPath([1,0,0,1,0,0]), \"interactive\"])],\n]\n\nexport interface DomEventData {\n    lens: any;\n    interactive: boolean;\n}\nexport const startDom = (send:InputSender) => {\n    const uiElement = document.getElementById(\"ui\");\n    uiElement.setAttribute(\"style\", \"margin: 12px\");\n\n    const instructions = document.createElement(\"div\");\n    instructions.innerHTML = `\n        Use arrow keys (keyboard)\n        <br/>\n        Or touch to drag\n        <p/>\n        Toggle interactivity:              \n    `\n\n    const togglesList = document.createElement(\"ul\");\n    togglesList.setAttribute(\"style\", \"list-style: none; margin: 8px; padding: 0\");\n\n    BUTTONS.forEach(([label, lens]) => {\n        const eLi = document.createElement(\"li\");\n        const eLabel = document.createElement(\"span\");\n        eLabel.setAttribute(\"style\", \"margin-left: 8px; margin-bottom: 8px; cursor: pointer\");\n        eLabel.innerHTML = label;\n        \n        const eCheckbox = document.createElement(\"input\");\n        eCheckbox.type = \"checkbox\";\n        eCheckbox.checked = L.get(L.compose(lens)) (initialState);\n\n        eLi.appendChild(eCheckbox);\n        eLi.appendChild(eLabel);\n        togglesList.appendChild(eLi);\n\n        const broadcastChange = () => {\n            const evtData:DomEventData = {\n                lens: lens,\n                interactive: eCheckbox.checked\n            }\n\n            send({\n                sourceId: \"dom\",\n                data: evtData\n            });\n        }\n\n        eLabel.addEventListener(\"click\", evt => {\n            eCheckbox.checked = !eCheckbox.checked;\n            broadcastChange();\n        });\n\n        eCheckbox.addEventListener(\"change\", broadcastChange);\n    });\n\n    uiElement.appendChild(instructions);\n    uiElement.appendChild(togglesList);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/app/dom/Dom.ts","import {WebGlConstants, WebGlBufferActivateOptions, WebGlBufferData, StateElement, lWorldSpace, WebGlShaderSwitcher, WebGlBufferSwitcher, getStateElementClipSpaceImpure} from '../../lib/Drift';\nimport {Renderer} from \"../renderer/Renderer\";\nimport {mat4} from \"gl-matrix\";\nimport {lCameraMatrix} from \"../App-Main\";\n\nimport * as L from \"partial.lenses\";\n\nconst vertexShader = `\n    attribute vec4 a_Vertex;\n    uniform mat4 u_Transform;\n    uniform mat4 u_Size;\n    \n    void main() {     \n        gl_Position = u_Transform * (u_Size * a_Vertex);\n    }\n`;\n\nconst fragmentShader = `\n    precision mediump float;\n    uniform vec4 u_Color;\n\n    void main() {\n        gl_FragColor = u_Color;\n    }\n`;\n\nconst SHADER_ID = \"quad\";\nconst BUFFER_ID = \"quad\";\n\nexport const createQuadRenderer = (renderer:Renderer) => {\n    const {gl, shaders, buffers, getPicker} = renderer;\n\n    shaders.createShader(SHADER_ID)({\n        vertex: vertexShader,\n        fragment: fragmentShader\n    });\n\n    shaders.switchShaderProgram(SHADER_ID);\n\n    const attrib = shaders.getAttributeLocation(SHADER_ID);\n    const uniform = shaders.getUniformLocation(SHADER_ID);\n\n    const uSize = uniform(\"u_Size\");\n    const uTransform = uniform(\"u_Transform\");\n    const uColor = uniform(\"u_Color\");\n\n    const emptyPixel = Float32Array.from([0.0, 0.0, 0.0, 0.0]);\n    const sizeMatrix = mat4.create();\n    const transformMatrix = mat4.create();\n\n    const setClipSpace = getStateElementClipSpaceImpure(transformMatrix);\n\n    buffers.assignBuffer(BUFFER_ID) ({\n        target: WebGlConstants.ARRAY_BUFFER,\n        usagePattern: WebGlConstants.STATIC_DRAW,\n        data: new Float32Array([\n            0.0,1.0, // top-left\n            0.0,0.0, //bottom-left\n            1.0, 1.0, // top-right\n            1.0, 0.0 // bottom-right\n        ])\n    });\n\n    const bVertex: WebGlBufferActivateOptions = {\n        index: attrib(\"a_Vertex\"),\n        size: 2,\n        type: gl.FLOAT\n    };\n\n    return (state:StateElement) => (el:StateElement) => {\n        const {width, height, hitColor, color} = el.props;\n        \n        //console.log(hitColor);\n\n        shaders.switchShaderProgram(SHADER_ID);\n        \n        //render data\n        mat4.fromScaling(sizeMatrix, [width, height, 1]);\n        setClipSpace(L.get(lCameraMatrix) (state)) (el);\n        \n        //set uniform/attributes (color is set below based on interactive settings)\n\n        gl.uniformMatrix4fv(uSize, false, sizeMatrix);\n        gl.uniformMatrix4fv(uTransform, false, transformMatrix);\n\n        buffers.activateBuffer(BUFFER_ID) (bVertex);\n\n        \n        //for picker\n        const picker = getPicker();\n        if (hitColor !== undefined && picker !== undefined) {\n            picker.bind();\n            gl.uniform4fv(uColor, hitColor); //the colored quad just uses it for both\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            picker.unbind();\n        }\n\n        gl.uniform4fv(uColor,Float32Array.from(color));\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/app/quad/Quad.ts","import {\n    StateElement,\n    stateElementForEachWithPath,\n    createWebGlShaderSwitcher,\n    createWebGlBufferSwitcher,\n    makeFramebufferPicker,\n    WebGlShaderSwitcher,\n    WebGlBufferSwitcher,\n    WebGlFramebufferPicker,\n    getScreenSize,\n    rgbFromColorIndex,\n    PROPS\n} from \"../../lib/Drift\";\n\nimport * as L from \"partial.lenses\";\n\nexport interface Renderer {\n    elementRenderers: Map<string, (el: StateElement) => void>;\n    render: (state: StateElement) => StateElement;\n    resize: ({ width, height }: { width: number, height: number }) => void;\n    canvas: HTMLCanvasElement;\n    gl: WebGLRenderingContext;\n    shaders: WebGlShaderSwitcher;\n    buffers: WebGlBufferSwitcher;\n    getPicker: () => WebGlFramebufferPicker;\n    colorHitMap: Map<number, Array<number>>;\n}\n\nconst lHitColor = L.compose([PROPS, \"hitColor\"]);\nconst lInteractive = L.compose([PROPS, \"interactive\"]);\n\nexport const createRenderer = (): Renderer => {\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    const gl = (canvas.getContext(\"webgl\") as WebGLRenderingContext) || (canvas.getContext(\"experimental-webgl\") as WebGLRenderingContext);\n    const lastScreenSize = {\n        width: NaN,\n        height: NaN\n    }\n\n    const elementRenderers = new Map<string, (state:StateElement) => (el: StateElement) => void>();\n    const shaders = createWebGlShaderSwitcher(gl);\n    const buffers = createWebGlBufferSwitcher(gl);\n    const colorHitMap = new Map<number, Array<number>>();\n\n    let picker: WebGlFramebufferPicker; //gets reset on screen size\n\n    const render = (state: StateElement): StateElement => {\n        //Clear the webgl buffers\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (picker !== undefined) {\n            picker.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        colorHitMap.clear();        \n        let colorIndex = 0;\n\n        //Call the renderer for each element in the tree (if one is set)\n        stateElementForEachWithPath(([el, cPath]) => {\n            if (elementRenderers.has(el.type)) {\n                const elementRenderer = elementRenderers.get(el.type) (state);\n\n                if(L.get(lInteractive) (el)) {\n                    colorIndex++;\n                    const color = rgbFromColorIndex(colorIndex);\n                    colorHitMap.set(colorIndex, cPath);\n                    elementRenderer( \n                        L.set(lHitColor) (Float32Array.from([color[0], color[1], color[2], 1.0])) (el)\n                    )\n                } else {\n                    elementRenderer(el);\n                }\n            }\n        })\n        (state);\n\n        return state;\n    }\n\n    const resize = ({ width, height }: { width: number, height: number }) => {\n\n        if (lastScreenSize.width !== width || lastScreenSize.height !== height) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            if (picker !== undefined) {\n                picker.dispose();\n            }\n            picker = makeFramebufferPicker(gl)({ width: gl.drawingBufferWidth, height: gl.drawingBufferHeight });\n\n            lastScreenSize.width = width;\n            lastScreenSize.height = height;\n        }\n    }\n\n    gl.clearColor(0, 0, 0, 0);\n\n    return {\n        elementRenderers: elementRenderers,\n        render: render,\n        resize: resize,\n        canvas: canvas,\n        gl: gl,\n        shaders: shaders,\n        buffers: buffers,\n        colorHitMap: colorHitMap,\n        getPicker: () => picker\n    }\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/source-map-loader!./src/app/renderer/Renderer.ts"],"sourceRoot":""}